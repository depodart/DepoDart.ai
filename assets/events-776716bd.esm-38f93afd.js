import{r as nn,f as sy,j as Jg}from"./index-35409859.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Wc="153",oy={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ay={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Kg=0,nf=1,jg=2,ly=3,Qg=0,Xc=1,na=2,di=3,er=0,Rn=1,Pi=2,cy=2,$i=0,is=1,rf=2,sf=3,of=4,$g=5,jr=100,e0=101,t0=102,af=103,lf=104,n0=200,i0=201,r0=202,s0=203,Xf=204,Yf=205,o0=206,a0=207,l0=208,c0=209,u0=210,h0=0,f0=1,d0=2,zc=3,p0=4,m0=5,g0=6,_0=7,Aa=0,v0=1,y0=2,mi=0,x0=1,M0=2,S0=3,qf=4,E0=5,Yc=300,wr=301,Tr=302,la=303,ca=304,po=306,ua=1e3,Sn=1001,ha=1002,qt=1003,kc=1004,uy=1004,ia=1005,hy=1005,Zt=1006,Zf=1007,fy=1007,Ar=1008,dy=1008,Ui=1009,w0=1010,T0=1011,qc=1012,Jf=1013,Qi=1014,Li=1015,lo=1016,Kf=1017,jf=1018,xr=1020,A0=1021,Nn=1023,b0=1024,R0=1025,Mr=1026,as=1027,C0=1028,Qf=1029,P0=1030,$f=1031,ed=1033,Pc=33776,Lc=33777,Ic=33778,Uc=33779,cf=35840,uf=35841,hf=35842,ff=35843,L0=36196,df=37492,pf=37496,mf=37808,gf=37809,_f=37810,vf=37811,yf=37812,xf=37813,Mf=37814,Sf=37815,Ef=37816,wf=37817,Tf=37818,Af=37819,bf=37820,Rf=37821,Dc=36492,I0=36283,Cf=36284,Pf=36285,Lf=36286,U0=2200,D0=2201,N0=2202,fa=2300,da=2301,Nc=2302,$r=2400,es=2401,pa=2402,Zc=2500,td=2501,py=0,my=1,gy=2,nd=3e3,Sr=3001,F0=3200,O0=3201,Rr=0,B0=1,Er="",at="srgb",gi="srgb-linear",id="display-p3",_y=0,Fc=7680,vy=7681,yy=7682,xy=7683,My=34055,Sy=34056,Ey=5386,wy=512,Ty=513,Ay=514,by=515,Ry=516,Cy=517,Py=518,z0=519,k0=512,H0=513,V0=514,G0=515,W0=516,X0=517,Y0=518,q0=519,ma=35044,Ly=35048,Iy=35040,Uy=35045,Dy=35049,Ny=35041,Fy=35046,Oy=35050,By=35042,zy="100",If="300 es",Hc=1035,Ii=2e3,ga=2001;class nr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}const xn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let pm=1234567;const rs=Math.PI/180,co=180/Math.PI;function qn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(xn[r&255]+xn[r>>8&255]+xn[r>>16&255]+xn[r>>24&255]+"-"+xn[e&255]+xn[e>>8&255]+"-"+xn[e>>16&15|64]+xn[e>>24&255]+"-"+xn[t&63|128]+xn[t>>8&255]+"-"+xn[t>>16&255]+xn[t>>24&255]+xn[n&255]+xn[n>>8&255]+xn[n>>16&255]+xn[n>>24&255]).toLowerCase()}function Wt(r,e,t){return Math.max(e,Math.min(t,r))}function rd(r,e){return(r%e+e)%e}function ky(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Hy(r,e,t){return r!==e?(t-r)/(e-r):0}function ra(r,e,t){return(1-t)*r+t*e}function Vy(r,e,t,n){return ra(r,e,1-Math.exp(-t*n))}function Gy(r,e=1){return e-Math.abs(rd(r,e*2)-e)}function Wy(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Xy(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function Yy(r,e){return r+Math.floor(Math.random()*(e-r+1))}function qy(r,e){return r+Math.random()*(e-r)}function Zy(r){return r*(.5-Math.random())}function Jy(r){r!==void 0&&(pm=r);let e=pm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Ky(r){return r*rs}function jy(r){return r*co}function Uf(r){return(r&r-1)===0&&r!==0}function Z0(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Vc(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Qy(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),d=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),_=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*d,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*d,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*d,c*h);break;case"XZX":r.set(c*d,u*y,u*_,c*h);break;case"YXY":r.set(u*_,c*d,u*y,c*h);break;case"ZYZ":r.set(u*y,u*_,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Yn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ft(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const $y={DEG2RAD:rs,RAD2DEG:co,generateUUID:qn,clamp:Wt,euclideanModulo:rd,mapLinear:ky,inverseLerp:Hy,lerp:ra,damp:Vy,pingpong:Gy,smoothstep:Wy,smootherstep:Xy,randInt:Yy,randFloat:qy,randFloatSpread:Zy,seededRandom:Jy,degToRad:Ky,radToDeg:jy,isPowerOfTwo:Uf,ceilPowerOfTwo:Z0,floorPowerOfTwo:Vc,setQuaternionFromProperEuler:Qy,normalize:ft,denormalize:Yn};class fe{constructor(e=0,t=0){fe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Wt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ht{constructor(e,t,n,i,s,l,c,u,h){ht.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=l,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],_=n[5],y=n[8],E=i[0],x=i[3],v=i[6],w=i[1],S=i[4],A=i[7],R=i[2],C=i[5],N=i[8];return s[0]=l*E+c*w+u*R,s[3]=l*x+c*S+u*C,s[6]=l*v+c*A+u*N,s[1]=h*E+d*w+p*R,s[4]=h*x+d*S+p*C,s[7]=h*v+d*A+p*N,s[2]=m*E+_*w+y*R,s[5]=m*x+_*S+y*C,s[8]=m*v+_*A+y*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*l*d-t*c*h-n*s*d+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*l-c*h,m=c*u-d*s,_=h*s-l*u,y=t*p+n*m+i*_;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const E=1/y;return e[0]=p*E,e[1]=(i*h-d*n)*E,e[2]=(c*n-i*l)*E,e[3]=m*E,e[4]=(d*t-i*u)*E,e[5]=(i*s-c*t)*E,e[6]=_*E,e[7]=(n*u-h*t)*E,e[8]=(l*t-n*s)*E,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(mh.makeScale(e,t)),this}rotate(e){return this.premultiply(mh.makeRotation(-e)),this}translate(e,t){return this.premultiply(mh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const mh=new ht;function J0(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const ex={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function to(r,e){return new ex[r](e)}function _a(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}const mm={};function sa(r){r in mm||(mm[r]=!0,console.warn(r))}function oo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function gh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const tx=new ht().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),nx=new ht().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function ix(r){return r.convertSRGBToLinear().applyMatrix3(nx)}function rx(r){return r.applyMatrix3(tx).convertLinearToSRGB()}const sx={[gi]:r=>r,[at]:r=>r.convertSRGBToLinear(),[id]:ix},ox={[gi]:r=>r,[at]:r=>r.convertLinearToSRGB(),[id]:rx},ri={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return gi},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=sx[e],i=ox[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}};let Cs;class sd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Cs===void 0&&(Cs=_a("canvas")),Cs.width=e.width,Cs.height=e.height;const n=Cs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Cs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=_a("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=oo(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(oo(t[n]/255)*255):t[n]=oo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let ax=0;class ts{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ax++}),this.uuid=qn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(_h(i[l].image)):s.push(_h(i[l]))}else s=_h(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function _h(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?sd.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let lx=0;class Jt extends nr{constructor(e=Jt.DEFAULT_IMAGE,t=Jt.DEFAULT_MAPPING,n=Sn,i=Sn,s=Zt,l=Ar,c=Nn,u=Ui,h=Jt.DEFAULT_ANISOTROPY,d=Er){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:lx++}),this.uuid=qn(),this.name="",this.source=new ts(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new fe(0,0),this.repeat=new fe(1,1),this.center=new fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ht,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof d=="string"?this.colorSpace=d:(sa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=d===Sr?at:Er),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Yc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ua:e.x=e.x-Math.floor(e.x);break;case Sn:e.x=e.x<0?0:1;break;case ha:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ua:e.y=e.y-Math.floor(e.y);break;case Sn:e.y=e.y<0?0:1;break;case ha:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return sa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===at?Sr:nd}set encoding(e){sa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Sr?at:Er}}Jt.DEFAULT_IMAGE=null;Jt.DEFAULT_MAPPING=Yc;Jt.DEFAULT_ANISOTROPY=1;class At{constructor(e=0,t=0,n=0,i=1){At.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],_=u[5],y=u[9],E=u[2],x=u[6],v=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-E)<.01&&Math.abs(y-x)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+E)<.1&&Math.abs(y+x)<.1&&Math.abs(h+_+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const S=(h+1)/2,A=(_+1)/2,R=(v+1)/2,C=(d+m)/4,N=(p+E)/4,O=(y+x)/4;return S>A&&S>R?S<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(S),i=C/n,s=N/n):A>R?A<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(A),n=C/i,s=O/i):R<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(R),n=N/s,i=O/s),this.set(n,i,s,t),this}let w=Math.sqrt((x-y)*(x-y)+(p-E)*(p-E)+(m-d)*(m-d));return Math.abs(w)<.001&&(w=1),this.x=(x-y)/w,this.y=(p-E)/w,this.z=(m-d)/w,this.w=Math.acos((h+_+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class _i extends nr{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new At(0,0,e,t),this.scissorTest=!1,this.viewport=new At(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(sa("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Sr?at:Er),this.texture=new Jt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Zt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ts(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Jc extends Jt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=qt,this.minFilter=qt,this.wrapR=Sn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class cx extends _i{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Jc(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class od extends Jt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=qt,this.minFilter=qt,this.wrapR=Sn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ux extends _i{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new od(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class hx extends _i{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let l=0;l<n;l++)this.texture[l]=s.clone(),this.texture[l].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Fn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=s[l+0],_=s[l+1],y=s[l+2],E=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=_,e[t+2]=y,e[t+3]=E;return}if(p!==E||u!==m||h!==_||d!==y){let x=1-c;const v=u*m+h*_+d*y+p*E,w=v>=0?1:-1,S=1-v*v;if(S>Number.EPSILON){const R=Math.sqrt(S),C=Math.atan2(R,v*w);x=Math.sin(x*C)/R,c=Math.sin(c*C)/R}const A=c*w;if(u=u*x+m*A,h=h*x+_*A,d=d*x+y*A,p=p*x+E*A,x===1-c){const R=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=R,h*=R,d*=R,p*=R}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=s[l],m=s[l+1],_=s[l+2],y=s[l+3];return e[t]=c*y+d*p+u*_-h*m,e[t+1]=u*y+d*m+h*p-c*_,e[t+2]=h*y+d*_+c*m-u*p,e[t+3]=d*y-c*p-u*m-h*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(s/2),m=u(n/2),_=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"YXZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"ZXY":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"ZYX":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"YZX":this._x=m*d*p+h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p-m*_*y;break;case"XZY":this._x=m*d*p-h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p+m*_*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const _=.5/Math.sqrt(m+1);this._w=.25/_,this._x=(d-u)*_,this._y=(s-h)*_,this._z=(l-i)*_}else if(n>c&&n>p){const _=2*Math.sqrt(1+n-c-p);this._w=(d-u)/_,this._x=.25*_,this._y=(i+l)/_,this._z=(s+h)/_}else if(c>p){const _=2*Math.sqrt(1+c-n-p);this._w=(s-h)/_,this._x=(i+l)/_,this._y=.25*_,this._z=(u+d)/_}else{const _=2*Math.sqrt(1+p-n-c);this._w=(l-i)/_,this._x=(s+h)/_,this._y=(u+d)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Wt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+l*c+i*h-s*u,this._y=i*d+l*u+s*c-n*h,this._z=s*d+l*h+n*u-i*c,this._w=l*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const _=1-t;return this._w=_*l+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class U{constructor(e=0,t=0,n=0){U.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(gm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(gm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=u*t+l*i-c*n,d=u*n+c*t-s*i,p=u*i+s*n-l*t,m=-s*t-l*n-c*i;return this.x=h*u+m*-s+d*-c-p*-l,this.y=d*u+m*-l+p*-s-h*-c,this.z=p*u+m*-c+h*-l-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return vh.copy(this).projectOnVector(e),this.sub(vh)}reflect(e){return this.sub(vh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Wt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const vh=new U,gm=new Fn;class Fi{constructor(e=new U(1/0,1/0,1/0),t=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Xi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Xi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Xi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Ps.copy(e.boundingBox),Ps.applyMatrix4(e.matrixWorld),this.union(Ps);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const s=i.attributes.position;for(let l=0,c=s.count;l<c;l++)Xi.fromBufferAttribute(s,l).applyMatrix4(e.matrixWorld),this.expandByPoint(Xi)}else i.boundingBox===null&&i.computeBoundingBox(),Ps.copy(i.boundingBox),Ps.applyMatrix4(e.matrixWorld),this.union(Ps)}const n=e.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Xi),Xi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Vo),Hl.subVectors(this.max,Vo),Ls.subVectors(e.a,Vo),Is.subVectors(e.b,Vo),Us.subVectors(e.c,Vo),pr.subVectors(Is,Ls),mr.subVectors(Us,Is),Hr.subVectors(Ls,Us);let t=[0,-pr.z,pr.y,0,-mr.z,mr.y,0,-Hr.z,Hr.y,pr.z,0,-pr.x,mr.z,0,-mr.x,Hr.z,0,-Hr.x,-pr.y,pr.x,0,-mr.y,mr.x,0,-Hr.y,Hr.x,0];return!yh(t,Ls,Is,Us,Hl)||(t=[1,0,0,0,1,0,0,0,1],!yh(t,Ls,Is,Us,Hl))?!1:(Vl.crossVectors(pr,mr),t=[Vl.x,Vl.y,Vl.z],yh(t,Ls,Is,Us,Hl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Xi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Xi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Wi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Wi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Wi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Wi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Wi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Wi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Wi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Wi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Wi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Wi=[new U,new U,new U,new U,new U,new U,new U,new U],Xi=new U,Ps=new Fi,Ls=new U,Is=new U,Us=new U,pr=new U,mr=new U,Hr=new U,Vo=new U,Hl=new U,Vl=new U,Vr=new U;function yh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Vr.fromArray(r,s);const c=i.x*Math.abs(Vr.x)+i.y*Math.abs(Vr.y)+i.z*Math.abs(Vr.z),u=e.dot(Vr),h=t.dot(Vr),d=n.dot(Vr);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const fx=new Fi,Go=new U,xh=new U;class vi{constructor(e=new U,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):fx.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Go.subVectors(e,this.center);const t=Go.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Go,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(xh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Go.copy(e.center).add(xh)),this.expandByPoint(Go.copy(e.center).sub(xh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Yi=new U,Mh=new U,Gl=new U,gr=new U,Sh=new U,Wl=new U,Eh=new U;class mo{constructor(e=new U,t=new U(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Yi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Yi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Yi.copy(this.origin).addScaledVector(this.direction,t),Yi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Mh.copy(e).add(t).multiplyScalar(.5),Gl.copy(t).sub(e).normalize(),gr.copy(this.origin).sub(Mh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Gl),c=gr.dot(this.direction),u=-gr.dot(Gl),h=gr.lengthSq(),d=Math.abs(1-l*l);let p,m,_,y;if(d>0)if(p=l*u-c,m=l*c-u,y=s*d,p>=0)if(m>=-y)if(m<=y){const E=1/d;p*=E,m*=E,_=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),_=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Mh).addScaledVector(Gl,m),_}intersectSphere(e,t){Yi.subVectors(e.center,this.origin);const n=Yi.dot(this.direction),i=Yi.dot(Yi)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(s=(e.min.y-m.y)*d,l=(e.max.y-m.y)*d):(s=(e.max.y-m.y)*d,l=(e.min.y-m.y)*d),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Yi)!==null}intersectTriangle(e,t,n,i,s){Sh.subVectors(t,e),Wl.subVectors(n,e),Eh.crossVectors(Sh,Wl);let l=this.direction.dot(Eh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;gr.subVectors(this.origin,e);const u=c*this.direction.dot(Wl.crossVectors(gr,Wl));if(u<0)return null;const h=c*this.direction.dot(Sh.cross(gr));if(h<0||u+h>l)return null;const d=-c*gr.dot(Eh);return d<0?null:this.at(d/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ot{constructor(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x){ot.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x)}set(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=l,v[9]=c,v[13]=u,v[2]=h,v[6]=d,v[10]=p,v[14]=m,v[3]=_,v[7]=y,v[11]=E,v[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ot().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ds.setFromMatrixColumn(e,0).length(),s=1/Ds.setFromMatrixColumn(e,1).length(),l=1/Ds.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*d,_=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=_+y*h,t[5]=m-E*h,t[9]=-c*u,t[2]=E-m*h,t[6]=y+_*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*d,_=u*p,y=h*d,E=h*p;t[0]=m+E*c,t[4]=y*c-_,t[8]=l*h,t[1]=l*p,t[5]=l*d,t[9]=-c,t[2]=_*c-y,t[6]=E+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*d,_=u*p,y=h*d,E=h*p;t[0]=m-E*c,t[4]=-l*p,t[8]=y+_*c,t[1]=_+y*c,t[5]=l*d,t[9]=E-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*d,_=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=y*h-_,t[8]=m*h+E,t[1]=u*p,t[5]=E*h+m,t[9]=_*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,_=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=E-m*p,t[8]=y*p+_,t[1]=p,t[5]=l*d,t[9]=-c*d,t[2]=-h*d,t[6]=_*p+y,t[10]=m-E*p}else if(e.order==="XZY"){const m=l*u,_=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+E,t[5]=l*d,t[9]=_*p-y,t[2]=y*p-_,t[6]=c*d,t[10]=E*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(dx,e,px)}lookAt(e,t,n){const i=this.elements;return Wn.subVectors(e,t),Wn.lengthSq()===0&&(Wn.z=1),Wn.normalize(),_r.crossVectors(n,Wn),_r.lengthSq()===0&&(Math.abs(n.z)===1?Wn.x+=1e-4:Wn.z+=1e-4,Wn.normalize(),_r.crossVectors(n,Wn)),_r.normalize(),Xl.crossVectors(Wn,_r),i[0]=_r.x,i[4]=Xl.x,i[8]=Wn.x,i[1]=_r.y,i[5]=Xl.y,i[9]=Wn.y,i[2]=_r.z,i[6]=Xl.z,i[10]=Wn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],_=n[13],y=n[2],E=n[6],x=n[10],v=n[14],w=n[3],S=n[7],A=n[11],R=n[15],C=i[0],N=i[4],O=i[8],b=i[12],L=i[1],z=i[5],te=i[9],W=i[13],q=i[2],Q=i[6],ce=i[10],ie=i[14],V=i[3],Z=i[7],J=i[11],he=i[15];return s[0]=l*C+c*L+u*q+h*V,s[4]=l*N+c*z+u*Q+h*Z,s[8]=l*O+c*te+u*ce+h*J,s[12]=l*b+c*W+u*ie+h*he,s[1]=d*C+p*L+m*q+_*V,s[5]=d*N+p*z+m*Q+_*Z,s[9]=d*O+p*te+m*ce+_*J,s[13]=d*b+p*W+m*ie+_*he,s[2]=y*C+E*L+x*q+v*V,s[6]=y*N+E*z+x*Q+v*Z,s[10]=y*O+E*te+x*ce+v*J,s[14]=y*b+E*W+x*ie+v*he,s[3]=w*C+S*L+A*q+R*V,s[7]=w*N+S*z+A*Q+R*Z,s[11]=w*O+S*te+A*ce+R*J,s[15]=w*b+S*W+A*ie+R*he,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],_=e[14],y=e[3],E=e[7],x=e[11],v=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*_-n*u*_)+E*(+t*u*_-t*h*m+s*l*m-i*l*_+i*h*d-s*u*d)+x*(+t*h*p-t*c*_-s*l*p+n*l*_+s*c*d-n*h*d)+v*(-i*c*d-t*u*p+t*c*m+i*l*p-n*l*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],_=e[11],y=e[12],E=e[13],x=e[14],v=e[15],w=p*x*h-E*m*h+E*u*_-c*x*_-p*u*v+c*m*v,S=y*m*h-d*x*h-y*u*_+l*x*_+d*u*v-l*m*v,A=d*E*h-y*p*h+y*c*_-l*E*_-d*c*v+l*p*v,R=y*p*u-d*E*u-y*c*m+l*E*m+d*c*x-l*p*x,C=t*w+n*S+i*A+s*R;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/C;return e[0]=w*N,e[1]=(E*m*s-p*x*s-E*i*_+n*x*_+p*i*v-n*m*v)*N,e[2]=(c*x*s-E*u*s+E*i*h-n*x*h-c*i*v+n*u*v)*N,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*_-n*u*_)*N,e[4]=S*N,e[5]=(d*x*s-y*m*s+y*i*_-t*x*_-d*i*v+t*m*v)*N,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*v-t*u*v)*N,e[7]=(l*m*s-d*u*s+d*i*h-t*m*h-l*i*_+t*u*_)*N,e[8]=A*N,e[9]=(y*p*s-d*E*s-y*n*_+t*E*_+d*n*v-t*p*v)*N,e[10]=(l*E*s-y*c*s+y*n*h-t*E*h-l*n*v+t*c*v)*N,e[11]=(d*c*s-l*p*s-d*n*h+t*p*h+l*n*_-t*c*_)*N,e[12]=R*N,e[13]=(d*E*i-y*p*i+y*n*m-t*E*m-d*n*x+t*p*x)*N,e[14]=(y*c*i-l*E*i-y*n*u+t*E*u+l*n*x-t*c*x)*N,e[15]=(l*p*i-d*c*i+d*n*u-t*p*u-l*n*m+t*c*m)*N,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,d=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*l,0,h*u-i*c,d*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,d=l+l,p=c+c,m=s*h,_=s*d,y=s*p,E=l*d,x=l*p,v=c*p,w=u*h,S=u*d,A=u*p,R=n.x,C=n.y,N=n.z;return i[0]=(1-(E+v))*R,i[1]=(_+A)*R,i[2]=(y-S)*R,i[3]=0,i[4]=(_-A)*C,i[5]=(1-(m+v))*C,i[6]=(x+w)*C,i[7]=0,i[8]=(y+S)*N,i[9]=(x-w)*N,i[10]=(1-(m+E))*N,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ds.set(i[0],i[1],i[2]).length();const l=Ds.set(i[4],i[5],i[6]).length(),c=Ds.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],ui.copy(this);const h=1/s,d=1/l,p=1/c;return ui.elements[0]*=h,ui.elements[1]*=h,ui.elements[2]*=h,ui.elements[4]*=d,ui.elements[5]*=d,ui.elements[6]*=d,ui.elements[8]*=p,ui.elements[9]*=p,ui.elements[10]*=p,t.setFromRotationMatrix(ui),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Ii){const u=this.elements,h=2*s/(t-e),d=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let _,y;if(c===Ii)_=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===ga)_=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=d,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=_,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Ii){const u=this.elements,h=1/(t-e),d=1/(n-i),p=1/(l-s),m=(t+e)*h,_=(n+i)*d;let y,E;if(c===Ii)y=(l+s)*p,E=-2*p;else if(c===ga)y=s*p,E=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-_,u[2]=0,u[6]=0,u[10]=E,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ds=new U,ui=new ot,dx=new U(0,0,0),px=new U(1,1,1),_r=new U,Xl=new U,Wn=new U,_m=new ot,vm=new Fn;class ba{constructor(e=0,t=0,n=0,i=ba.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(Wt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,_),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Wt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,_),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Wt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,_),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Wt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,_),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Wt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,_));break;case"XZY":this._z=Math.asin(-Wt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return _m.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_m,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return vm.setFromEuler(this),this.setFromQuaternion(vm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ba.DEFAULT_ORDER="XYZ";class ss{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let mx=0;const ym=new U,Ns=new Fn,qi=new ot,Yl=new U,Wo=new U,gx=new U,_x=new Fn,xm=new U(1,0,0),Mm=new U(0,1,0),Sm=new U(0,0,1),vx={type:"added"},Em={type:"removed"};class Et extends nr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:mx++}),this.uuid=qn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Et.DEFAULT_UP.clone();const e=new U,t=new ba,n=new Fn,i=new U(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ot},normalMatrix:{value:new ht}}),this.matrix=new ot,this.matrixWorld=new ot,this.matrixAutoUpdate=Et.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new ss,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ns.setFromAxisAngle(e,t),this.quaternion.multiply(Ns),this}rotateOnWorldAxis(e,t){return Ns.setFromAxisAngle(e,t),this.quaternion.premultiply(Ns),this}rotateX(e){return this.rotateOnAxis(xm,e)}rotateY(e){return this.rotateOnAxis(Mm,e)}rotateZ(e){return this.rotateOnAxis(Sm,e)}translateOnAxis(e,t){return ym.copy(e).applyQuaternion(this.quaternion),this.position.add(ym.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(xm,e)}translateY(e){return this.translateOnAxis(Mm,e)}translateZ(e){return this.translateOnAxis(Sm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(qi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Yl.copy(e):Yl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Wo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?qi.lookAt(Wo,Yl,this.up):qi.lookAt(Yl,Wo,this.up),this.quaternion.setFromRotationMatrix(qi),i&&(qi.extractRotation(i.matrixWorld),Ns.setFromRotationMatrix(qi),this.quaternion.premultiply(Ns.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(vx)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Em)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Em)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),qi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),qi.multiply(e.parent.matrixWorld)),e.applyMatrix4(qi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const l=this.children[i].getObjectsByProperty(e,t);l.length>0&&(n=n.concat(l))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wo,e,gx),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wo,_x,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),d=l(e.images),p=l(e.shapes),m=l(e.skeletons),_=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),_.length>0&&(n.animations=_),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Et.DEFAULT_UP=new U(0,1,0);Et.DEFAULT_MATRIX_AUTO_UPDATE=!0;Et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const hi=new U,Zi=new U,wh=new U,Ji=new U,Fs=new U,Os=new U,wm=new U,Th=new U,Ah=new U,bh=new U;let ql=!1;class Dn{constructor(e=new U,t=new U,n=new U){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),hi.subVectors(e,t),i.cross(hi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){hi.subVectors(i,t),Zi.subVectors(n,t),wh.subVectors(e,t);const l=hi.dot(hi),c=hi.dot(Zi),u=hi.dot(wh),h=Zi.dot(Zi),d=Zi.dot(wh),p=l*h-c*c;if(p===0)return s.set(-2,-1,-1);const m=1/p,_=(h*u-c*d)*m,y=(l*d-c*u)*m;return s.set(1-_-y,y,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ji),Ji.x>=0&&Ji.y>=0&&Ji.x+Ji.y<=1}static getUV(e,t,n,i,s,l,c,u){return ql===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),ql=!0),this.getInterpolation(e,t,n,i,s,l,c,u)}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,Ji),u.setScalar(0),u.addScaledVector(s,Ji.x),u.addScaledVector(l,Ji.y),u.addScaledVector(c,Ji.z),u}static isFrontFacing(e,t,n,i){return hi.subVectors(n,t),Zi.subVectors(e,t),hi.cross(Zi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return hi.subVectors(this.c,this.b),Zi.subVectors(this.a,this.b),hi.cross(Zi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Dn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Dn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return ql===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),ql=!0),Dn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return Dn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Dn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Dn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;Fs.subVectors(i,n),Os.subVectors(s,n),Th.subVectors(e,n);const u=Fs.dot(Th),h=Os.dot(Th);if(u<=0&&h<=0)return t.copy(n);Ah.subVectors(e,i);const d=Fs.dot(Ah),p=Os.dot(Ah);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return l=u/(u-d),t.copy(n).addScaledVector(Fs,l);bh.subVectors(e,s);const _=Fs.dot(bh),y=Os.dot(bh);if(y>=0&&_<=y)return t.copy(s);const E=_*h-u*y;if(E<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Os,c);const x=d*y-_*p;if(x<=0&&p-d>=0&&_-y>=0)return wm.subVectors(s,i),c=(p-d)/(p-d+(_-y)),t.copy(i).addScaledVector(wm,c);const v=1/(x+E+m);return l=E*v,c=m*v,t.copy(n).addScaledVector(Fs,l).addScaledVector(Os,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let yx=0;class En extends nr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:yx++}),this.uuid=qn(),this.name="",this.type="Material",this.blending=is,this.side=er,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Xf,this.blendDst=Yf,this.blendEquation=jr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=zc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=z0,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Fc,this.stencilZFail=Fc,this.stencilZPass=Fc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==is&&(n.blending=this.blending),this.side!==er&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const K0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},fi={h:0,s:0,l:0},Zl={h:0,s:0,l:0};function Rh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=at){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ri.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=ri.workingColorSpace){return this.r=e,this.g=t,this.b=n,ri.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=ri.workingColorSpace){if(e=rd(e,1),t=Wt(t,0,1),n=Wt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=Rh(l,s,e+1/3),this.g=Rh(l,s,e),this.b=Rh(l,s,e-1/3)}return ri.toWorkingColorSpace(this,i),this}setStyle(e,t=at){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=at){const n=K0[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=oo(e.r),this.g=oo(e.g),this.b=oo(e.b),this}copyLinearToSRGB(e){return this.r=gh(e.r),this.g=gh(e.g),this.b=gh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=at){return ri.fromWorkingColorSpace(Mn.copy(this),e),Math.round(Wt(Mn.r*255,0,255))*65536+Math.round(Wt(Mn.g*255,0,255))*256+Math.round(Wt(Mn.b*255,0,255))}getHexString(e=at){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ri.workingColorSpace){ri.fromWorkingColorSpace(Mn.copy(this),t);const n=Mn.r,i=Mn.g,s=Mn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=d<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=ri.workingColorSpace){return ri.fromWorkingColorSpace(Mn.copy(this),t),e.r=Mn.r,e.g=Mn.g,e.b=Mn.b,e}getStyle(e=at){ri.fromWorkingColorSpace(Mn.copy(this),e);const t=Mn.r,n=Mn.g,i=Mn.b;return e!==at?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(fi),fi.h+=e,fi.s+=t,fi.l+=n,this.setHSL(fi.h,fi.s,fi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(fi),e.getHSL(Zl);const n=ra(fi.h,Zl.h,t),i=ra(fi.s,Zl.s,t),s=ra(fi.l,Zl.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Mn=new Le;Le.NAMES=K0;class Cr extends En{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Aa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const ji=xx();function xx(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Un(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Wt(r,-65504,65504),ji.floatView[0]=r;const e=ji.uint32View[0],t=e>>23&511;return ji.baseTable[t]+((e&8388607)>>ji.shiftTable[t])}function ea(r){const e=r>>10;return ji.uint32View[0]=ji.mantissaTable[ji.offsetTable[e]+(r&1023)]+ji.exponentTable[e],ji.floatView[0]}const Mx={toHalfFloat:Un,fromHalfFloat:ea},$t=new U,Jl=new fe;class Pt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=ma,this.updateRange={offset:0,count:-1},this.gpuType=Li,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Jl.fromBufferAttribute(this,t),Jl.applyMatrix3(e),this.setXY(t,Jl.x,Jl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)$t.fromBufferAttribute(this,t),$t.applyMatrix3(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)$t.fromBufferAttribute(this,t),$t.applyMatrix4(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)$t.fromBufferAttribute(this,t),$t.applyNormalMatrix(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)$t.fromBufferAttribute(this,t),$t.transformDirection(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Yn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Yn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Yn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Yn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array),s=ft(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ma&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Sx extends Pt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Ex extends Pt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class wx extends Pt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Tx extends Pt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class ad extends Pt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Ax extends Pt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class ld extends Pt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class bx extends Pt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ea(this.array[e*this.itemSize]);return this.normalized&&(t=Yn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize]=Un(t),this}getY(e){let t=ea(this.array[e*this.itemSize+1]);return this.normalized&&(t=Yn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+1]=Un(t),this}getZ(e){let t=ea(this.array[e*this.itemSize+2]);return this.normalized&&(t=Yn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+2]=Un(t),this}getW(e){let t=ea(this.array[e*this.itemSize+3]);return this.normalized&&(t=Yn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+3]=Un(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array)),this.array[e+0]=Un(t),this.array[e+1]=Un(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array)),this.array[e+0]=Un(t),this.array[e+1]=Un(n),this.array[e+2]=Un(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array),s=ft(s,this.array)),this.array[e+0]=Un(t),this.array[e+1]=Un(n),this.array[e+2]=Un(i),this.array[e+3]=Un(s),this}}class Be extends Pt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Rx extends Pt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Cx=0;const ii=new ot,Ch=new Et,Bs=new U,Xn=new Fi,Xo=new Fi,cn=new U;class mt extends nr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Cx++}),this.uuid=qn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(J0(e)?ld:ad)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new ht().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ii.makeRotationFromQuaternion(e),this.applyMatrix4(ii),this}rotateX(e){return ii.makeRotationX(e),this.applyMatrix4(ii),this}rotateY(e){return ii.makeRotationY(e),this.applyMatrix4(ii),this}rotateZ(e){return ii.makeRotationZ(e),this.applyMatrix4(ii),this}translate(e,t,n){return ii.makeTranslation(e,t,n),this.applyMatrix4(ii),this}scale(e,t,n){return ii.makeScale(e,t,n),this.applyMatrix4(ii),this}lookAt(e){return Ch.lookAt(e),Ch.updateMatrix(),this.applyMatrix4(Ch.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Bs).negate(),this.translate(Bs.x,Bs.y,Bs.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Be(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Fi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Xn.setFromBufferAttribute(s),this.morphTargetsRelative?(cn.addVectors(this.boundingBox.min,Xn.min),this.boundingBox.expandByPoint(cn),cn.addVectors(this.boundingBox.max,Xn.max),this.boundingBox.expandByPoint(cn)):(this.boundingBox.expandByPoint(Xn.min),this.boundingBox.expandByPoint(Xn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new vi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new U,1/0);return}if(e){const n=this.boundingSphere.center;if(Xn.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];Xo.setFromBufferAttribute(c),this.morphTargetsRelative?(cn.addVectors(Xn.min,Xo.min),Xn.expandByPoint(cn),cn.addVectors(Xn.max,Xo.max),Xn.expandByPoint(cn)):(Xn.expandByPoint(Xo.min),Xn.expandByPoint(Xo.max))}Xn.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)cn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(cn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)cn.fromBufferAttribute(c,h),u&&(Bs.fromBufferAttribute(e,h),cn.add(Bs)),i=Math.max(i,n.distanceToSquared(cn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,l=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Pt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let L=0;L<c;L++)h[L]=new U,d[L]=new U;const p=new U,m=new U,_=new U,y=new fe,E=new fe,x=new fe,v=new U,w=new U;function S(L,z,te){p.fromArray(i,L*3),m.fromArray(i,z*3),_.fromArray(i,te*3),y.fromArray(l,L*2),E.fromArray(l,z*2),x.fromArray(l,te*2),m.sub(p),_.sub(p),E.sub(y),x.sub(y);const W=1/(E.x*x.y-x.x*E.y);isFinite(W)&&(v.copy(m).multiplyScalar(x.y).addScaledVector(_,-E.y).multiplyScalar(W),w.copy(_).multiplyScalar(E.x).addScaledVector(m,-x.x).multiplyScalar(W),h[L].add(v),h[z].add(v),h[te].add(v),d[L].add(w),d[z].add(w),d[te].add(w))}let A=this.groups;A.length===0&&(A=[{start:0,count:n.length}]);for(let L=0,z=A.length;L<z;++L){const te=A[L],W=te.start,q=te.count;for(let Q=W,ce=W+q;Q<ce;Q+=3)S(n[Q+0],n[Q+1],n[Q+2])}const R=new U,C=new U,N=new U,O=new U;function b(L){N.fromArray(s,L*3),O.copy(N);const z=h[L];R.copy(z),R.sub(N.multiplyScalar(N.dot(z))).normalize(),C.crossVectors(O,z);const W=C.dot(d[L])<0?-1:1;u[L*4]=R.x,u[L*4+1]=R.y,u[L*4+2]=R.z,u[L*4+3]=W}for(let L=0,z=A.length;L<z;++L){const te=A[L],W=te.start,q=te.count;for(let Q=W,ce=W+q;Q<ce;Q+=3)b(n[Q+0]),b(n[Q+1]),b(n[Q+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Pt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,_=n.count;m<_;m++)n.setXYZ(m,0,0,0);const i=new U,s=new U,l=new U,c=new U,u=new U,h=new U,d=new U,p=new U;if(e)for(let m=0,_=e.count;m<_;m+=3){const y=e.getX(m+0),E=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,E),l.fromBufferAttribute(t,x),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,E),h.fromBufferAttribute(n,x),c.add(d),u.add(d),h.add(d),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(E,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,_=t.count;m<_;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)cn.fromBufferAttribute(e,t),cn.normalize(),e.setXYZ(t,cn.x,cn.y,cn.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let _=0,y=0;for(let E=0,x=u.length;E<x;E++){c.isInterleavedBufferAttribute?_=u[E]*c.data.stride+c.offset:_=u[E]*d;for(let v=0;v<d;v++)m[y++]=h[_++]}return new Pt(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new mt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],_=e(m,n);u.push(_)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p];d.push(_.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],p=s[h];for(let m=0,_=p.length;m<_;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,d=l.length;h<d;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Tm=new ot,Gr=new mo,Kl=new vi,Am=new U,zs=new U,ks=new U,Hs=new U,Ph=new U,jl=new U,Ql=new fe,$l=new fe,ec=new fe,bm=new U,Rm=new U,Cm=new U,tc=new U,nc=new U;class dn extends Et{constructor(e=new mt,t=new Cr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){jl.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],p=s[u];d!==0&&(Ph.fromBufferAttribute(p,e),l?jl.addScaledVector(Ph,d):jl.addScaledVector(Ph.sub(t),d))}t.add(jl)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Kl.copy(n.boundingSphere),Kl.applyMatrix4(s),Gr.copy(e.ray).recast(e.near),!(Kl.containsPoint(Gr.origin)===!1&&(Gr.intersectSphere(Kl,Am)===null||Gr.origin.distanceToSquared(Am)>(e.far-e.near)**2))&&(Tm.copy(s).invert(),Gr.copy(e.ray).applyMatrix4(Tm),!(n.boundingBox!==null&&Gr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Gr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,d=s.attributes.uv1,p=s.attributes.normal,m=s.groups,_=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),S=Math.min(c.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,R=S;A<R;A+=3){const C=c.getX(A),N=c.getX(A+1),O=c.getX(A+2);i=ic(this,v,e,n,h,d,p,C,N,O),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),E=Math.min(c.count,_.start+_.count);for(let x=y,v=E;x<v;x+=3){const w=c.getX(x),S=c.getX(x+1),A=c.getX(x+2);i=ic(this,l,e,n,h,d,p,w,S,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),S=Math.min(u.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,R=S;A<R;A+=3){const C=A,N=A+1,O=A+2;i=ic(this,v,e,n,h,d,p,C,N,O),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),E=Math.min(u.count,_.start+_.count);for(let x=y,v=E;x<v;x+=3){const w=x,S=x+1,A=x+2;i=ic(this,l,e,n,h,d,p,w,S,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function Px(r,e,t,n,i,s,l,c){let u;if(e.side===Rn?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===er,c),u===null)return null;nc.copy(c),nc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(nc);return h<t.near||h>t.far?null:{distance:h,point:nc.clone(),object:r}}function ic(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,zs),r.getVertexPosition(u,ks),r.getVertexPosition(h,Hs);const d=Px(r,e,t,n,zs,ks,Hs,tc);if(d){i&&(Ql.fromBufferAttribute(i,c),$l.fromBufferAttribute(i,u),ec.fromBufferAttribute(i,h),d.uv=Dn.getInterpolation(tc,zs,ks,Hs,Ql,$l,ec,new fe)),s&&(Ql.fromBufferAttribute(s,c),$l.fromBufferAttribute(s,u),ec.fromBufferAttribute(s,h),d.uv1=Dn.getInterpolation(tc,zs,ks,Hs,Ql,$l,ec,new fe),d.uv2=d.uv1),l&&(bm.fromBufferAttribute(l,c),Rm.fromBufferAttribute(l,u),Cm.fromBufferAttribute(l,h),d.normal=Dn.getInterpolation(tc,zs,ks,Hs,bm,Rm,Cm,new U),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new U,materialIndex:0};Dn.getNormal(zs,ks,Hs,p.normal),d.face=p}return d}class Pr extends mt{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],d=[],p=[];let m=0,_=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Be(h,3)),this.setAttribute("normal",new Be(d,3)),this.setAttribute("uv",new Be(p,2));function y(E,x,v,w,S,A,R,C,N,O,b){const L=A/N,z=R/O,te=A/2,W=R/2,q=C/2,Q=N+1,ce=O+1;let ie=0,V=0;const Z=new U;for(let J=0;J<ce;J++){const he=J*z-W;for(let X=0;X<Q;X++){const le=X*L-te;Z[E]=le*w,Z[x]=he*S,Z[v]=q,h.push(Z.x,Z.y,Z.z),Z[E]=0,Z[x]=0,Z[v]=C>0?1:-1,d.push(Z.x,Z.y,Z.z),p.push(X/N),p.push(1-J/O),ie+=1}}for(let J=0;J<O;J++)for(let he=0;he<N;he++){const X=m+he+Q*J,le=m+he+Q*(J+1),de=m+(he+1)+Q*(J+1),Se=m+(he+1)+Q*J;u.push(X,le,Se),u.push(le,de,Se),V+=6}c.addGroup(_,V,b),_+=V,m+=ie}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function uo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function bn(r){const e={};for(let t=0;t<r.length;t++){const n=uo(r[t]);for(const i in n)e[i]=n[i]}return e}function Lx(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function j0(r){return r.getRenderTarget()===null?r.outputColorSpace:gi}const Q0={clone:uo,merge:bn};var Ix=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Ux=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ni extends En{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Ix,this.fragmentShader=Ux,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=uo(e.uniforms),this.uniformsGroups=Lx(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ra extends Et{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ot,this.projectionMatrix=new ot,this.projectionMatrixInverse=new ot,this.coordinateSystem=Ii}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class un extends Ra{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=co*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(rs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return co*2*Math.atan(Math.tan(rs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(rs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Vs=-90,Gs=1;class $0 extends Et{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new un(Vs,Gs,e,t);i.layers=this.layers,this.add(i);const s=new un(Vs,Gs,e,t);s.layers=this.layers,this.add(s);const l=new un(Vs,Gs,e,t);l.layers=this.layers,this.add(l);const c=new un(Vs,Gs,e,t);c.layers=this.layers,this.add(c);const u=new un(Vs,Gs,e,t);u.layers=this.layers,this.add(u);const h=new un(Vs,Gs,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Ii)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===ga)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,s,l,c,u,h]=this.children,d=e.getRenderTarget(),p=e.toneMapping,m=e.xr.enabled;e.toneMapping=mi,e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,l),e.setRenderTarget(n,3),e.render(t,c),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=_,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(d),e.toneMapping=p,e.xr.enabled=m,n.texture.needsPMREMUpdate=!0}}class Ca extends Jt{constructor(e,t,n,i,s,l,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:wr,super(e,t,n,i,s,l,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class e_ extends _i{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(sa("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Sr?at:Er),this.texture=new Ca(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Zt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Pr(5,5,5),s=new Ni({name:"CubemapFromEquirect",uniforms:uo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Rn,blending:$i});s.uniforms.tEquirect.value=t;const l=new dn(i,s),c=t.minFilter;return t.minFilter===Ar&&(t.minFilter=Zt),new $0(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const Lh=new U,Dx=new U,Nx=new ht;class yr{constructor(e=new U(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Lh.subVectors(n,t).cross(Dx.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Lh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Nx.getNormalMatrix(e),i=this.coplanarPoint(Lh).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Wr=new vi,rc=new U;class Kc{constructor(e=new yr,t=new yr,n=new yr,i=new yr,s=new yr,l=new yr){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ii){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],d=i[5],p=i[6],m=i[7],_=i[8],y=i[9],E=i[10],x=i[11],v=i[12],w=i[13],S=i[14],A=i[15];if(n[0].setComponents(u-s,m-h,x-_,A-v).normalize(),n[1].setComponents(u+s,m+h,x+_,A+v).normalize(),n[2].setComponents(u+l,m+d,x+y,A+w).normalize(),n[3].setComponents(u-l,m-d,x-y,A-w).normalize(),n[4].setComponents(u-c,m-p,x-E,A-S).normalize(),t===Ii)n[5].setComponents(u+c,m+p,x+E,A+S).normalize();else if(t===ga)n[5].setComponents(c,p,E,S).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Wr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Wr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Wr)}intersectsSprite(e){return Wr.center.set(0,0,0),Wr.radius=.7071067811865476,Wr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Wr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(rc.x=i.normal.x>0?e.max.x:e.min.x,rc.y=i.normal.y>0?e.max.y:e.min.y,rc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(rc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function t_(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function Fx(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const p=h.array,m=h.usage,_=r.createBuffer();r.bindBuffer(d,_),r.bufferData(d,p,m),h.onUploadCallback();let y;if(p instanceof Float32Array)y=r.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)y=r.SHORT;else if(p instanceof Uint32Array)y=r.UNSIGNED_INT;else if(p instanceof Int32Array)y=r.INT;else if(p instanceof Int8Array)y=r.BYTE;else if(p instanceof Uint8Array)y=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)y=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:_,type:y,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function s(h,d,p){const m=d.array,_=d.updateRange;r.bindBuffer(p,h),_.count===-1?r.bufferSubData(p,0,m):(t?r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m,_.offset,_.count):r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m.subarray(_.offset,_.offset+_.count)),_.count=-1),d.onUploadCallback()}function l(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(r.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,d)):p.version<h.version&&(s(p.buffer,h,d),p.version=h.version)}return{get:l,remove:c,update:u}}class go extends mt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,_=[],y=[],E=[],x=[];for(let v=0;v<d;v++){const w=v*m-l;for(let S=0;S<h;S++){const A=S*p-s;y.push(A,-w,0),E.push(0,0,1),x.push(S/c),x.push(1-v/u)}}for(let v=0;v<u;v++)for(let w=0;w<c;w++){const S=w+h*v,A=w+h*(v+1),R=w+1+h*(v+1),C=w+1+h*v;_.push(S,A,C),_.push(A,R,C)}this.setIndex(_),this.setAttribute("position",new Be(y,3)),this.setAttribute("normal",new Be(E,3)),this.setAttribute("uv",new Be(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new go(e.width,e.height,e.widthSegments,e.heightSegments)}}var Ox=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Bx=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,zx=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,kx=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Hx=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Vx=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Gx="vec3 transformed = vec3( position );",Wx=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Xx=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Yx=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,qx=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Zx=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Jx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Kx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,jx=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Qx=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,$x=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,eM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,tM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,nM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,iM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,rM=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,sM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,oM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,aM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,lM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,cM="gl_FragColor = linearToOutputTexel( gl_FragColor );",uM=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,hM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,fM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,dM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,pM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,mM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,gM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,_M=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,vM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,yM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,xM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,MM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,SM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,EM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,wM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,TM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,AM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,bM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,RM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,CM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,PM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,LM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,IM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,UM=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,DM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,NM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,FM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,OM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,BM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,zM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,kM=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,HM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,VM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,GM=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,WM=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,XM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,YM=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,qM=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,ZM=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,JM=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,KM=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,jM=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,QM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,$M=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,eS=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,tS=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,nS=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,iS=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,rS=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,sS=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,oS=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,aS=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,lS=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,cS=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,uS=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,hS=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,fS=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,dS=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,pS=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,mS=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,gS=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,_S=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,vS=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,yS=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,xS=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,MS=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,SS=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,ES=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,wS=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,TS=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,AS=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,bS=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,RS=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,CS=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,PS=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,LS=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const IS=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,US=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,DS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,NS=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,FS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,OS=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,BS=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,zS=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,kS=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,HS=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,VS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,GS=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,WS=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,XS=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,YS=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,qS=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ZS=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,JS=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,KS=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,jS=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,QS=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,$S=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,eE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,iE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,oE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,aE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,lE=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,uE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,hE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ut={alphamap_fragment:Ox,alphamap_pars_fragment:Bx,alphatest_fragment:zx,alphatest_pars_fragment:kx,aomap_fragment:Hx,aomap_pars_fragment:Vx,begin_vertex:Gx,beginnormal_vertex:Wx,bsdfs:Xx,iridescence_fragment:Yx,bumpmap_pars_fragment:qx,clipping_planes_fragment:Zx,clipping_planes_pars_fragment:Jx,clipping_planes_pars_vertex:Kx,clipping_planes_vertex:jx,color_fragment:Qx,color_pars_fragment:$x,color_pars_vertex:eM,color_vertex:tM,common:nM,cube_uv_reflection_fragment:iM,defaultnormal_vertex:rM,displacementmap_pars_vertex:sM,displacementmap_vertex:oM,emissivemap_fragment:aM,emissivemap_pars_fragment:lM,encodings_fragment:cM,encodings_pars_fragment:uM,envmap_fragment:hM,envmap_common_pars_fragment:fM,envmap_pars_fragment:dM,envmap_pars_vertex:pM,envmap_physical_pars_fragment:AM,envmap_vertex:mM,fog_vertex:gM,fog_pars_vertex:_M,fog_fragment:vM,fog_pars_fragment:yM,gradientmap_pars_fragment:xM,lightmap_fragment:MM,lightmap_pars_fragment:SM,lights_lambert_fragment:EM,lights_lambert_pars_fragment:wM,lights_pars_begin:TM,lights_toon_fragment:bM,lights_toon_pars_fragment:RM,lights_phong_fragment:CM,lights_phong_pars_fragment:PM,lights_physical_fragment:LM,lights_physical_pars_fragment:IM,lights_fragment_begin:UM,lights_fragment_maps:DM,lights_fragment_end:NM,logdepthbuf_fragment:FM,logdepthbuf_pars_fragment:OM,logdepthbuf_pars_vertex:BM,logdepthbuf_vertex:zM,map_fragment:kM,map_pars_fragment:HM,map_particle_fragment:VM,map_particle_pars_fragment:GM,metalnessmap_fragment:WM,metalnessmap_pars_fragment:XM,morphcolor_vertex:YM,morphnormal_vertex:qM,morphtarget_pars_vertex:ZM,morphtarget_vertex:JM,normal_fragment_begin:KM,normal_fragment_maps:jM,normal_pars_fragment:QM,normal_pars_vertex:$M,normal_vertex:eS,normalmap_pars_fragment:tS,clearcoat_normal_fragment_begin:nS,clearcoat_normal_fragment_maps:iS,clearcoat_pars_fragment:rS,iridescence_pars_fragment:sS,output_fragment:oS,packing:aS,premultiplied_alpha_fragment:lS,project_vertex:cS,dithering_fragment:uS,dithering_pars_fragment:hS,roughnessmap_fragment:fS,roughnessmap_pars_fragment:dS,shadowmap_pars_fragment:pS,shadowmap_pars_vertex:mS,shadowmap_vertex:gS,shadowmask_pars_fragment:_S,skinbase_vertex:vS,skinning_pars_vertex:yS,skinning_vertex:xS,skinnormal_vertex:MS,specularmap_fragment:SS,specularmap_pars_fragment:ES,tonemapping_fragment:wS,tonemapping_pars_fragment:TS,transmission_fragment:AS,transmission_pars_fragment:bS,uv_pars_fragment:RS,uv_pars_vertex:CS,uv_vertex:PS,worldpos_vertex:LS,background_vert:IS,background_frag:US,backgroundCube_vert:DS,backgroundCube_frag:NS,cube_vert:FS,cube_frag:OS,depth_vert:BS,depth_frag:zS,distanceRGBA_vert:kS,distanceRGBA_frag:HS,equirect_vert:VS,equirect_frag:GS,linedashed_vert:WS,linedashed_frag:XS,meshbasic_vert:YS,meshbasic_frag:qS,meshlambert_vert:ZS,meshlambert_frag:JS,meshmatcap_vert:KS,meshmatcap_frag:jS,meshnormal_vert:QS,meshnormal_frag:$S,meshphong_vert:eE,meshphong_frag:tE,meshphysical_vert:nE,meshphysical_frag:iE,meshtoon_vert:rE,meshtoon_frag:sE,points_vert:oE,points_frag:aE,shadow_vert:lE,shadow_frag:cE,sprite_vert:uE,sprite_frag:hE},Me={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ht},alphaMap:{value:null},alphaMapTransform:{value:new ht},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ht}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ht}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ht}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ht},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ht},normalScale:{value:new fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ht},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ht}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ht}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ht}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ht},alphaTest:{value:0},uvTransform:{value:new ht}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new fe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ht},alphaMap:{value:null},alphaMapTransform:{value:new ht},alphaTest:{value:0}}},pi={basic:{uniforms:bn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.fog]),vertexShader:ut.meshbasic_vert,fragmentShader:ut.meshbasic_frag},lambert:{uniforms:bn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.fog,Me.lights,{emissive:{value:new Le(0)}}]),vertexShader:ut.meshlambert_vert,fragmentShader:ut.meshlambert_frag},phong:{uniforms:bn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.fog,Me.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:ut.meshphong_vert,fragmentShader:ut.meshphong_frag},standard:{uniforms:bn([Me.common,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.roughnessmap,Me.metalnessmap,Me.fog,Me.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag},toon:{uniforms:bn([Me.common,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.gradientmap,Me.fog,Me.lights,{emissive:{value:new Le(0)}}]),vertexShader:ut.meshtoon_vert,fragmentShader:ut.meshtoon_frag},matcap:{uniforms:bn([Me.common,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.fog,{matcap:{value:null}}]),vertexShader:ut.meshmatcap_vert,fragmentShader:ut.meshmatcap_frag},points:{uniforms:bn([Me.points,Me.fog]),vertexShader:ut.points_vert,fragmentShader:ut.points_frag},dashed:{uniforms:bn([Me.common,Me.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ut.linedashed_vert,fragmentShader:ut.linedashed_frag},depth:{uniforms:bn([Me.common,Me.displacementmap]),vertexShader:ut.depth_vert,fragmentShader:ut.depth_frag},normal:{uniforms:bn([Me.common,Me.bumpmap,Me.normalmap,Me.displacementmap,{opacity:{value:1}}]),vertexShader:ut.meshnormal_vert,fragmentShader:ut.meshnormal_frag},sprite:{uniforms:bn([Me.sprite,Me.fog]),vertexShader:ut.sprite_vert,fragmentShader:ut.sprite_frag},background:{uniforms:{uvTransform:{value:new ht},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ut.background_vert,fragmentShader:ut.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ut.backgroundCube_vert,fragmentShader:ut.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ut.cube_vert,fragmentShader:ut.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ut.equirect_vert,fragmentShader:ut.equirect_frag},distanceRGBA:{uniforms:bn([Me.common,Me.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ut.distanceRGBA_vert,fragmentShader:ut.distanceRGBA_frag},shadow:{uniforms:bn([Me.lights,Me.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:ut.shadow_vert,fragmentShader:ut.shadow_frag}};pi.physical={uniforms:bn([pi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ht},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ht},clearcoatNormalScale:{value:new fe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ht},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ht},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ht},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ht},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ht},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ht},transmissionSamplerSize:{value:new fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ht},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ht},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ht},anisotropyVector:{value:new fe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ht}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag};const sc={r:0,b:0,g:0};function fE(r,e,t,n,i,s,l){const c=new Le(0);let u=s===!0?0:1,h,d,p=null,m=0,_=null;function y(x,v){let w=!1,S=v.isScene===!0?v.background:null;switch(S&&S.isTexture&&(S=(v.backgroundBlurriness>0?t:e).get(S)),S===null?E(c,u):S&&S.isColor&&(E(S,1),w=!0),r.xr.getEnvironmentBlendMode()){case"opaque":w=!0;break;case"additive":n.buffers.color.setClear(0,0,0,1,l),w=!0;break;case"alpha-blend":n.buffers.color.setClear(0,0,0,0,l),w=!0;break}(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),S&&(S.isCubeTexture||S.mapping===po)?(d===void 0&&(d=new dn(new Pr(1,1,1),new Ni({name:"BackgroundCubeMaterial",uniforms:uo(pi.backgroundCube.uniforms),vertexShader:pi.backgroundCube.vertexShader,fragmentShader:pi.backgroundCube.fragmentShader,side:Rn,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(C,N,O){this.matrixWorld.copyPosition(O.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),d.material.uniforms.envMap.value=S,d.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,d.material.toneMapped=S.colorSpace!==at,(p!==S||m!==S.version||_!==r.toneMapping)&&(d.material.needsUpdate=!0,p=S,m=S.version,_=r.toneMapping),d.layers.enableAll(),x.unshift(d,d.geometry,d.material,0,0,null)):S&&S.isTexture&&(h===void 0&&(h=new dn(new go(2,2),new Ni({name:"BackgroundMaterial",uniforms:uo(pi.background.uniforms),vertexShader:pi.background.vertexShader,fragmentShader:pi.background.fragmentShader,side:er,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=S,h.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,h.material.toneMapped=S.colorSpace!==at,S.matrixAutoUpdate===!0&&S.updateMatrix(),h.material.uniforms.uvTransform.value.copy(S.matrix),(p!==S||m!==S.version||_!==r.toneMapping)&&(h.material.needsUpdate=!0,p=S,m=S.version,_=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function E(x,v){x.getRGB(sc,j0(r)),n.buffers.color.setClear(sc.r,sc.g,sc.b,v,l)}return{getClearColor:function(){return c},setClearColor:function(x,v=1){c.set(x),u=v,E(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,E(c,u)},render:y}}function dE(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),l=n.isWebGL2||s!==null,c={},u=x(null);let h=u,d=!1;function p(q,Q,ce,ie,V){let Z=!1;if(l){const J=E(ie,ce,Q);h!==J&&(h=J,_(h.object)),Z=v(q,ie,ce,V),Z&&w(q,ie,ce,V)}else{const J=Q.wireframe===!0;(h.geometry!==ie.id||h.program!==ce.id||h.wireframe!==J)&&(h.geometry=ie.id,h.program=ce.id,h.wireframe=J,Z=!0)}V!==null&&t.update(V,r.ELEMENT_ARRAY_BUFFER),(Z||d)&&(d=!1,O(q,Q,ce,ie),V!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(V).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function _(q){return n.isWebGL2?r.bindVertexArray(q):s.bindVertexArrayOES(q)}function y(q){return n.isWebGL2?r.deleteVertexArray(q):s.deleteVertexArrayOES(q)}function E(q,Q,ce){const ie=ce.wireframe===!0;let V=c[q.id];V===void 0&&(V={},c[q.id]=V);let Z=V[Q.id];Z===void 0&&(Z={},V[Q.id]=Z);let J=Z[ie];return J===void 0&&(J=x(m()),Z[ie]=J),J}function x(q){const Q=[],ce=[],ie=[];for(let V=0;V<i;V++)Q[V]=0,ce[V]=0,ie[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:Q,enabledAttributes:ce,attributeDivisors:ie,object:q,attributes:{},index:null}}function v(q,Q,ce,ie){const V=h.attributes,Z=Q.attributes;let J=0;const he=ce.getAttributes();for(const X in he)if(he[X].location>=0){const de=V[X];let Se=Z[X];if(Se===void 0&&(X==="instanceMatrix"&&q.instanceMatrix&&(Se=q.instanceMatrix),X==="instanceColor"&&q.instanceColor&&(Se=q.instanceColor)),de===void 0||de.attribute!==Se||Se&&de.data!==Se.data)return!0;J++}return h.attributesNum!==J||h.index!==ie}function w(q,Q,ce,ie){const V={},Z=Q.attributes;let J=0;const he=ce.getAttributes();for(const X in he)if(he[X].location>=0){let de=Z[X];de===void 0&&(X==="instanceMatrix"&&q.instanceMatrix&&(de=q.instanceMatrix),X==="instanceColor"&&q.instanceColor&&(de=q.instanceColor));const Se={};Se.attribute=de,de&&de.data&&(Se.data=de.data),V[X]=Se,J++}h.attributes=V,h.attributesNum=J,h.index=ie}function S(){const q=h.newAttributes;for(let Q=0,ce=q.length;Q<ce;Q++)q[Q]=0}function A(q){R(q,0)}function R(q,Q){const ce=h.newAttributes,ie=h.enabledAttributes,V=h.attributeDivisors;ce[q]=1,ie[q]===0&&(r.enableVertexAttribArray(q),ie[q]=1),V[q]!==Q&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](q,Q),V[q]=Q)}function C(){const q=h.newAttributes,Q=h.enabledAttributes;for(let ce=0,ie=Q.length;ce<ie;ce++)Q[ce]!==q[ce]&&(r.disableVertexAttribArray(ce),Q[ce]=0)}function N(q,Q,ce,ie,V,Z,J){J===!0?r.vertexAttribIPointer(q,Q,ce,V,Z):r.vertexAttribPointer(q,Q,ce,ie,V,Z)}function O(q,Q,ce,ie){if(n.isWebGL2===!1&&(q.isInstancedMesh||ie.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();const V=ie.attributes,Z=ce.getAttributes(),J=Q.defaultAttributeValues;for(const he in Z){const X=Z[he];if(X.location>=0){let le=V[he];if(le===void 0&&(he==="instanceMatrix"&&q.instanceMatrix&&(le=q.instanceMatrix),he==="instanceColor"&&q.instanceColor&&(le=q.instanceColor)),le!==void 0){const de=le.normalized,Se=le.itemSize,Te=t.get(le);if(Te===void 0)continue;const Ie=Te.buffer,nt=Te.type,Je=Te.bytesPerElement,vt=n.isWebGL2===!0&&(nt===r.INT||nt===r.UNSIGNED_INT||le.gpuType===Jf);if(le.isInterleavedBufferAttribute){const Ge=le.data,B=Ge.stride,me=le.offset;if(Ge.isInstancedInterleavedBuffer){for(let ue=0;ue<X.locationSize;ue++)R(X.location+ue,Ge.meshPerAttribute);q.isInstancedMesh!==!0&&ie._maxInstanceCount===void 0&&(ie._maxInstanceCount=Ge.meshPerAttribute*Ge.count)}else for(let ue=0;ue<X.locationSize;ue++)A(X.location+ue);r.bindBuffer(r.ARRAY_BUFFER,Ie);for(let ue=0;ue<X.locationSize;ue++)N(X.location+ue,Se/X.locationSize,nt,de,B*Je,(me+Se/X.locationSize*ue)*Je,vt)}else{if(le.isInstancedBufferAttribute){for(let Ge=0;Ge<X.locationSize;Ge++)R(X.location+Ge,le.meshPerAttribute);q.isInstancedMesh!==!0&&ie._maxInstanceCount===void 0&&(ie._maxInstanceCount=le.meshPerAttribute*le.count)}else for(let Ge=0;Ge<X.locationSize;Ge++)A(X.location+Ge);r.bindBuffer(r.ARRAY_BUFFER,Ie);for(let Ge=0;Ge<X.locationSize;Ge++)N(X.location+Ge,Se/X.locationSize,nt,de,Se*Je,Se/X.locationSize*Ge*Je,vt)}}else if(J!==void 0){const de=J[he];if(de!==void 0)switch(de.length){case 2:r.vertexAttrib2fv(X.location,de);break;case 3:r.vertexAttrib3fv(X.location,de);break;case 4:r.vertexAttrib4fv(X.location,de);break;default:r.vertexAttrib1fv(X.location,de)}}}}C()}function b(){te();for(const q in c){const Q=c[q];for(const ce in Q){const ie=Q[ce];for(const V in ie)y(ie[V].object),delete ie[V];delete Q[ce]}delete c[q]}}function L(q){if(c[q.id]===void 0)return;const Q=c[q.id];for(const ce in Q){const ie=Q[ce];for(const V in ie)y(ie[V].object),delete ie[V];delete Q[ce]}delete c[q.id]}function z(q){for(const Q in c){const ce=c[Q];if(ce[q.id]===void 0)continue;const ie=ce[q.id];for(const V in ie)y(ie[V].object),delete ie[V];delete ce[q.id]}}function te(){W(),d=!0,h!==u&&(h=u,_(h.object))}function W(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:te,resetDefaultState:W,dispose:b,releaseStatesOfGeometry:L,releaseStatesOfProgram:z,initAttributes:S,enableAttribute:A,disableUnusedAttributes:C}}function pE(r,e,t,n){const i=n.isWebGL2;let s;function l(h){s=h}function c(h,d){r.drawArrays(s,h,d),t.update(d,s,1)}function u(h,d,p){if(p===0)return;let m,_;if(i)m=r,_="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),_="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[_](s,h,d,p),t.update(d,s,p)}this.setMode=l,this.render=c,this.renderInstances=u}function mE(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const N=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(N.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(N){if(N==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";N="mediump"}return N==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const l=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=l||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),E=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),v=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),S=m>0,A=l||e.has("OES_texture_float"),R=S&&A,C=l?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:l,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:m,maxTextureSize:_,maxCubemapSize:y,maxAttributes:E,maxVertexUniforms:x,maxVaryings:v,maxFragmentUniforms:w,vertexTextures:S,floatFragmentTextures:A,floatVertexTextures:R,maxSamples:C}}function gE(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new yr,c=new ht,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const _=p.length!==0||m||n!==0||i;return i=m,n=p.length,_},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,_){const y=p.clippingPlanes,E=p.clipIntersection,x=p.clipShadows,v=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?d(null):h();else{const w=s?0:n,S=w*4;let A=v.clippingState||null;u.value=A,A=d(y,m,S,_);for(let R=0;R!==S;++R)A[R]=t[R];v.clippingState=A,this.numIntersection=E?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,_,y){const E=p!==null?p.length:0;let x=null;if(E!==0){if(x=u.value,y!==!0||x===null){const v=_+E*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(x===null||x.length<v)&&(x=new Float32Array(v));for(let S=0,A=_;S!==E;++S,A+=4)l.copy(p[S]).applyMatrix4(w,c),l.normal.toArray(x,A),x[A+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=E,e.numIntersection=0,x}}function _E(r){let e=new WeakMap;function t(l,c){return c===la?l.mapping=wr:c===ca&&(l.mapping=Tr),l}function n(l){if(l&&l.isTexture&&l.isRenderTargetTexture===!1){const c=l.mapping;if(c===la||c===ca)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new e_(u.height/2);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Pa extends Ra{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const no=4,Pm=[.125,.215,.35,.446,.526,.582],Qr=20,Ih=new Pa,Lm=new Le;let Uh=null;const Kr=(1+Math.sqrt(5))/2,Ws=1/Kr,Im=[new U(1,1,1),new U(-1,1,1),new U(1,1,-1),new U(-1,1,-1),new U(0,Kr,Ws),new U(0,Kr,-Ws),new U(Ws,0,Kr),new U(-Ws,0,Kr),new U(Kr,Ws,0),new U(-Kr,Ws,0)];class Df{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Uh=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Nm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Dm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Uh),e.scissorTest=!1,oc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===wr||e.mapping===Tr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Uh=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Zt,minFilter:Zt,generateMipmaps:!1,type:lo,format:Nn,colorSpace:gi,depthBuffer:!1},i=Um(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Um(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=vE(s)),this._blurMaterial=yE(s,e,t)}return i}_compileMaterial(e){const t=new dn(this._lodPlanes[0],e);this._renderer.compile(t,Ih)}_sceneToCubeUV(e,t,n,i){const c=new un(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(Lm),d.toneMapping=mi,d.autoClear=!1;const _=new Cr({name:"PMREM.Background",side:Rn,depthWrite:!1,depthTest:!1}),y=new dn(new Pr,_);let E=!1;const x=e.background;x?x.isColor&&(_.color.copy(x),e.background=null,E=!0):(_.color.copy(Lm),E=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(c.up.set(0,u[v],0),c.lookAt(h[v],0,0)):w===1?(c.up.set(0,0,u[v]),c.lookAt(0,h[v],0)):(c.up.set(0,u[v],0),c.lookAt(0,0,h[v]));const S=this._cubeSize;oc(i,w*S,v>2?S:0,S,S),d.setRenderTarget(i),E&&d.render(y,c),d.render(e,c)}y.geometry.dispose(),y.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===wr||e.mapping===Tr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Nm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Dm());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new dn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;oc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,Ih)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=Im[(i-1)%Im.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new dn(this._lodPlanes[i],h),m=h.uniforms,_=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*_):2*Math.PI/(2*Qr-1),E=s/y,x=isFinite(s)?1+Math.floor(d*E):Qr;x>Qr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${Qr}`);const v=[];let w=0;for(let N=0;N<Qr;++N){const O=N/E,b=Math.exp(-O*O/2);v.push(b),N===0?w+=b:N<x&&(w+=2*b)}for(let N=0;N<v.length;N++)v[N]=v[N]/w;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=v,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:S}=this;m.dTheta.value=y,m.mipInt.value=S-n;const A=this._sizeLods[i],R=3*A*(i>S-no?i-S+no:0),C=4*(this._cubeSize-A);oc(t,R,C,3*A,2*A),u.setRenderTarget(t),u.render(p,Ih)}}function vE(r){const e=[],t=[],n=[];let i=r;const s=r-no+1+Pm.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-no?u=Pm[l-r+no-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],_=6,y=6,E=3,x=2,v=1,w=new Float32Array(E*y*_),S=new Float32Array(x*y*_),A=new Float32Array(v*y*_);for(let C=0;C<_;C++){const N=C%3*2/3-1,O=C>2?0:-1,b=[N,O,0,N+2/3,O,0,N+2/3,O+1,0,N,O,0,N+2/3,O+1,0,N,O+1,0];w.set(b,E*y*C),S.set(m,x*y*C);const L=[C,C,C,C,C,C];A.set(L,v*y*C)}const R=new mt;R.setAttribute("position",new Pt(w,E)),R.setAttribute("uv",new Pt(S,x)),R.setAttribute("faceIndex",new Pt(A,v)),e.push(R),i>no&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Um(r,e,t){const n=new _i(r,e,t);return n.texture.mapping=po,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function oc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function yE(r,e,t){const n=new Float32Array(Qr),i=new U(0,1,0);return new Ni({name:"SphericalGaussianBlur",defines:{n:Qr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:cd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:$i,depthTest:!1,depthWrite:!1})}function Dm(){return new Ni({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:cd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:$i,depthTest:!1,depthWrite:!1})}function Nm(){return new Ni({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:cd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:$i,depthTest:!1,depthWrite:!1})}function cd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function xE(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===la||u===ca,d=u===wr||u===Tr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new Df(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||d&&p&&i(p)){t===null&&(t=new Df(r));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function ME(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function SE(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const E=m.morphAttributes[y];for(let x=0,v=E.length;x<v;x++)e.remove(E[x])}m.removeEventListener("dispose",l),delete i[m.id];const _=s.get(m);_&&(e.remove(_),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const _=p.morphAttributes;for(const y in _){const E=_[y];for(let x=0,v=E.length;x<v;x++)e.update(E[x],r.ARRAY_BUFFER)}}function h(p){const m=[],_=p.index,y=p.attributes.position;let E=0;if(_!==null){const w=_.array;E=_.version;for(let S=0,A=w.length;S<A;S+=3){const R=w[S+0],C=w[S+1],N=w[S+2];m.push(R,C,C,N,N,R)}}else{const w=y.array;E=y.version;for(let S=0,A=w.length/3-1;S<A;S+=3){const R=S+0,C=S+1,N=S+2;m.push(R,C,C,N,N,R)}}const x=new(J0(m)?ld:ad)(m,1);x.version=E;const v=s.get(p);v&&e.remove(v),s.set(p,x)}function d(p){const m=s.get(p);if(m){const _=p.index;_!==null&&m.version<_.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function EE(r,e,t,n){const i=n.isWebGL2;let s;function l(m){s=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function d(m,_){r.drawElements(s,_,c,m*u),t.update(_,s,1)}function p(m,_,y){if(y===0)return;let E,x;if(i)E=r,x="drawElementsInstanced";else if(E=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",E===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}E[x](s,_,c,m*u,y),t.update(_,s,y)}this.setMode=l,this.setIndex=h,this.render=d,this.renderInstances=p}function wE(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function TE(r,e){return r[0]-e[0]}function AE(r,e){return Math.abs(e[1])-Math.abs(r[1])}function bE(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,l=new At,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const _=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,y=_!==void 0?_.length:0;let E=s.get(d);if(E===void 0||E.count!==y){let q=function(){te.dispose(),s.delete(d),d.removeEventListener("dispose",q)};E!==void 0&&E.texture.dispose();const w=d.morphAttributes.position!==void 0,S=d.morphAttributes.normal!==void 0,A=d.morphAttributes.color!==void 0,R=d.morphAttributes.position||[],C=d.morphAttributes.normal||[],N=d.morphAttributes.color||[];let O=0;w===!0&&(O=1),S===!0&&(O=2),A===!0&&(O=3);let b=d.attributes.position.count*O,L=1;b>e.maxTextureSize&&(L=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const z=new Float32Array(b*L*4*y),te=new Jc(z,b,L,y);te.type=Li,te.needsUpdate=!0;const W=O*4;for(let Q=0;Q<y;Q++){const ce=R[Q],ie=C[Q],V=N[Q],Z=b*L*4*Q;for(let J=0;J<ce.count;J++){const he=J*W;w===!0&&(l.fromBufferAttribute(ce,J),z[Z+he+0]=l.x,z[Z+he+1]=l.y,z[Z+he+2]=l.z,z[Z+he+3]=0),S===!0&&(l.fromBufferAttribute(ie,J),z[Z+he+4]=l.x,z[Z+he+5]=l.y,z[Z+he+6]=l.z,z[Z+he+7]=0),A===!0&&(l.fromBufferAttribute(V,J),z[Z+he+8]=l.x,z[Z+he+9]=l.y,z[Z+he+10]=l.z,z[Z+he+11]=V.itemSize===4?l.w:1)}}E={count:y,texture:te,size:new fe(b,L)},s.set(d,E),d.addEventListener("dispose",q)}let x=0;for(let w=0;w<m.length;w++)x+=m[w];const v=d.morphTargetsRelative?1:1-x;p.getUniforms().setValue(r,"morphTargetBaseInfluence",v),p.getUniforms().setValue(r,"morphTargetInfluences",m),p.getUniforms().setValue(r,"morphTargetsTexture",E.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",E.size)}else{const _=m===void 0?0:m.length;let y=n[d.id];if(y===void 0||y.length!==_){y=[];for(let S=0;S<_;S++)y[S]=[S,0];n[d.id]=y}for(let S=0;S<_;S++){const A=y[S];A[0]=S,A[1]=m[S]}y.sort(AE);for(let S=0;S<8;S++)S<_&&y[S][1]?(c[S][0]=y[S][0],c[S][1]=y[S][1]):(c[S][0]=Number.MAX_SAFE_INTEGER,c[S][1]=0);c.sort(TE);const E=d.morphAttributes.position,x=d.morphAttributes.normal;let v=0;for(let S=0;S<8;S++){const A=c[S],R=A[0],C=A[1];R!==Number.MAX_SAFE_INTEGER&&C?(E&&d.getAttribute("morphTarget"+S)!==E[R]&&d.setAttribute("morphTarget"+S,E[R]),x&&d.getAttribute("morphNormal"+S)!==x[R]&&d.setAttribute("morphNormal"+S,x[R]),i[S]=C,v+=C):(E&&d.hasAttribute("morphTarget"+S)===!0&&d.deleteAttribute("morphTarget"+S),x&&d.hasAttribute("morphNormal"+S)===!0&&d.deleteAttribute("morphNormal"+S),i[S]=0)}const w=d.morphTargetsRelative?1:1-v;p.getUniforms().setValue(r,"morphTargetBaseInfluence",w),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function RE(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);return i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER)),p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}const n_=new Jt,i_=new Jc,r_=new od,s_=new Ca,Fm=[],Om=[],Bm=new Float32Array(16),zm=new Float32Array(9),km=new Float32Array(4);function _o(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Fm[i];if(s===void 0&&(s=new Float32Array(i),Fm[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function rn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function sn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function jc(r,e){let t=Om[e];t===void 0&&(t=new Int32Array(e),Om[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function CE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function PE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(rn(t,e))return;r.uniform2fv(this.addr,e),sn(t,e)}}function LE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(rn(t,e))return;r.uniform3fv(this.addr,e),sn(t,e)}}function IE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(rn(t,e))return;r.uniform4fv(this.addr,e),sn(t,e)}}function UE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(rn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),sn(t,e)}else{if(rn(t,n))return;km.set(n),r.uniformMatrix2fv(this.addr,!1,km),sn(t,n)}}function DE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(rn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),sn(t,e)}else{if(rn(t,n))return;zm.set(n),r.uniformMatrix3fv(this.addr,!1,zm),sn(t,n)}}function NE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(rn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),sn(t,e)}else{if(rn(t,n))return;Bm.set(n),r.uniformMatrix4fv(this.addr,!1,Bm),sn(t,n)}}function FE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function OE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(rn(t,e))return;r.uniform2iv(this.addr,e),sn(t,e)}}function BE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(rn(t,e))return;r.uniform3iv(this.addr,e),sn(t,e)}}function zE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(rn(t,e))return;r.uniform4iv(this.addr,e),sn(t,e)}}function kE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function HE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(rn(t,e))return;r.uniform2uiv(this.addr,e),sn(t,e)}}function VE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(rn(t,e))return;r.uniform3uiv(this.addr,e),sn(t,e)}}function GE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(rn(t,e))return;r.uniform4uiv(this.addr,e),sn(t,e)}}function WE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||n_,i)}function XE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||r_,i)}function YE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||s_,i)}function qE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||i_,i)}function ZE(r){switch(r){case 5126:return CE;case 35664:return PE;case 35665:return LE;case 35666:return IE;case 35674:return UE;case 35675:return DE;case 35676:return NE;case 5124:case 35670:return FE;case 35667:case 35671:return OE;case 35668:case 35672:return BE;case 35669:case 35673:return zE;case 5125:return kE;case 36294:return HE;case 36295:return VE;case 36296:return GE;case 35678:case 36198:case 36298:case 36306:case 35682:return WE;case 35679:case 36299:case 36307:return XE;case 35680:case 36300:case 36308:case 36293:return YE;case 36289:case 36303:case 36311:case 36292:return qE}}function JE(r,e){r.uniform1fv(this.addr,e)}function KE(r,e){const t=_o(e,this.size,2);r.uniform2fv(this.addr,t)}function jE(r,e){const t=_o(e,this.size,3);r.uniform3fv(this.addr,t)}function QE(r,e){const t=_o(e,this.size,4);r.uniform4fv(this.addr,t)}function $E(r,e){const t=_o(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function e1(r,e){const t=_o(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function t1(r,e){const t=_o(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function n1(r,e){r.uniform1iv(this.addr,e)}function i1(r,e){r.uniform2iv(this.addr,e)}function r1(r,e){r.uniform3iv(this.addr,e)}function s1(r,e){r.uniform4iv(this.addr,e)}function o1(r,e){r.uniform1uiv(this.addr,e)}function a1(r,e){r.uniform2uiv(this.addr,e)}function l1(r,e){r.uniform3uiv(this.addr,e)}function c1(r,e){r.uniform4uiv(this.addr,e)}function u1(r,e,t){const n=this.cache,i=e.length,s=jc(t,i);rn(n,s)||(r.uniform1iv(this.addr,s),sn(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||n_,s[l])}function h1(r,e,t){const n=this.cache,i=e.length,s=jc(t,i);rn(n,s)||(r.uniform1iv(this.addr,s),sn(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||r_,s[l])}function f1(r,e,t){const n=this.cache,i=e.length,s=jc(t,i);rn(n,s)||(r.uniform1iv(this.addr,s),sn(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||s_,s[l])}function d1(r,e,t){const n=this.cache,i=e.length,s=jc(t,i);rn(n,s)||(r.uniform1iv(this.addr,s),sn(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||i_,s[l])}function p1(r){switch(r){case 5126:return JE;case 35664:return KE;case 35665:return jE;case 35666:return QE;case 35674:return $E;case 35675:return e1;case 35676:return t1;case 5124:case 35670:return n1;case 35667:case 35671:return i1;case 35668:case 35672:return r1;case 35669:case 35673:return s1;case 5125:return o1;case 36294:return a1;case 36295:return l1;case 36296:return c1;case 35678:case 36198:case 36298:case 36306:case 35682:return u1;case 35679:case 36299:case 36307:return h1;case 35680:case 36300:case 36308:case 36293:return f1;case 36289:case 36303:case 36311:case 36292:return d1}}class m1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=ZE(t.type)}}class g1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=p1(t.type)}}class _1{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const Dh=/(\w+)(\])?(\[|\.)?/g;function Hm(r,e){r.seq.push(e),r.map[e.id]=e}function v1(r,e,t){const n=r.name,i=n.length;for(Dh.lastIndex=0;;){const s=Dh.exec(n),l=Dh.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){Hm(t,h===void 0?new m1(c,r,e):new g1(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new _1(c),Hm(t,p)),t=p}}}class Oc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);v1(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function Vm(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let y1=0;function x1(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function M1(r){switch(r){case gi:return["Linear","( value )"];case at:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),["Linear","( value )"]}}function Gm(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+x1(r.getShaderSource(e),l)}else return i}function S1(r,e){const t=M1(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function E1(r,e){let t;switch(e){case x0:t="Linear";break;case M0:t="Reinhard";break;case S0:t="OptimizedCineon";break;case qf:t="ACESFilmic";break;case E0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function w1(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ta).join(`
`)}function T1(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function A1(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function ta(r){return r!==""}function Wm(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Xm(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const b1=/^[ \t]*#include +<([\w\d./]+)>/gm;function Nf(r){return r.replace(b1,R1)}function R1(r,e){const t=ut[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Nf(t)}const C1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ym(r){return r.replace(C1,P1)}function P1(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function qm(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function L1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Xc?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===na?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===di&&(e="SHADOWMAP_TYPE_VSM"),e}function I1(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case wr:case Tr:e="ENVMAP_TYPE_CUBE";break;case po:e="ENVMAP_TYPE_CUBE_UV";break}return e}function U1(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Tr:e="ENVMAP_MODE_REFRACTION";break}return e}function D1(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Aa:e="ENVMAP_BLENDING_MULTIPLY";break;case v0:e="ENVMAP_BLENDING_MIX";break;case y0:e="ENVMAP_BLENDING_ADD";break}return e}function N1(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function F1(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=L1(t),h=I1(t),d=U1(t),p=D1(t),m=N1(t),_=t.isWebGL2?"":w1(t),y=T1(s),E=i.createProgram();let x,v,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ta).join(`
`),x.length>0&&(x+=`
`),v=[_,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ta).join(`
`),v.length>0&&(v+=`
`)):(x=[qm(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ta).join(`
`),v=[_,qm(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==mi?"#define TONE_MAPPING":"",t.toneMapping!==mi?ut.tonemapping_pars_fragment:"",t.toneMapping!==mi?E1("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ut.encodings_pars_fragment,S1("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ta).join(`
`)),l=Nf(l),l=Wm(l,t),l=Xm(l,t),c=Nf(c),c=Wm(c,t),c=Xm(c,t),l=Ym(l),c=Ym(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,v=["#define varying in",t.glslVersion===If?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===If?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const S=w+x+l,A=w+v+c,R=Vm(i,i.VERTEX_SHADER,S),C=Vm(i,i.FRAGMENT_SHADER,A);if(i.attachShader(E,R),i.attachShader(E,C),t.index0AttributeName!==void 0?i.bindAttribLocation(E,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(E,0,"position"),i.linkProgram(E),r.debug.checkShaderErrors){const b=i.getProgramInfoLog(E).trim(),L=i.getShaderInfoLog(R).trim(),z=i.getShaderInfoLog(C).trim();let te=!0,W=!0;if(i.getProgramParameter(E,i.LINK_STATUS)===!1)if(te=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,E,R,C);else{const q=Gm(i,R,"vertex"),Q=Gm(i,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(E,i.VALIDATE_STATUS)+`

Program Info Log: `+b+`
`+q+`
`+Q)}else b!==""?console.warn("THREE.WebGLProgram: Program Info Log:",b):(L===""||z==="")&&(W=!1);W&&(this.diagnostics={runnable:te,programLog:b,vertexShader:{log:L,prefix:x},fragmentShader:{log:z,prefix:v}})}i.deleteShader(R),i.deleteShader(C);let N;this.getUniforms=function(){return N===void 0&&(N=new Oc(i,E)),N};let O;return this.getAttributes=function(){return O===void 0&&(O=A1(i,E)),O},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(E),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=y1++,this.cacheKey=e,this.usedTimes=1,this.program=E,this.vertexShader=R,this.fragmentShader=C,this}let O1=0;class B1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new z1(e),t.set(e,n)),n}}class z1{constructor(e){this.id=O1++,this.code=e,this.usedTimes=0}}function k1(r,e,t,n,i,s,l){const c=new ss,u=new B1,h=[],d=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let _=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function E(b){return b===0?"uv":`uv${b}`}function x(b,L,z,te,W){const q=te.fog,Q=W.geometry,ce=b.isMeshStandardMaterial?te.environment:null,ie=(b.isMeshStandardMaterial?t:e).get(b.envMap||ce),V=ie&&ie.mapping===po?ie.image.height:null,Z=y[b.type];b.precision!==null&&(_=i.getMaxPrecision(b.precision),_!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",_,"instead."));const J=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,he=J!==void 0?J.length:0;let X=0;Q.morphAttributes.position!==void 0&&(X=1),Q.morphAttributes.normal!==void 0&&(X=2),Q.morphAttributes.color!==void 0&&(X=3);let le,de,Se,Te;if(Z){const zt=pi[Z];le=zt.vertexShader,de=zt.fragmentShader}else le=b.vertexShader,de=b.fragmentShader,u.update(b),Se=u.getVertexShaderID(b),Te=u.getFragmentShaderID(b);const Ie=r.getRenderTarget(),nt=W.isInstancedMesh===!0,Je=!!b.map,vt=!!b.matcap,Ge=!!ie,B=!!b.aoMap,me=!!b.lightMap,ue=!!b.bumpMap,ye=!!b.normalMap,pe=!!b.displacementMap,ze=!!b.emissiveMap,Pe=!!b.metalnessMap,Ue=!!b.roughnessMap,Ke=b.anisotropy>0,gt=b.clearcoat>0,Nt=b.iridescence>0,F=b.sheen>0,P=b.transmission>0,re=Ke&&!!b.anisotropyMap,ge=gt&&!!b.clearcoatMap,_e=gt&&!!b.clearcoatNormalMap,Ee=gt&&!!b.clearcoatRoughnessMap,ke=Nt&&!!b.iridescenceMap,we=Nt&&!!b.iridescenceThicknessMap,ae=F&&!!b.sheenColorMap,We=F&&!!b.sheenRoughnessMap,Xe=!!b.specularMap,Ze=!!b.specularColorMap,Fe=!!b.specularIntensityMap,Oe=P&&!!b.transmissionMap,lt=P&&!!b.thicknessMap,bt=!!b.gradientMap,k=!!b.alphaMap,Ae=b.alphaTest>0,$=!!b.extensions,xe=!!Q.attributes.uv1,Re=!!Q.attributes.uv2,_t=!!Q.attributes.uv3;return{isWebGL2:d,shaderID:Z,shaderType:b.type,shaderName:b.name,vertexShader:le,fragmentShader:de,defines:b.defines,customVertexShaderID:Se,customFragmentShaderID:Te,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:_,instancing:nt,instancingColor:nt&&W.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:Ie===null?r.outputColorSpace:Ie.isXRRenderTarget===!0?Ie.texture.colorSpace:gi,map:Je,matcap:vt,envMap:Ge,envMapMode:Ge&&ie.mapping,envMapCubeUVHeight:V,aoMap:B,lightMap:me,bumpMap:ue,normalMap:ye,displacementMap:m&&pe,emissiveMap:ze,normalMapObjectSpace:ye&&b.normalMapType===B0,normalMapTangentSpace:ye&&b.normalMapType===Rr,metalnessMap:Pe,roughnessMap:Ue,anisotropy:Ke,anisotropyMap:re,clearcoat:gt,clearcoatMap:ge,clearcoatNormalMap:_e,clearcoatRoughnessMap:Ee,iridescence:Nt,iridescenceMap:ke,iridescenceThicknessMap:we,sheen:F,sheenColorMap:ae,sheenRoughnessMap:We,specularMap:Xe,specularColorMap:Ze,specularIntensityMap:Fe,transmission:P,transmissionMap:Oe,thicknessMap:lt,gradientMap:bt,opaque:b.transparent===!1&&b.blending===is,alphaMap:k,alphaTest:Ae,combine:b.combine,mapUv:Je&&E(b.map.channel),aoMapUv:B&&E(b.aoMap.channel),lightMapUv:me&&E(b.lightMap.channel),bumpMapUv:ue&&E(b.bumpMap.channel),normalMapUv:ye&&E(b.normalMap.channel),displacementMapUv:pe&&E(b.displacementMap.channel),emissiveMapUv:ze&&E(b.emissiveMap.channel),metalnessMapUv:Pe&&E(b.metalnessMap.channel),roughnessMapUv:Ue&&E(b.roughnessMap.channel),anisotropyMapUv:re&&E(b.anisotropyMap.channel),clearcoatMapUv:ge&&E(b.clearcoatMap.channel),clearcoatNormalMapUv:_e&&E(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Ee&&E(b.clearcoatRoughnessMap.channel),iridescenceMapUv:ke&&E(b.iridescenceMap.channel),iridescenceThicknessMapUv:we&&E(b.iridescenceThicknessMap.channel),sheenColorMapUv:ae&&E(b.sheenColorMap.channel),sheenRoughnessMapUv:We&&E(b.sheenRoughnessMap.channel),specularMapUv:Xe&&E(b.specularMap.channel),specularColorMapUv:Ze&&E(b.specularColorMap.channel),specularIntensityMapUv:Fe&&E(b.specularIntensityMap.channel),transmissionMapUv:Oe&&E(b.transmissionMap.channel),thicknessMapUv:lt&&E(b.thicknessMap.channel),alphaMapUv:k&&E(b.alphaMap.channel),vertexTangents:!!Q.attributes.tangent&&(ye||Ke),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,vertexUv1s:xe,vertexUv2s:Re,vertexUv3s:_t,pointsUvs:W.isPoints===!0&&!!Q.attributes.uv&&(Je||k),fog:!!q,useFog:b.fog===!0,fogExp2:q&&q.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:W.isSkinnedMesh===!0,morphTargets:Q.morphAttributes.position!==void 0,morphNormals:Q.morphAttributes.normal!==void 0,morphColors:Q.morphAttributes.color!==void 0,morphTargetsCount:he,morphTextureStride:X,numDirLights:L.directional.length,numPointLights:L.point.length,numSpotLights:L.spot.length,numSpotLightMaps:L.spotLightMap.length,numRectAreaLights:L.rectArea.length,numHemiLights:L.hemi.length,numDirLightShadows:L.directionalShadowMap.length,numPointLightShadows:L.pointShadowMap.length,numSpotLightShadows:L.spotShadowMap.length,numSpotLightShadowsWithMaps:L.numSpotLightShadowsWithMaps,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&z.length>0,shadowMapType:r.shadowMap.type,toneMapping:b.toneMapped?r.toneMapping:mi,useLegacyLights:r.useLegacyLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Pi,flipSided:b.side===Rn,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:$&&b.extensions.derivatives===!0,extensionFragDepth:$&&b.extensions.fragDepth===!0,extensionDrawBuffers:$&&b.extensions.drawBuffers===!0,extensionShaderTextureLOD:$&&b.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function v(b){const L=[];if(b.shaderID?L.push(b.shaderID):(L.push(b.customVertexShaderID),L.push(b.customFragmentShaderID)),b.defines!==void 0)for(const z in b.defines)L.push(z),L.push(b.defines[z]);return b.isRawShaderMaterial===!1&&(w(L,b),S(L,b),L.push(r.outputColorSpace)),L.push(b.customProgramCacheKey),L.join()}function w(b,L){b.push(L.precision),b.push(L.outputColorSpace),b.push(L.envMapMode),b.push(L.envMapCubeUVHeight),b.push(L.mapUv),b.push(L.alphaMapUv),b.push(L.lightMapUv),b.push(L.aoMapUv),b.push(L.bumpMapUv),b.push(L.normalMapUv),b.push(L.displacementMapUv),b.push(L.emissiveMapUv),b.push(L.metalnessMapUv),b.push(L.roughnessMapUv),b.push(L.anisotropyMapUv),b.push(L.clearcoatMapUv),b.push(L.clearcoatNormalMapUv),b.push(L.clearcoatRoughnessMapUv),b.push(L.iridescenceMapUv),b.push(L.iridescenceThicknessMapUv),b.push(L.sheenColorMapUv),b.push(L.sheenRoughnessMapUv),b.push(L.specularMapUv),b.push(L.specularColorMapUv),b.push(L.specularIntensityMapUv),b.push(L.transmissionMapUv),b.push(L.thicknessMapUv),b.push(L.combine),b.push(L.fogExp2),b.push(L.sizeAttenuation),b.push(L.morphTargetsCount),b.push(L.morphAttributeCount),b.push(L.numDirLights),b.push(L.numPointLights),b.push(L.numSpotLights),b.push(L.numSpotLightMaps),b.push(L.numHemiLights),b.push(L.numRectAreaLights),b.push(L.numDirLightShadows),b.push(L.numPointLightShadows),b.push(L.numSpotLightShadows),b.push(L.numSpotLightShadowsWithMaps),b.push(L.shadowMapType),b.push(L.toneMapping),b.push(L.numClippingPlanes),b.push(L.numClipIntersection),b.push(L.depthPacking)}function S(b,L){c.disableAll(),L.isWebGL2&&c.enable(0),L.supportsVertexTextures&&c.enable(1),L.instancing&&c.enable(2),L.instancingColor&&c.enable(3),L.matcap&&c.enable(4),L.envMap&&c.enable(5),L.normalMapObjectSpace&&c.enable(6),L.normalMapTangentSpace&&c.enable(7),L.clearcoat&&c.enable(8),L.iridescence&&c.enable(9),L.alphaTest&&c.enable(10),L.vertexColors&&c.enable(11),L.vertexAlphas&&c.enable(12),L.vertexUv1s&&c.enable(13),L.vertexUv2s&&c.enable(14),L.vertexUv3s&&c.enable(15),L.vertexTangents&&c.enable(16),L.anisotropy&&c.enable(17),b.push(c.mask),c.disableAll(),L.fog&&c.enable(0),L.useFog&&c.enable(1),L.flatShading&&c.enable(2),L.logarithmicDepthBuffer&&c.enable(3),L.skinning&&c.enable(4),L.morphTargets&&c.enable(5),L.morphNormals&&c.enable(6),L.morphColors&&c.enable(7),L.premultipliedAlpha&&c.enable(8),L.shadowMapEnabled&&c.enable(9),L.useLegacyLights&&c.enable(10),L.doubleSided&&c.enable(11),L.flipSided&&c.enable(12),L.useDepthPacking&&c.enable(13),L.dithering&&c.enable(14),L.transmission&&c.enable(15),L.sheen&&c.enable(16),L.opaque&&c.enable(17),L.pointsUvs&&c.enable(18),b.push(c.mask)}function A(b){const L=y[b.type];let z;if(L){const te=pi[L];z=Q0.clone(te.uniforms)}else z=b.uniforms;return z}function R(b,L){let z;for(let te=0,W=h.length;te<W;te++){const q=h[te];if(q.cacheKey===L){z=q,++z.usedTimes;break}}return z===void 0&&(z=new F1(r,L,b,s),h.push(z)),z}function C(b){if(--b.usedTimes===0){const L=h.indexOf(b);h[L]=h[h.length-1],h.pop(),b.destroy()}}function N(b){u.remove(b)}function O(){u.dispose()}return{getParameters:x,getProgramCacheKey:v,getUniforms:A,acquireProgram:R,releaseProgram:C,releaseShaderCache:N,programs:h,dispose:O}}function H1(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function V1(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Zm(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Jm(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,_,y,E,x){let v=r[e];return v===void 0?(v={id:p.id,object:p,geometry:m,material:_,groupOrder:y,renderOrder:p.renderOrder,z:E,group:x},r[e]=v):(v.id=p.id,v.object=p,v.geometry=m,v.material=_,v.groupOrder=y,v.renderOrder=p.renderOrder,v.z=E,v.group=x),e++,v}function c(p,m,_,y,E,x){const v=l(p,m,_,y,E,x);_.transmission>0?n.push(v):_.transparent===!0?i.push(v):t.push(v)}function u(p,m,_,y,E,x){const v=l(p,m,_,y,E,x);_.transmission>0?n.unshift(v):_.transparent===!0?i.unshift(v):t.unshift(v)}function h(p,m){t.length>1&&t.sort(p||V1),n.length>1&&n.sort(m||Zm),i.length>1&&i.sort(m||Zm)}function d(){for(let p=e,m=r.length;p<m;p++){const _=r[p];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function G1(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new Jm,r.set(n,[l])):i>=s.length?(l=new Jm,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function W1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new U,color:new Le};break;case"SpotLight":t={position:new U,direction:new U,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new U,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new U,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new U,halfWidth:new U,halfHeight:new U};break}return r[e.id]=t,t}}}function X1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let Y1=0;function q1(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function Z1(r,e){const t=new W1,n=X1(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let d=0;d<9;d++)i.probe.push(new U);const s=new U,l=new ot,c=new ot;function u(d,p){let m=0,_=0,y=0;for(let z=0;z<9;z++)i.probe[z].set(0,0,0);let E=0,x=0,v=0,w=0,S=0,A=0,R=0,C=0,N=0,O=0;d.sort(q1);const b=p===!0?Math.PI:1;for(let z=0,te=d.length;z<te;z++){const W=d[z],q=W.color,Q=W.intensity,ce=W.distance,ie=W.shadow&&W.shadow.map?W.shadow.map.texture:null;if(W.isAmbientLight)m+=q.r*Q*b,_+=q.g*Q*b,y+=q.b*Q*b;else if(W.isLightProbe)for(let V=0;V<9;V++)i.probe[V].addScaledVector(W.sh.coefficients[V],Q);else if(W.isDirectionalLight){const V=t.get(W);if(V.color.copy(W.color).multiplyScalar(W.intensity*b),W.castShadow){const Z=W.shadow,J=n.get(W);J.shadowBias=Z.bias,J.shadowNormalBias=Z.normalBias,J.shadowRadius=Z.radius,J.shadowMapSize=Z.mapSize,i.directionalShadow[E]=J,i.directionalShadowMap[E]=ie,i.directionalShadowMatrix[E]=W.shadow.matrix,A++}i.directional[E]=V,E++}else if(W.isSpotLight){const V=t.get(W);V.position.setFromMatrixPosition(W.matrixWorld),V.color.copy(q).multiplyScalar(Q*b),V.distance=ce,V.coneCos=Math.cos(W.angle),V.penumbraCos=Math.cos(W.angle*(1-W.penumbra)),V.decay=W.decay,i.spot[v]=V;const Z=W.shadow;if(W.map&&(i.spotLightMap[N]=W.map,N++,Z.updateMatrices(W),W.castShadow&&O++),i.spotLightMatrix[v]=Z.matrix,W.castShadow){const J=n.get(W);J.shadowBias=Z.bias,J.shadowNormalBias=Z.normalBias,J.shadowRadius=Z.radius,J.shadowMapSize=Z.mapSize,i.spotShadow[v]=J,i.spotShadowMap[v]=ie,C++}v++}else if(W.isRectAreaLight){const V=t.get(W);V.color.copy(q).multiplyScalar(Q),V.halfWidth.set(W.width*.5,0,0),V.halfHeight.set(0,W.height*.5,0),i.rectArea[w]=V,w++}else if(W.isPointLight){const V=t.get(W);if(V.color.copy(W.color).multiplyScalar(W.intensity*b),V.distance=W.distance,V.decay=W.decay,W.castShadow){const Z=W.shadow,J=n.get(W);J.shadowBias=Z.bias,J.shadowNormalBias=Z.normalBias,J.shadowRadius=Z.radius,J.shadowMapSize=Z.mapSize,J.shadowCameraNear=Z.camera.near,J.shadowCameraFar=Z.camera.far,i.pointShadow[x]=J,i.pointShadowMap[x]=ie,i.pointShadowMatrix[x]=W.shadow.matrix,R++}i.point[x]=V,x++}else if(W.isHemisphereLight){const V=t.get(W);V.skyColor.copy(W.color).multiplyScalar(Q*b),V.groundColor.copy(W.groundColor).multiplyScalar(Q*b),i.hemi[S]=V,S++}}w>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Me.LTC_FLOAT_1,i.rectAreaLTC2=Me.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Me.LTC_HALF_1,i.rectAreaLTC2=Me.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=_,i.ambient[2]=y;const L=i.hash;(L.directionalLength!==E||L.pointLength!==x||L.spotLength!==v||L.rectAreaLength!==w||L.hemiLength!==S||L.numDirectionalShadows!==A||L.numPointShadows!==R||L.numSpotShadows!==C||L.numSpotMaps!==N)&&(i.directional.length=E,i.spot.length=v,i.rectArea.length=w,i.point.length=x,i.hemi.length=S,i.directionalShadow.length=A,i.directionalShadowMap.length=A,i.pointShadow.length=R,i.pointShadowMap.length=R,i.spotShadow.length=C,i.spotShadowMap.length=C,i.directionalShadowMatrix.length=A,i.pointShadowMatrix.length=R,i.spotLightMatrix.length=C+N-O,i.spotLightMap.length=N,i.numSpotLightShadowsWithMaps=O,L.directionalLength=E,L.pointLength=x,L.spotLength=v,L.rectAreaLength=w,L.hemiLength=S,L.numDirectionalShadows=A,L.numPointShadows=R,L.numSpotShadows=C,L.numSpotMaps=N,i.version=Y1++)}function h(d,p){let m=0,_=0,y=0,E=0,x=0;const v=p.matrixWorldInverse;for(let w=0,S=d.length;w<S;w++){const A=d[w];if(A.isDirectionalLight){const R=i.directional[m];R.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(v),m++}else if(A.isSpotLight){const R=i.spot[y];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(v),R.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(v),y++}else if(A.isRectAreaLight){const R=i.rectArea[E];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(v),c.identity(),l.copy(A.matrixWorld),l.premultiply(v),c.extractRotation(l),R.halfWidth.set(A.width*.5,0,0),R.halfHeight.set(0,A.height*.5,0),R.halfWidth.applyMatrix4(c),R.halfHeight.applyMatrix4(c),E++}else if(A.isPointLight){const R=i.point[_];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(v),_++}else if(A.isHemisphereLight){const R=i.hemi[x];R.direction.setFromMatrixPosition(A.matrixWorld),R.direction.transformDirection(v),x++}}}return{setup:u,setupView:h,state:i}}function Km(r,e){const t=new Z1(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function l(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:l,pushShadow:c}}function J1(r,e){let t=new WeakMap;function n(s,l=0){const c=t.get(s);let u;return c===void 0?(u=new Km(r,e),t.set(s,[u])):l>=c.length?(u=new Km(r,e),c.push(u)):u=c[l],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class ud extends En{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=F0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class hd extends En{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const K1=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,j1=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Q1(r,e,t){let n=new Kc;const i=new fe,s=new fe,l=new At,c=new ud({depthPacking:O0}),u=new hd,h={},d=t.maxTextureSize,p={[er]:Rn,[Rn]:er,[Pi]:Pi},m=new Ni({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new fe},radius:{value:4}},vertexShader:K1,fragmentShader:j1}),_=m.clone();_.defines.HORIZONTAL_PASS=1;const y=new mt;y.setAttribute("position",new Pt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const E=new dn(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Xc;let v=this.type;this.render=function(R,C,N){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||R.length===0)return;const O=r.getRenderTarget(),b=r.getActiveCubeFace(),L=r.getActiveMipmapLevel(),z=r.state;z.setBlending($i),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);const te=v!==di&&this.type===di,W=v===di&&this.type!==di;for(let q=0,Q=R.length;q<Q;q++){const ce=R[q],ie=ce.shadow;if(ie===void 0){console.warn("THREE.WebGLShadowMap:",ce,"has no shadow.");continue}if(ie.autoUpdate===!1&&ie.needsUpdate===!1)continue;i.copy(ie.mapSize);const V=ie.getFrameExtents();if(i.multiply(V),s.copy(ie.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/V.x),i.x=s.x*V.x,ie.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/V.y),i.y=s.y*V.y,ie.mapSize.y=s.y)),ie.map===null||te===!0||W===!0){const J=this.type!==di?{minFilter:qt,magFilter:qt}:{};ie.map!==null&&ie.map.dispose(),ie.map=new _i(i.x,i.y,J),ie.map.texture.name=ce.name+".shadowMap",ie.camera.updateProjectionMatrix()}r.setRenderTarget(ie.map),r.clear();const Z=ie.getViewportCount();for(let J=0;J<Z;J++){const he=ie.getViewport(J);l.set(s.x*he.x,s.y*he.y,s.x*he.z,s.y*he.w),z.viewport(l),ie.updateMatrices(ce,J),n=ie.getFrustum(),A(C,N,ie.camera,ce,this.type)}ie.isPointLightShadow!==!0&&this.type===di&&w(ie,N),ie.needsUpdate=!1}v=this.type,x.needsUpdate=!1,r.setRenderTarget(O,b,L)};function w(R,C){const N=e.update(E);m.defines.VSM_SAMPLES!==R.blurSamples&&(m.defines.VSM_SAMPLES=R.blurSamples,_.defines.VSM_SAMPLES=R.blurSamples,m.needsUpdate=!0,_.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new _i(i.x,i.y)),m.uniforms.shadow_pass.value=R.map.texture,m.uniforms.resolution.value=R.mapSize,m.uniforms.radius.value=R.radius,r.setRenderTarget(R.mapPass),r.clear(),r.renderBufferDirect(C,null,N,m,E,null),_.uniforms.shadow_pass.value=R.mapPass.texture,_.uniforms.resolution.value=R.mapSize,_.uniforms.radius.value=R.radius,r.setRenderTarget(R.map),r.clear(),r.renderBufferDirect(C,null,N,_,E,null)}function S(R,C,N,O){let b=null;const L=N.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(L!==void 0)b=L;else if(b=N.isPointLight===!0?u:c,r.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0){const z=b.uuid,te=C.uuid;let W=h[z];W===void 0&&(W={},h[z]=W);let q=W[te];q===void 0&&(q=b.clone(),W[te]=q),b=q}if(b.visible=C.visible,b.wireframe=C.wireframe,O===di?b.side=C.shadowSide!==null?C.shadowSide:C.side:b.side=C.shadowSide!==null?C.shadowSide:p[C.side],b.alphaMap=C.alphaMap,b.alphaTest=C.alphaTest,b.map=C.map,b.clipShadows=C.clipShadows,b.clippingPlanes=C.clippingPlanes,b.clipIntersection=C.clipIntersection,b.displacementMap=C.displacementMap,b.displacementScale=C.displacementScale,b.displacementBias=C.displacementBias,b.wireframeLinewidth=C.wireframeLinewidth,b.linewidth=C.linewidth,N.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const z=r.properties.get(b);z.light=N}return b}function A(R,C,N,O,b){if(R.visible===!1)return;if(R.layers.test(C.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&b===di)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,R.matrixWorld);const te=e.update(R),W=R.material;if(Array.isArray(W)){const q=te.groups;for(let Q=0,ce=q.length;Q<ce;Q++){const ie=q[Q],V=W[ie.materialIndex];if(V&&V.visible){const Z=S(R,V,O,b);r.renderBufferDirect(N,null,te,Z,R,ie)}}}else if(W.visible){const q=S(R,W,O,b);r.renderBufferDirect(N,null,te,q,R,null)}}const z=R.children;for(let te=0,W=z.length;te<W;te++)A(z[te],C,N,O,b)}}function $1(r,e,t){const n=t.isWebGL2;function i(){let k=!1;const Ae=new At;let $=null;const xe=new At(0,0,0,0);return{setMask:function(Re){$!==Re&&!k&&(r.colorMask(Re,Re,Re,Re),$=Re)},setLocked:function(Re){k=Re},setClear:function(Re,_t,Lt,zt,Mi){Mi===!0&&(Re*=zt,_t*=zt,Lt*=zt),Ae.set(Re,_t,Lt,zt),xe.equals(Ae)===!1&&(r.clearColor(Re,_t,Lt,zt),xe.copy(Ae))},reset:function(){k=!1,$=null,xe.set(-1,0,0,0)}}}function s(){let k=!1,Ae=null,$=null,xe=null;return{setTest:function(Re){Re?Ie(r.DEPTH_TEST):nt(r.DEPTH_TEST)},setMask:function(Re){Ae!==Re&&!k&&(r.depthMask(Re),Ae=Re)},setFunc:function(Re){if($!==Re){switch(Re){case h0:r.depthFunc(r.NEVER);break;case f0:r.depthFunc(r.ALWAYS);break;case d0:r.depthFunc(r.LESS);break;case zc:r.depthFunc(r.LEQUAL);break;case p0:r.depthFunc(r.EQUAL);break;case m0:r.depthFunc(r.GEQUAL);break;case g0:r.depthFunc(r.GREATER);break;case _0:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}$=Re}},setLocked:function(Re){k=Re},setClear:function(Re){xe!==Re&&(r.clearDepth(Re),xe=Re)},reset:function(){k=!1,Ae=null,$=null,xe=null}}}function l(){let k=!1,Ae=null,$=null,xe=null,Re=null,_t=null,Lt=null,zt=null,Mi=null;return{setTest:function(It){k||(It?Ie(r.STENCIL_TEST):nt(r.STENCIL_TEST))},setMask:function(It){Ae!==It&&!k&&(r.stencilMask(It),Ae=It)},setFunc:function(It,On,hn){($!==It||xe!==On||Re!==hn)&&(r.stencilFunc(It,On,hn),$=It,xe=On,Re=hn)},setOp:function(It,On,hn){(_t!==It||Lt!==On||zt!==hn)&&(r.stencilOp(It,On,hn),_t=It,Lt=On,zt=hn)},setLocked:function(It){k=It},setClear:function(It){Mi!==It&&(r.clearStencil(It),Mi=It)},reset:function(){k=!1,Ae=null,$=null,xe=null,Re=null,_t=null,Lt=null,zt=null,Mi=null}}}const c=new i,u=new s,h=new l,d=new WeakMap,p=new WeakMap;let m={},_={},y=new WeakMap,E=[],x=null,v=!1,w=null,S=null,A=null,R=null,C=null,N=null,O=null,b=!1,L=null,z=null,te=null,W=null,q=null;const Q=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ce=!1,ie=0;const V=r.getParameter(r.VERSION);V.indexOf("WebGL")!==-1?(ie=parseFloat(/^WebGL (\d)/.exec(V)[1]),ce=ie>=1):V.indexOf("OpenGL ES")!==-1&&(ie=parseFloat(/^OpenGL ES (\d)/.exec(V)[1]),ce=ie>=2);let Z=null,J={};const he=r.getParameter(r.SCISSOR_BOX),X=r.getParameter(r.VIEWPORT),le=new At().fromArray(he),de=new At().fromArray(X);function Se(k,Ae,$,xe){const Re=new Uint8Array(4),_t=r.createTexture();r.bindTexture(k,_t),r.texParameteri(k,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(k,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Lt=0;Lt<$;Lt++)n&&(k===r.TEXTURE_3D||k===r.TEXTURE_2D_ARRAY)?r.texImage3D(Ae,0,r.RGBA,1,1,xe,0,r.RGBA,r.UNSIGNED_BYTE,Re):r.texImage2D(Ae+Lt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Re);return _t}const Te={};Te[r.TEXTURE_2D]=Se(r.TEXTURE_2D,r.TEXTURE_2D,1),Te[r.TEXTURE_CUBE_MAP]=Se(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Te[r.TEXTURE_2D_ARRAY]=Se(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Te[r.TEXTURE_3D]=Se(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),Ie(r.DEPTH_TEST),u.setFunc(zc),pe(!1),ze(nf),Ie(r.CULL_FACE),ue($i);function Ie(k){m[k]!==!0&&(r.enable(k),m[k]=!0)}function nt(k){m[k]!==!1&&(r.disable(k),m[k]=!1)}function Je(k,Ae){return _[k]!==Ae?(r.bindFramebuffer(k,Ae),_[k]=Ae,n&&(k===r.DRAW_FRAMEBUFFER&&(_[r.FRAMEBUFFER]=Ae),k===r.FRAMEBUFFER&&(_[r.DRAW_FRAMEBUFFER]=Ae)),!0):!1}function vt(k,Ae){let $=E,xe=!1;if(k)if($=y.get(Ae),$===void 0&&($=[],y.set(Ae,$)),k.isWebGLMultipleRenderTargets){const Re=k.texture;if($.length!==Re.length||$[0]!==r.COLOR_ATTACHMENT0){for(let _t=0,Lt=Re.length;_t<Lt;_t++)$[_t]=r.COLOR_ATTACHMENT0+_t;$.length=Re.length,xe=!0}}else $[0]!==r.COLOR_ATTACHMENT0&&($[0]=r.COLOR_ATTACHMENT0,xe=!0);else $[0]!==r.BACK&&($[0]=r.BACK,xe=!0);xe&&(t.isWebGL2?r.drawBuffers($):e.get("WEBGL_draw_buffers").drawBuffersWEBGL($))}function Ge(k){return x!==k?(r.useProgram(k),x=k,!0):!1}const B={[jr]:r.FUNC_ADD,[e0]:r.FUNC_SUBTRACT,[t0]:r.FUNC_REVERSE_SUBTRACT};if(n)B[af]=r.MIN,B[lf]=r.MAX;else{const k=e.get("EXT_blend_minmax");k!==null&&(B[af]=k.MIN_EXT,B[lf]=k.MAX_EXT)}const me={[n0]:r.ZERO,[i0]:r.ONE,[r0]:r.SRC_COLOR,[Xf]:r.SRC_ALPHA,[u0]:r.SRC_ALPHA_SATURATE,[l0]:r.DST_COLOR,[o0]:r.DST_ALPHA,[s0]:r.ONE_MINUS_SRC_COLOR,[Yf]:r.ONE_MINUS_SRC_ALPHA,[c0]:r.ONE_MINUS_DST_COLOR,[a0]:r.ONE_MINUS_DST_ALPHA};function ue(k,Ae,$,xe,Re,_t,Lt,zt){if(k===$i){v===!0&&(nt(r.BLEND),v=!1);return}if(v===!1&&(Ie(r.BLEND),v=!0),k!==$g){if(k!==w||zt!==b){if((S!==jr||C!==jr)&&(r.blendEquation(r.FUNC_ADD),S=jr,C=jr),zt)switch(k){case is:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case rf:r.blendFunc(r.ONE,r.ONE);break;case sf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case of:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case is:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case rf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case sf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case of:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}A=null,R=null,N=null,O=null,w=k,b=zt}return}Re=Re||Ae,_t=_t||$,Lt=Lt||xe,(Ae!==S||Re!==C)&&(r.blendEquationSeparate(B[Ae],B[Re]),S=Ae,C=Re),($!==A||xe!==R||_t!==N||Lt!==O)&&(r.blendFuncSeparate(me[$],me[xe],me[_t],me[Lt]),A=$,R=xe,N=_t,O=Lt),w=k,b=!1}function ye(k,Ae){k.side===Pi?nt(r.CULL_FACE):Ie(r.CULL_FACE);let $=k.side===Rn;Ae&&($=!$),pe($),k.blending===is&&k.transparent===!1?ue($i):ue(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.premultipliedAlpha),u.setFunc(k.depthFunc),u.setTest(k.depthTest),u.setMask(k.depthWrite),c.setMask(k.colorWrite);const xe=k.stencilWrite;h.setTest(xe),xe&&(h.setMask(k.stencilWriteMask),h.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),h.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),Ue(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?Ie(r.SAMPLE_ALPHA_TO_COVERAGE):nt(r.SAMPLE_ALPHA_TO_COVERAGE)}function pe(k){L!==k&&(k?r.frontFace(r.CW):r.frontFace(r.CCW),L=k)}function ze(k){k!==Kg?(Ie(r.CULL_FACE),k!==z&&(k===nf?r.cullFace(r.BACK):k===jg?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):nt(r.CULL_FACE),z=k}function Pe(k){k!==te&&(ce&&r.lineWidth(k),te=k)}function Ue(k,Ae,$){k?(Ie(r.POLYGON_OFFSET_FILL),(W!==Ae||q!==$)&&(r.polygonOffset(Ae,$),W=Ae,q=$)):nt(r.POLYGON_OFFSET_FILL)}function Ke(k){k?Ie(r.SCISSOR_TEST):nt(r.SCISSOR_TEST)}function gt(k){k===void 0&&(k=r.TEXTURE0+Q-1),Z!==k&&(r.activeTexture(k),Z=k)}function Nt(k,Ae,$){$===void 0&&(Z===null?$=r.TEXTURE0+Q-1:$=Z);let xe=J[$];xe===void 0&&(xe={type:void 0,texture:void 0},J[$]=xe),(xe.type!==k||xe.texture!==Ae)&&(Z!==$&&(r.activeTexture($),Z=$),r.bindTexture(k,Ae||Te[k]),xe.type=k,xe.texture=Ae)}function F(){const k=J[Z];k!==void 0&&k.type!==void 0&&(r.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function P(){try{r.compressedTexImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function re(){try{r.compressedTexImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ge(){try{r.texSubImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function _e(){try{r.texSubImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ee(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ke(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function we(){try{r.texStorage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ae(){try{r.texStorage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function We(){try{r.texImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Xe(){try{r.texImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ze(k){le.equals(k)===!1&&(r.scissor(k.x,k.y,k.z,k.w),le.copy(k))}function Fe(k){de.equals(k)===!1&&(r.viewport(k.x,k.y,k.z,k.w),de.copy(k))}function Oe(k,Ae){let $=p.get(Ae);$===void 0&&($=new WeakMap,p.set(Ae,$));let xe=$.get(k);xe===void 0&&(xe=r.getUniformBlockIndex(Ae,k.name),$.set(k,xe))}function lt(k,Ae){const xe=p.get(Ae).get(k);d.get(Ae)!==xe&&(r.uniformBlockBinding(Ae,xe,k.__bindingPointIndex),d.set(Ae,xe))}function bt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},Z=null,J={},_={},y=new WeakMap,E=[],x=null,v=!1,w=null,S=null,A=null,R=null,C=null,N=null,O=null,b=!1,L=null,z=null,te=null,W=null,q=null,le.set(0,0,r.canvas.width,r.canvas.height),de.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:Ie,disable:nt,bindFramebuffer:Je,drawBuffers:vt,useProgram:Ge,setBlending:ue,setMaterial:ye,setFlipSided:pe,setCullFace:ze,setLineWidth:Pe,setPolygonOffset:Ue,setScissorTest:Ke,activeTexture:gt,bindTexture:Nt,unbindTexture:F,compressedTexImage2D:P,compressedTexImage3D:re,texImage2D:We,texImage3D:Xe,updateUBOMapping:Oe,uniformBlockBinding:lt,texStorage2D:we,texStorage3D:ae,texSubImage2D:ge,texSubImage3D:_e,compressedTexSubImage2D:Ee,compressedTexSubImage3D:ke,scissor:Ze,viewport:Fe,reset:bt}}function ew(r,e,t,n,i,s,l){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,_=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let E;const x=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(F,P){return v?new OffscreenCanvas(F,P):_a("canvas")}function S(F,P,re,ge){let _e=1;if((F.width>ge||F.height>ge)&&(_e=ge/Math.max(F.width,F.height)),_e<1||P===!0)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap){const Ee=P?Vc:Math.floor,ke=Ee(_e*F.width),we=Ee(_e*F.height);E===void 0&&(E=w(ke,we));const ae=re?w(ke,we):E;return ae.width=ke,ae.height=we,ae.getContext("2d").drawImage(F,0,0,ke,we),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+ke+"x"+we+")."),ae}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function A(F){return Uf(F.width)&&Uf(F.height)}function R(F){return c?!1:F.wrapS!==Sn||F.wrapT!==Sn||F.minFilter!==qt&&F.minFilter!==Zt}function C(F,P){return F.generateMipmaps&&P&&F.minFilter!==qt&&F.minFilter!==Zt}function N(F){r.generateMipmap(F)}function O(F,P,re,ge,_e=!1){if(c===!1)return P;if(F!==null){if(r[F]!==void 0)return r[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let Ee=P;return P===r.RED&&(re===r.FLOAT&&(Ee=r.R32F),re===r.HALF_FLOAT&&(Ee=r.R16F),re===r.UNSIGNED_BYTE&&(Ee=r.R8)),P===r.RG&&(re===r.FLOAT&&(Ee=r.RG32F),re===r.HALF_FLOAT&&(Ee=r.RG16F),re===r.UNSIGNED_BYTE&&(Ee=r.RG8)),P===r.RGBA&&(re===r.FLOAT&&(Ee=r.RGBA32F),re===r.HALF_FLOAT&&(Ee=r.RGBA16F),re===r.UNSIGNED_BYTE&&(Ee=ge===at&&_e===!1?r.SRGB8_ALPHA8:r.RGBA8),re===r.UNSIGNED_SHORT_4_4_4_4&&(Ee=r.RGBA4),re===r.UNSIGNED_SHORT_5_5_5_1&&(Ee=r.RGB5_A1)),(Ee===r.R16F||Ee===r.R32F||Ee===r.RG16F||Ee===r.RG32F||Ee===r.RGBA16F||Ee===r.RGBA32F)&&e.get("EXT_color_buffer_float"),Ee}function b(F,P,re){return C(F,re)===!0||F.isFramebufferTexture&&F.minFilter!==qt&&F.minFilter!==Zt?Math.log2(Math.max(P.width,P.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?P.mipmaps.length:1}function L(F){return F===qt||F===kc||F===ia?r.NEAREST:r.LINEAR}function z(F){const P=F.target;P.removeEventListener("dispose",z),W(P),P.isVideoTexture&&y.delete(P)}function te(F){const P=F.target;P.removeEventListener("dispose",te),Q(P)}function W(F){const P=n.get(F);if(P.__webglInit===void 0)return;const re=F.source,ge=x.get(re);if(ge){const _e=ge[P.__cacheKey];_e.usedTimes--,_e.usedTimes===0&&q(F),Object.keys(ge).length===0&&x.delete(re)}n.remove(F)}function q(F){const P=n.get(F);r.deleteTexture(P.__webglTexture);const re=F.source,ge=x.get(re);delete ge[P.__cacheKey],l.memory.textures--}function Q(F){const P=F.texture,re=n.get(F),ge=n.get(P);if(ge.__webglTexture!==void 0&&(r.deleteTexture(ge.__webglTexture),l.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let _e=0;_e<6;_e++)r.deleteFramebuffer(re.__webglFramebuffer[_e]),re.__webglDepthbuffer&&r.deleteRenderbuffer(re.__webglDepthbuffer[_e]);else{if(r.deleteFramebuffer(re.__webglFramebuffer),re.__webglDepthbuffer&&r.deleteRenderbuffer(re.__webglDepthbuffer),re.__webglMultisampledFramebuffer&&r.deleteFramebuffer(re.__webglMultisampledFramebuffer),re.__webglColorRenderbuffer)for(let _e=0;_e<re.__webglColorRenderbuffer.length;_e++)re.__webglColorRenderbuffer[_e]&&r.deleteRenderbuffer(re.__webglColorRenderbuffer[_e]);re.__webglDepthRenderbuffer&&r.deleteRenderbuffer(re.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let _e=0,Ee=P.length;_e<Ee;_e++){const ke=n.get(P[_e]);ke.__webglTexture&&(r.deleteTexture(ke.__webglTexture),l.memory.textures--),n.remove(P[_e])}n.remove(P),n.remove(F)}let ce=0;function ie(){ce=0}function V(){const F=ce;return F>=u&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+u),ce+=1,F}function Z(F){const P=[];return P.push(F.wrapS),P.push(F.wrapT),P.push(F.wrapR||0),P.push(F.magFilter),P.push(F.minFilter),P.push(F.anisotropy),P.push(F.internalFormat),P.push(F.format),P.push(F.type),P.push(F.generateMipmaps),P.push(F.premultiplyAlpha),P.push(F.flipY),P.push(F.unpackAlignment),P.push(F.colorSpace),P.join()}function J(F,P){const re=n.get(F);if(F.isVideoTexture&&gt(F),F.isRenderTargetTexture===!1&&F.version>0&&re.__version!==F.version){const ge=F.image;if(ge===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ge.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Je(re,F,P);return}}t.bindTexture(r.TEXTURE_2D,re.__webglTexture,r.TEXTURE0+P)}function he(F,P){const re=n.get(F);if(F.version>0&&re.__version!==F.version){Je(re,F,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,re.__webglTexture,r.TEXTURE0+P)}function X(F,P){const re=n.get(F);if(F.version>0&&re.__version!==F.version){Je(re,F,P);return}t.bindTexture(r.TEXTURE_3D,re.__webglTexture,r.TEXTURE0+P)}function le(F,P){const re=n.get(F);if(F.version>0&&re.__version!==F.version){vt(re,F,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,re.__webglTexture,r.TEXTURE0+P)}const de={[ua]:r.REPEAT,[Sn]:r.CLAMP_TO_EDGE,[ha]:r.MIRRORED_REPEAT},Se={[qt]:r.NEAREST,[kc]:r.NEAREST_MIPMAP_NEAREST,[ia]:r.NEAREST_MIPMAP_LINEAR,[Zt]:r.LINEAR,[Zf]:r.LINEAR_MIPMAP_NEAREST,[Ar]:r.LINEAR_MIPMAP_LINEAR},Te={[k0]:r.NEVER,[q0]:r.ALWAYS,[H0]:r.LESS,[G0]:r.LEQUAL,[V0]:r.EQUAL,[Y0]:r.GEQUAL,[W0]:r.GREATER,[X0]:r.NOTEQUAL};function Ie(F,P,re){if(re?(r.texParameteri(F,r.TEXTURE_WRAP_S,de[P.wrapS]),r.texParameteri(F,r.TEXTURE_WRAP_T,de[P.wrapT]),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,de[P.wrapR]),r.texParameteri(F,r.TEXTURE_MAG_FILTER,Se[P.magFilter]),r.texParameteri(F,r.TEXTURE_MIN_FILTER,Se[P.minFilter])):(r.texParameteri(F,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(F,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(P.wrapS!==Sn||P.wrapT!==Sn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(F,r.TEXTURE_MAG_FILTER,L(P.magFilter)),r.texParameteri(F,r.TEXTURE_MIN_FILTER,L(P.minFilter)),P.minFilter!==qt&&P.minFilter!==Zt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),P.compareFunction&&(r.texParameteri(F,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(F,r.TEXTURE_COMPARE_FUNC,Te[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const ge=e.get("EXT_texture_filter_anisotropic");if(P.magFilter===qt||P.minFilter!==ia&&P.minFilter!==Ar||P.type===Li&&e.has("OES_texture_float_linear")===!1||c===!1&&P.type===lo&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(r.texParameterf(F,ge.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function nt(F,P){let re=!1;F.__webglInit===void 0&&(F.__webglInit=!0,P.addEventListener("dispose",z));const ge=P.source;let _e=x.get(ge);_e===void 0&&(_e={},x.set(ge,_e));const Ee=Z(P);if(Ee!==F.__cacheKey){_e[Ee]===void 0&&(_e[Ee]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,re=!0),_e[Ee].usedTimes++;const ke=_e[F.__cacheKey];ke!==void 0&&(_e[F.__cacheKey].usedTimes--,ke.usedTimes===0&&q(P)),F.__cacheKey=Ee,F.__webglTexture=_e[Ee].texture}return re}function Je(F,P,re){let ge=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(ge=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(ge=r.TEXTURE_3D);const _e=nt(F,P),Ee=P.source;t.bindTexture(ge,F.__webglTexture,r.TEXTURE0+re);const ke=n.get(Ee);if(Ee.version!==ke.__version||_e===!0){t.activeTexture(r.TEXTURE0+re),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const we=R(P)&&A(P.image)===!1;let ae=S(P.image,we,!1,d);ae=Nt(P,ae);const We=A(ae)||c,Xe=s.convert(P.format,P.colorSpace);let Ze=s.convert(P.type),Fe=O(P.internalFormat,Xe,Ze,P.colorSpace);Ie(ge,P,We);let Oe;const lt=P.mipmaps,bt=c&&P.isVideoTexture!==!0,k=ke.__version===void 0||_e===!0,Ae=b(P,ae,We);if(P.isDepthTexture)Fe=r.DEPTH_COMPONENT,c?P.type===Li?Fe=r.DEPTH_COMPONENT32F:P.type===Qi?Fe=r.DEPTH_COMPONENT24:P.type===xr?Fe=r.DEPTH24_STENCIL8:Fe=r.DEPTH_COMPONENT16:P.type===Li&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===Mr&&Fe===r.DEPTH_COMPONENT&&P.type!==qc&&P.type!==Qi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=Qi,Ze=s.convert(P.type)),P.format===as&&Fe===r.DEPTH_COMPONENT&&(Fe=r.DEPTH_STENCIL,P.type!==xr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=xr,Ze=s.convert(P.type))),k&&(bt?t.texStorage2D(r.TEXTURE_2D,1,Fe,ae.width,ae.height):t.texImage2D(r.TEXTURE_2D,0,Fe,ae.width,ae.height,0,Xe,Ze,null));else if(P.isDataTexture)if(lt.length>0&&We){bt&&k&&t.texStorage2D(r.TEXTURE_2D,Ae,Fe,lt[0].width,lt[0].height);for(let $=0,xe=lt.length;$<xe;$++)Oe=lt[$],bt?t.texSubImage2D(r.TEXTURE_2D,$,0,0,Oe.width,Oe.height,Xe,Ze,Oe.data):t.texImage2D(r.TEXTURE_2D,$,Fe,Oe.width,Oe.height,0,Xe,Ze,Oe.data);P.generateMipmaps=!1}else bt?(k&&t.texStorage2D(r.TEXTURE_2D,Ae,Fe,ae.width,ae.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,ae.width,ae.height,Xe,Ze,ae.data)):t.texImage2D(r.TEXTURE_2D,0,Fe,ae.width,ae.height,0,Xe,Ze,ae.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){bt&&k&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ae,Fe,lt[0].width,lt[0].height,ae.depth);for(let $=0,xe=lt.length;$<xe;$++)Oe=lt[$],P.format!==Nn?Xe!==null?bt?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,$,0,0,0,Oe.width,Oe.height,ae.depth,Xe,Oe.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,$,Fe,Oe.width,Oe.height,ae.depth,0,Oe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):bt?t.texSubImage3D(r.TEXTURE_2D_ARRAY,$,0,0,0,Oe.width,Oe.height,ae.depth,Xe,Ze,Oe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,$,Fe,Oe.width,Oe.height,ae.depth,0,Xe,Ze,Oe.data)}else{bt&&k&&t.texStorage2D(r.TEXTURE_2D,Ae,Fe,lt[0].width,lt[0].height);for(let $=0,xe=lt.length;$<xe;$++)Oe=lt[$],P.format!==Nn?Xe!==null?bt?t.compressedTexSubImage2D(r.TEXTURE_2D,$,0,0,Oe.width,Oe.height,Xe,Oe.data):t.compressedTexImage2D(r.TEXTURE_2D,$,Fe,Oe.width,Oe.height,0,Oe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):bt?t.texSubImage2D(r.TEXTURE_2D,$,0,0,Oe.width,Oe.height,Xe,Ze,Oe.data):t.texImage2D(r.TEXTURE_2D,$,Fe,Oe.width,Oe.height,0,Xe,Ze,Oe.data)}else if(P.isDataArrayTexture)bt?(k&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ae,Fe,ae.width,ae.height,ae.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,ae.width,ae.height,ae.depth,Xe,Ze,ae.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Fe,ae.width,ae.height,ae.depth,0,Xe,Ze,ae.data);else if(P.isData3DTexture)bt?(k&&t.texStorage3D(r.TEXTURE_3D,Ae,Fe,ae.width,ae.height,ae.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,ae.width,ae.height,ae.depth,Xe,Ze,ae.data)):t.texImage3D(r.TEXTURE_3D,0,Fe,ae.width,ae.height,ae.depth,0,Xe,Ze,ae.data);else if(P.isFramebufferTexture){if(k)if(bt)t.texStorage2D(r.TEXTURE_2D,Ae,Fe,ae.width,ae.height);else{let $=ae.width,xe=ae.height;for(let Re=0;Re<Ae;Re++)t.texImage2D(r.TEXTURE_2D,Re,Fe,$,xe,0,Xe,Ze,null),$>>=1,xe>>=1}}else if(lt.length>0&&We){bt&&k&&t.texStorage2D(r.TEXTURE_2D,Ae,Fe,lt[0].width,lt[0].height);for(let $=0,xe=lt.length;$<xe;$++)Oe=lt[$],bt?t.texSubImage2D(r.TEXTURE_2D,$,0,0,Xe,Ze,Oe):t.texImage2D(r.TEXTURE_2D,$,Fe,Xe,Ze,Oe);P.generateMipmaps=!1}else bt?(k&&t.texStorage2D(r.TEXTURE_2D,Ae,Fe,ae.width,ae.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Xe,Ze,ae)):t.texImage2D(r.TEXTURE_2D,0,Fe,Xe,Ze,ae);C(P,We)&&N(ge),ke.__version=Ee.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function vt(F,P,re){if(P.image.length!==6)return;const ge=nt(F,P),_e=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,F.__webglTexture,r.TEXTURE0+re);const Ee=n.get(_e);if(_e.version!==Ee.__version||ge===!0){t.activeTexture(r.TEXTURE0+re),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const ke=P.isCompressedTexture||P.image[0].isCompressedTexture,we=P.image[0]&&P.image[0].isDataTexture,ae=[];for(let $=0;$<6;$++)!ke&&!we?ae[$]=S(P.image[$],!1,!0,h):ae[$]=we?P.image[$].image:P.image[$],ae[$]=Nt(P,ae[$]);const We=ae[0],Xe=A(We)||c,Ze=s.convert(P.format,P.colorSpace),Fe=s.convert(P.type),Oe=O(P.internalFormat,Ze,Fe,P.colorSpace),lt=c&&P.isVideoTexture!==!0,bt=Ee.__version===void 0||ge===!0;let k=b(P,We,Xe);Ie(r.TEXTURE_CUBE_MAP,P,Xe);let Ae;if(ke){lt&&bt&&t.texStorage2D(r.TEXTURE_CUBE_MAP,k,Oe,We.width,We.height);for(let $=0;$<6;$++){Ae=ae[$].mipmaps;for(let xe=0;xe<Ae.length;xe++){const Re=Ae[xe];P.format!==Nn?Ze!==null?lt?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,xe,0,0,Re.width,Re.height,Ze,Re.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,xe,Oe,Re.width,Re.height,0,Re.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):lt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,xe,0,0,Re.width,Re.height,Ze,Fe,Re.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,xe,Oe,Re.width,Re.height,0,Ze,Fe,Re.data)}}}else{Ae=P.mipmaps,lt&&bt&&(Ae.length>0&&k++,t.texStorage2D(r.TEXTURE_CUBE_MAP,k,Oe,ae[0].width,ae[0].height));for(let $=0;$<6;$++)if(we){lt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,0,0,0,ae[$].width,ae[$].height,Ze,Fe,ae[$].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,0,Oe,ae[$].width,ae[$].height,0,Ze,Fe,ae[$].data);for(let xe=0;xe<Ae.length;xe++){const _t=Ae[xe].image[$].image;lt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,xe+1,0,0,_t.width,_t.height,Ze,Fe,_t.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,xe+1,Oe,_t.width,_t.height,0,Ze,Fe,_t.data)}}else{lt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,0,0,0,Ze,Fe,ae[$]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,0,Oe,Ze,Fe,ae[$]);for(let xe=0;xe<Ae.length;xe++){const Re=Ae[xe];lt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,xe+1,0,0,Ze,Fe,Re.image[$]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+$,xe+1,Oe,Ze,Fe,Re.image[$])}}}C(P,Xe)&&N(r.TEXTURE_CUBE_MAP),Ee.__version=_e.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function Ge(F,P,re,ge,_e){const Ee=s.convert(re.format,re.colorSpace),ke=s.convert(re.type),we=O(re.internalFormat,Ee,ke,re.colorSpace);n.get(P).__hasExternalTextures||(_e===r.TEXTURE_3D||_e===r.TEXTURE_2D_ARRAY?t.texImage3D(_e,0,we,P.width,P.height,P.depth,0,Ee,ke,null):t.texImage2D(_e,0,we,P.width,P.height,0,Ee,ke,null)),t.bindFramebuffer(r.FRAMEBUFFER,F),Ke(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ge,_e,n.get(re).__webglTexture,0,Ue(P)):(_e===r.TEXTURE_2D||_e>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&_e<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,ge,_e,n.get(re).__webglTexture,0),t.bindFramebuffer(r.FRAMEBUFFER,null)}function B(F,P,re){if(r.bindRenderbuffer(r.RENDERBUFFER,F),P.depthBuffer&&!P.stencilBuffer){let ge=r.DEPTH_COMPONENT16;if(re||Ke(P)){const _e=P.depthTexture;_e&&_e.isDepthTexture&&(_e.type===Li?ge=r.DEPTH_COMPONENT32F:_e.type===Qi&&(ge=r.DEPTH_COMPONENT24));const Ee=Ue(P);Ke(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ee,ge,P.width,P.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,Ee,ge,P.width,P.height)}else r.renderbufferStorage(r.RENDERBUFFER,ge,P.width,P.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,F)}else if(P.depthBuffer&&P.stencilBuffer){const ge=Ue(P);re&&Ke(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ge,r.DEPTH24_STENCIL8,P.width,P.height):Ke(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ge,r.DEPTH24_STENCIL8,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,F)}else{const ge=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let _e=0;_e<ge.length;_e++){const Ee=ge[_e],ke=s.convert(Ee.format,Ee.colorSpace),we=s.convert(Ee.type),ae=O(Ee.internalFormat,ke,we,Ee.colorSpace),We=Ue(P);re&&Ke(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,We,ae,P.width,P.height):Ke(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,We,ae,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,ae,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function me(F,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,F),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),J(P.depthTexture,0);const ge=n.get(P.depthTexture).__webglTexture,_e=Ue(P);if(P.depthTexture.format===Mr)Ke(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ge,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ge,0);else if(P.depthTexture.format===as)Ke(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ge,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ge,0);else throw new Error("Unknown depthTexture format")}function ue(F){const P=n.get(F),re=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!P.__autoAllocateDepthBuffer){if(re)throw new Error("target.depthTexture not supported in Cube render targets");me(P.__webglFramebuffer,F)}else if(re){P.__webglDepthbuffer=[];for(let ge=0;ge<6;ge++)t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[ge]),P.__webglDepthbuffer[ge]=r.createRenderbuffer(),B(P.__webglDepthbuffer[ge],F,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),B(P.__webglDepthbuffer,F,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function ye(F,P,re){const ge=n.get(F);P!==void 0&&Ge(ge.__webglFramebuffer,F,F.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D),re!==void 0&&ue(F)}function pe(F){const P=F.texture,re=n.get(F),ge=n.get(P);F.addEventListener("dispose",te),F.isWebGLMultipleRenderTargets!==!0&&(ge.__webglTexture===void 0&&(ge.__webglTexture=r.createTexture()),ge.__version=P.version,l.memory.textures++);const _e=F.isWebGLCubeRenderTarget===!0,Ee=F.isWebGLMultipleRenderTargets===!0,ke=A(F)||c;if(_e){re.__webglFramebuffer=[];for(let we=0;we<6;we++)re.__webglFramebuffer[we]=r.createFramebuffer()}else{if(re.__webglFramebuffer=r.createFramebuffer(),Ee)if(i.drawBuffers){const we=F.texture;for(let ae=0,We=we.length;ae<We;ae++){const Xe=n.get(we[ae]);Xe.__webglTexture===void 0&&(Xe.__webglTexture=r.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&F.samples>0&&Ke(F)===!1){const we=Ee?P:[P];re.__webglMultisampledFramebuffer=r.createFramebuffer(),re.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,re.__webglMultisampledFramebuffer);for(let ae=0;ae<we.length;ae++){const We=we[ae];re.__webglColorRenderbuffer[ae]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,re.__webglColorRenderbuffer[ae]);const Xe=s.convert(We.format,We.colorSpace),Ze=s.convert(We.type),Fe=O(We.internalFormat,Xe,Ze,We.colorSpace,F.isXRRenderTarget===!0),Oe=Ue(F);r.renderbufferStorageMultisample(r.RENDERBUFFER,Oe,Fe,F.width,F.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+ae,r.RENDERBUFFER,re.__webglColorRenderbuffer[ae])}r.bindRenderbuffer(r.RENDERBUFFER,null),F.depthBuffer&&(re.__webglDepthRenderbuffer=r.createRenderbuffer(),B(re.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(_e){t.bindTexture(r.TEXTURE_CUBE_MAP,ge.__webglTexture),Ie(r.TEXTURE_CUBE_MAP,P,ke);for(let we=0;we<6;we++)Ge(re.__webglFramebuffer[we],F,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+we);C(P,ke)&&N(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ee){const we=F.texture;for(let ae=0,We=we.length;ae<We;ae++){const Xe=we[ae],Ze=n.get(Xe);t.bindTexture(r.TEXTURE_2D,Ze.__webglTexture),Ie(r.TEXTURE_2D,Xe,ke),Ge(re.__webglFramebuffer,F,Xe,r.COLOR_ATTACHMENT0+ae,r.TEXTURE_2D),C(Xe,ke)&&N(r.TEXTURE_2D)}t.unbindTexture()}else{let we=r.TEXTURE_2D;(F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(c?we=F.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(we,ge.__webglTexture),Ie(we,P,ke),Ge(re.__webglFramebuffer,F,P,r.COLOR_ATTACHMENT0,we),C(P,ke)&&N(we),t.unbindTexture()}F.depthBuffer&&ue(F)}function ze(F){const P=A(F)||c,re=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let ge=0,_e=re.length;ge<_e;ge++){const Ee=re[ge];if(C(Ee,P)){const ke=F.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,we=n.get(Ee).__webglTexture;t.bindTexture(ke,we),N(ke),t.unbindTexture()}}}function Pe(F){if(c&&F.samples>0&&Ke(F)===!1){const P=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],re=F.width,ge=F.height;let _e=r.COLOR_BUFFER_BIT;const Ee=[],ke=F.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,we=n.get(F),ae=F.isWebGLMultipleRenderTargets===!0;if(ae)for(let We=0;We<P.length;We++)t.bindFramebuffer(r.FRAMEBUFFER,we.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+We,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,we.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+We,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,we.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,we.__webglFramebuffer);for(let We=0;We<P.length;We++){Ee.push(r.COLOR_ATTACHMENT0+We),F.depthBuffer&&Ee.push(ke);const Xe=we.__ignoreDepthValues!==void 0?we.__ignoreDepthValues:!1;if(Xe===!1&&(F.depthBuffer&&(_e|=r.DEPTH_BUFFER_BIT),F.stencilBuffer&&(_e|=r.STENCIL_BUFFER_BIT)),ae&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,we.__webglColorRenderbuffer[We]),Xe===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[ke]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[ke])),ae){const Ze=n.get(P[We]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Ze,0)}r.blitFramebuffer(0,0,re,ge,0,0,re,ge,_e,r.NEAREST),_&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Ee)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),ae)for(let We=0;We<P.length;We++){t.bindFramebuffer(r.FRAMEBUFFER,we.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+We,r.RENDERBUFFER,we.__webglColorRenderbuffer[We]);const Xe=n.get(P[We]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,we.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+We,r.TEXTURE_2D,Xe,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,we.__webglMultisampledFramebuffer)}}function Ue(F){return Math.min(p,F.samples)}function Ke(F){const P=n.get(F);return c&&F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function gt(F){const P=l.render.frame;y.get(F)!==P&&(y.set(F,P),F.update())}function Nt(F,P){const re=F.colorSpace,ge=F.format,_e=F.type;return F.isCompressedTexture===!0||F.format===Hc||re!==gi&&re!==Er&&(re===at?c===!1?e.has("EXT_sRGB")===!0&&ge===Nn?(F.format=Hc,F.minFilter=Zt,F.generateMipmaps=!1):P=sd.sRGBToLinear(P):(ge!==Nn||_e!==Ui)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",re)),P}this.allocateTextureUnit=V,this.resetTextureUnits=ie,this.setTexture2D=J,this.setTexture2DArray=he,this.setTexture3D=X,this.setTextureCube=le,this.rebindTextures=ye,this.setupRenderTarget=pe,this.updateRenderTargetMipmap=ze,this.updateMultisampleRenderTarget=Pe,this.setupDepthRenderbuffer=ue,this.setupFrameBufferTexture=Ge,this.useMultisampledRTT=Ke}function o_(r,e,t){const n=t.isWebGL2;function i(s,l=Er){let c;if(s===Ui)return r.UNSIGNED_BYTE;if(s===Kf)return r.UNSIGNED_SHORT_4_4_4_4;if(s===jf)return r.UNSIGNED_SHORT_5_5_5_1;if(s===w0)return r.BYTE;if(s===T0)return r.SHORT;if(s===qc)return r.UNSIGNED_SHORT;if(s===Jf)return r.INT;if(s===Qi)return r.UNSIGNED_INT;if(s===Li)return r.FLOAT;if(s===lo)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===A0)return r.ALPHA;if(s===Nn)return r.RGBA;if(s===b0)return r.LUMINANCE;if(s===R0)return r.LUMINANCE_ALPHA;if(s===Mr)return r.DEPTH_COMPONENT;if(s===as)return r.DEPTH_STENCIL;if(s===Hc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===C0)return r.RED;if(s===Qf)return r.RED_INTEGER;if(s===P0)return r.RG;if(s===$f)return r.RG_INTEGER;if(s===ed)return r.RGBA_INTEGER;if(s===Pc||s===Lc||s===Ic||s===Uc)if(l===at)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Pc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Lc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ic)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Uc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Pc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Lc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ic)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Uc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===cf||s===uf||s===hf||s===ff)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===cf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===uf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===hf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===ff)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===L0)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===df||s===pf)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===df)return l===at?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===pf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===mf||s===gf||s===_f||s===vf||s===yf||s===xf||s===Mf||s===Sf||s===Ef||s===wf||s===Tf||s===Af||s===bf||s===Rf)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===mf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===gf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===_f)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===vf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===yf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===xf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Mf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Sf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Ef)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===wf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Tf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Af)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===bf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Rf)return l===at?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Dc)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Dc)return l===at?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(s===I0||s===Cf||s===Pf||s===Lf)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Dc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===Cf)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===Pf)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===Lf)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===xr?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class a_ extends un{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class io extends Et{constructor(){super(),this.isGroup=!0,this.type="Group"}}const tw={type:"move"};class Nh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new io,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new io,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new io,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const E of e.hand.values()){const x=t.getJointPose(E,n),v=this._getHandJoint(h,E);x!==null&&(v.matrix.fromArray(x.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=x.radius),v.visible=x!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),_=.02,y=.005;h.inputState.pinching&&m>_+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=_-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(tw)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new io;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class l_ extends Jt{constructor(e,t,n,i,s,l,c,u,h,d){if(d=d!==void 0?d:Mr,d!==Mr&&d!==as)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Mr&&(n=Qi),n===void 0&&d===as&&(n=xr),super(null,i,s,l,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:qt,this.minFilter=u!==void 0?u:qt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class nw extends nr{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,d=null,p=null,m=null,_=null,y=null;const E=t.getContextAttributes();let x=null,v=null;const w=[],S=[];let A=null;const R=new un;R.layers.enable(1),R.viewport=new At;const C=new un;C.layers.enable(2),C.viewport=new At;const N=[R,C],O=new a_;O.layers.enable(1),O.layers.enable(2);let b=null,L=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getCamera=function(){},this.setUserCamera=function(X){A=X},this.getController=function(X){let le=w[X];return le===void 0&&(le=new Nh,w[X]=le),le.getTargetRaySpace()},this.getControllerGrip=function(X){let le=w[X];return le===void 0&&(le=new Nh,w[X]=le),le.getGripSpace()},this.getHand=function(X){let le=w[X];return le===void 0&&(le=new Nh,w[X]=le),le.getHandSpace()};function z(X){const le=S.indexOf(X.inputSource);if(le===-1)return;const de=w[le];de!==void 0&&(de.update(X.inputSource,X.frame,h||l),de.dispatchEvent({type:X.type,data:X.inputSource}))}function te(){i.removeEventListener("select",z),i.removeEventListener("selectstart",z),i.removeEventListener("selectend",z),i.removeEventListener("squeeze",z),i.removeEventListener("squeezestart",z),i.removeEventListener("squeezeend",z),i.removeEventListener("end",te),i.removeEventListener("inputsourceschange",W);for(let X=0;X<w.length;X++){const le=S[X];le!==null&&(S[X]=null,w[X].disconnect(le))}b=null,L=null,e.setRenderTarget(x),_=null,m=null,p=null,i=null,v=null,he.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(X){s=X,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(X){c=X,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(X){h=X},this.getBaseLayer=function(){return m!==null?m:_},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(X){if(i=X,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",z),i.addEventListener("selectstart",z),i.addEventListener("selectend",z),i.addEventListener("squeeze",z),i.addEventListener("squeezestart",z),i.addEventListener("squeezeend",z),i.addEventListener("end",te),i.addEventListener("inputsourceschange",W),E.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const le={antialias:i.renderState.layers===void 0?E.antialias:!0,alpha:!0,depth:E.depth,stencil:E.stencil,framebufferScaleFactor:s};_=new XRWebGLLayer(i,t,le),i.updateRenderState({baseLayer:_}),v=new _i(_.framebufferWidth,_.framebufferHeight,{format:Nn,type:Ui,colorSpace:e.outputColorSpace,stencilBuffer:E.stencil})}else{let le=null,de=null,Se=null;E.depth&&(Se=E.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,le=E.stencil?as:Mr,de=E.stencil?xr:Qi);const Te={colorFormat:t.RGBA8,depthFormat:Se,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Te),i.updateRenderState({layers:[m]}),v=new _i(m.textureWidth,m.textureHeight,{format:Nn,type:Ui,depthTexture:new l_(m.textureWidth,m.textureHeight,de,void 0,void 0,void 0,void 0,void 0,void 0,le),stencilBuffer:E.stencil,colorSpace:e.outputColorSpace,samples:E.antialias?4:0});const Ie=e.properties.get(v);Ie.__ignoreDepthValues=m.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),he.setContext(i),he.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function W(X){for(let le=0;le<X.removed.length;le++){const de=X.removed[le],Se=S.indexOf(de);Se>=0&&(S[Se]=null,w[Se].disconnect(de))}for(let le=0;le<X.added.length;le++){const de=X.added[le];let Se=S.indexOf(de);if(Se===-1){for(let Ie=0;Ie<w.length;Ie++)if(Ie>=S.length){S.push(de),Se=Ie;break}else if(S[Ie]===null){S[Ie]=de,Se=Ie;break}if(Se===-1)break}const Te=w[Se];Te&&Te.connect(de)}}const q=new U,Q=new U;function ce(X,le,de){q.setFromMatrixPosition(le.matrixWorld),Q.setFromMatrixPosition(de.matrixWorld);const Se=q.distanceTo(Q),Te=le.projectionMatrix.elements,Ie=de.projectionMatrix.elements,nt=Te[14]/(Te[10]-1),Je=Te[14]/(Te[10]+1),vt=(Te[9]+1)/Te[5],Ge=(Te[9]-1)/Te[5],B=(Te[8]-1)/Te[0],me=(Ie[8]+1)/Ie[0],ue=nt*B,ye=nt*me,pe=Se/(-B+me),ze=pe*-B;le.matrixWorld.decompose(X.position,X.quaternion,X.scale),X.translateX(ze),X.translateZ(pe),X.matrixWorld.compose(X.position,X.quaternion,X.scale),X.matrixWorldInverse.copy(X.matrixWorld).invert();const Pe=nt+pe,Ue=Je+pe,Ke=ue-ze,gt=ye+(Se-ze),Nt=vt*Je/Ue*Pe,F=Ge*Je/Ue*Pe;X.projectionMatrix.makePerspective(Ke,gt,Nt,F,Pe,Ue),X.projectionMatrixInverse.copy(X.projectionMatrix).invert()}function ie(X,le){le===null?X.matrixWorld.copy(X.matrix):X.matrixWorld.multiplyMatrices(le.matrixWorld,X.matrix),X.matrixWorldInverse.copy(X.matrixWorld).invert()}this.updateCameraXR=function(X){if(i===null)return X;A&&(X=A),O.near=C.near=R.near=X.near,O.far=C.far=R.far=X.far,(b!==O.near||L!==O.far)&&(i.updateRenderState({depthNear:O.near,depthFar:O.far}),b=O.near,L=O.far);const le=X.parent,de=O.cameras;ie(O,le);for(let Se=0;Se<de.length;Se++)ie(de[Se],le);return de.length===2?ce(O,R,C):O.projectionMatrix.copy(R.projectionMatrix),A&&V(O,le),O};function V(X,le){const de=A;le===null?de.matrix.copy(X.matrixWorld):(de.matrix.copy(le.matrixWorld),de.matrix.invert(),de.matrix.multiply(X.matrixWorld)),de.matrix.decompose(de.position,de.quaternion,de.scale),de.updateMatrixWorld(!0);const Se=de.children;for(let Te=0,Ie=Se.length;Te<Ie;Te++)Se[Te].updateMatrixWorld(!0);de.projectionMatrix.copy(X.projectionMatrix),de.projectionMatrixInverse.copy(X.projectionMatrixInverse),de.isPerspectiveCamera&&(de.fov=co*2*Math.atan(1/de.projectionMatrix.elements[5]),de.zoom=1)}this.getFoveation=function(){if(!(m===null&&_===null))return u},this.setFoveation=function(X){u=X,m!==null&&(m.fixedFoveation=X),_!==null&&_.fixedFoveation!==void 0&&(_.fixedFoveation=X)};let Z=null;function J(X,le){if(d=le.getViewerPose(h||l),y=le,d!==null){const de=d.views;_!==null&&(e.setRenderTargetFramebuffer(v,_.framebuffer),e.setRenderTarget(v));let Se=!1;de.length!==O.cameras.length&&(O.cameras.length=0,Se=!0);for(let Te=0;Te<de.length;Te++){const Ie=de[Te];let nt=null;if(_!==null)nt=_.getViewport(Ie);else{const vt=p.getViewSubImage(m,Ie);nt=vt.viewport,Te===0&&(e.setRenderTargetTextures(v,vt.colorTexture,m.ignoreDepthValues?void 0:vt.depthStencilTexture),e.setRenderTarget(v))}let Je=N[Te];Je===void 0&&(Je=new un,Je.layers.enable(Te),Je.viewport=new At,N[Te]=Je),Je.matrix.fromArray(Ie.transform.matrix),Je.matrix.decompose(Je.position,Je.quaternion,Je.scale),Je.projectionMatrix.fromArray(Ie.projectionMatrix),Je.projectionMatrixInverse.copy(Je.projectionMatrix).invert(),Je.viewport.set(nt.x,nt.y,nt.width,nt.height),Te===0&&(O.matrix.copy(Je.matrix),O.matrix.decompose(O.position,O.quaternion,O.scale)),Se===!0&&O.cameras.push(Je)}}for(let de=0;de<w.length;de++){const Se=S[de],Te=w[de];Se!==null&&Te!==void 0&&Te.update(Se,le,h||l)}Z&&Z(X,le),le.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:le}),y=null}const he=new t_;he.setAnimationLoop(J),this.setAnimationLoop=function(X){Z=X},this.dispose=function(){}}}function iw(r,e){function t(x,v){x.matrixAutoUpdate===!0&&x.updateMatrix(),v.value.copy(x.matrix)}function n(x,v){v.color.getRGB(x.fogColor.value,j0(r)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function i(x,v,w,S,A){v.isMeshBasicMaterial||v.isMeshLambertMaterial?s(x,v):v.isMeshToonMaterial?(s(x,v),p(x,v)):v.isMeshPhongMaterial?(s(x,v),d(x,v)):v.isMeshStandardMaterial?(s(x,v),m(x,v),v.isMeshPhysicalMaterial&&_(x,v,A)):v.isMeshMatcapMaterial?(s(x,v),y(x,v)):v.isMeshDepthMaterial?s(x,v):v.isMeshDistanceMaterial?(s(x,v),E(x,v)):v.isMeshNormalMaterial?s(x,v):v.isLineBasicMaterial?(l(x,v),v.isLineDashedMaterial&&c(x,v)):v.isPointsMaterial?u(x,v,w,S):v.isSpriteMaterial?h(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function s(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.bumpMap&&(x.bumpMap.value=v.bumpMap,t(v.bumpMap,x.bumpMapTransform),x.bumpScale.value=v.bumpScale,v.side===Rn&&(x.bumpScale.value*=-1)),v.normalMap&&(x.normalMap.value=v.normalMap,t(v.normalMap,x.normalMapTransform),x.normalScale.value.copy(v.normalScale),v.side===Rn&&x.normalScale.value.negate()),v.displacementMap&&(x.displacementMap.value=v.displacementMap,t(v.displacementMap,x.displacementMapTransform),x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,x.emissiveMapTransform)),v.specularMap&&(x.specularMap.value=v.specularMap,t(v.specularMap,x.specularMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const w=e.get(v).envMap;if(w&&(x.envMap.value=w,x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap){x.lightMap.value=v.lightMap;const S=r.useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=v.lightMapIntensity*S,t(v.lightMap,x.lightMapTransform)}v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,x.aoMapTransform))}function l(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform))}function c(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function u(x,v,w,S){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*w,x.scale.value=S*.5,v.map&&(x.map.value=v.map,t(v.map,x.uvTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function h(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function d(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function p(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function m(x,v){x.metalness.value=v.metalness,v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,x.metalnessMapTransform)),x.roughness.value=v.roughness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,x.roughnessMapTransform)),e.get(v).envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function _(x,v,w){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,x.sheenColorMapTransform)),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,x.sheenRoughnessMapTransform))),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,x.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(x.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===Rn&&x.clearcoatNormalScale.value.negate())),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,x.iridescenceMapTransform)),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=w.texture,x.transmissionSamplerSize.value.set(w.width,w.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,x.transmissionMapTransform)),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(x.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(x.anisotropyMap.value=v.anisotropyMap,t(v.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,x.specularColorMapTransform)),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,v){v.matcap&&(x.matcap.value=v.matcap)}function E(x,v){const w=e.get(v).light;x.referencePosition.value.setFromMatrixPosition(w.matrixWorld),x.nearDistance.value=w.shadow.camera.near,x.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function rw(r,e,t,n){let i={},s={},l=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,S){const A=S.program;n.uniformBlockBinding(w,A)}function h(w,S){let A=i[w.id];A===void 0&&(y(w),A=d(w),i[w.id]=A,w.addEventListener("dispose",x));const R=S.program;n.updateUBOMapping(w,R);const C=e.render.frame;s[w.id]!==C&&(m(w),s[w.id]=C)}function d(w){const S=p();w.__bindingPointIndex=S;const A=r.createBuffer(),R=w.__size,C=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,A),r.bufferData(r.UNIFORM_BUFFER,R,C),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,S,A),A}function p(){for(let w=0;w<c;w++)if(l.indexOf(w)===-1)return l.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const S=i[w.id],A=w.uniforms,R=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,S);for(let C=0,N=A.length;C<N;C++){const O=A[C];if(_(O,C,R)===!0){const b=O.__offset,L=Array.isArray(O.value)?O.value:[O.value];let z=0;for(let te=0;te<L.length;te++){const W=L[te],q=E(W);typeof W=="number"?(O.__data[0]=W,r.bufferSubData(r.UNIFORM_BUFFER,b+z,O.__data)):W.isMatrix3?(O.__data[0]=W.elements[0],O.__data[1]=W.elements[1],O.__data[2]=W.elements[2],O.__data[3]=W.elements[0],O.__data[4]=W.elements[3],O.__data[5]=W.elements[4],O.__data[6]=W.elements[5],O.__data[7]=W.elements[0],O.__data[8]=W.elements[6],O.__data[9]=W.elements[7],O.__data[10]=W.elements[8],O.__data[11]=W.elements[0]):(W.toArray(O.__data,z),z+=q.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,b,O.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function _(w,S,A){const R=w.value;if(A[S]===void 0){if(typeof R=="number")A[S]=R;else{const C=Array.isArray(R)?R:[R],N=[];for(let O=0;O<C.length;O++)N.push(C[O].clone());A[S]=N}return!0}else if(typeof R=="number"){if(A[S]!==R)return A[S]=R,!0}else{const C=Array.isArray(A[S])?A[S]:[A[S]],N=Array.isArray(R)?R:[R];for(let O=0;O<C.length;O++){const b=C[O];if(b.equals(N[O])===!1)return b.copy(N[O]),!0}}return!1}function y(w){const S=w.uniforms;let A=0;const R=16;let C=0;for(let N=0,O=S.length;N<O;N++){const b=S[N],L={boundary:0,storage:0},z=Array.isArray(b.value)?b.value:[b.value];for(let te=0,W=z.length;te<W;te++){const q=z[te],Q=E(q);L.boundary+=Q.boundary,L.storage+=Q.storage}if(b.__data=new Float32Array(L.storage/Float32Array.BYTES_PER_ELEMENT),b.__offset=A,N>0){C=A%R;const te=R-C;C!==0&&te-L.boundary<0&&(A+=R-C,b.__offset=A)}A+=L.storage}return C=A%R,C>0&&(A+=R-C),w.__size=A,w.__cache={},this}function E(w){const S={boundary:0,storage:0};return typeof w=="number"?(S.boundary=4,S.storage=4):w.isVector2?(S.boundary=8,S.storage=8):w.isVector3||w.isColor?(S.boundary=16,S.storage=12):w.isVector4?(S.boundary=16,S.storage=16):w.isMatrix3?(S.boundary=48,S.storage=48):w.isMatrix4?(S.boundary=64,S.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),S}function x(w){const S=w.target;S.removeEventListener("dispose",x);const A=l.indexOf(S.__bindingPointIndex);l.splice(A,1),r.deleteBuffer(i[S.id]),delete i[S.id],delete s[S.id]}function v(){for(const w in i)r.deleteBuffer(i[w]);l=[],i={},s={}}return{bind:u,update:h,dispose:v}}function sw(){const r=_a("canvas");return r.style.display="block",r}class fd{constructor(e={}){const{canvas:t=sw(),context:n=null,depth:i=!0,stencil:s=!0,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=l;const _=new Uint32Array(4),y=new Int32Array(4);let E=null,x=null;const v=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=at,this.useLegacyLights=!0,this.toneMapping=mi,this.toneMappingExposure=1;const S=this;let A=!1,R=0,C=0,N=null,O=-1,b=null;const L=new At,z=new At;let te=null;const W=new Le(0);let q=0,Q=t.width,ce=t.height,ie=1,V=null,Z=null;const J=new At(0,0,Q,ce),he=new At(0,0,Q,ce);let X=!1;const le=new Kc;let de=!1,Se=!1,Te=null;const Ie=new ot,nt=new fe,Je=new U,vt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ge(){return N===null?ie:1}let B=n;function me(I,j){for(let se=0;se<I.length;se++){const Y=I[se],oe=t.getContext(Y,j);if(oe!==null)return oe}return null}try{const I={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Wc}`),t.addEventListener("webglcontextlost",Ae,!1),t.addEventListener("webglcontextrestored",$,!1),t.addEventListener("webglcontextcreationerror",xe,!1),B===null){const j=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&j.shift(),B=me(j,I),B===null)throw me(j)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}B instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),B.getShaderPrecisionFormat===void 0&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let ue,ye,pe,ze,Pe,Ue,Ke,gt,Nt,F,P,re,ge,_e,Ee,ke,we,ae,We,Xe,Ze,Fe,Oe,lt;function bt(){ue=new ME(B),ye=new mE(B,ue,e),ue.init(ye),Fe=new o_(B,ue,ye),pe=new $1(B,ue,ye),ze=new wE(B),Pe=new H1,Ue=new ew(B,ue,pe,Pe,ye,Fe,ze),Ke=new _E(S),gt=new xE(S),Nt=new Fx(B,ye),Oe=new dE(B,ue,Nt,ye),F=new SE(B,Nt,ze,Oe),P=new RE(B,F,Nt,ze),We=new bE(B,ye,Ue),ke=new gE(Pe),re=new k1(S,Ke,gt,ue,ye,Oe,ke),ge=new iw(S,Pe),_e=new G1,Ee=new J1(ue,ye),ae=new fE(S,Ke,gt,pe,P,m,u),we=new Q1(S,P,ye),lt=new rw(B,ze,ye,pe),Xe=new pE(B,ue,ze,ye),Ze=new EE(B,ue,ze,ye),ze.programs=re.programs,S.capabilities=ye,S.extensions=ue,S.properties=Pe,S.renderLists=_e,S.shadowMap=we,S.state=pe,S.info=ze}bt();const k=new nw(S,B);this.xr=k,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const I=ue.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=ue.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return ie},this.setPixelRatio=function(I){I!==void 0&&(ie=I,this.setSize(Q,ce,!1))},this.getSize=function(I){return I.set(Q,ce)},this.setSize=function(I,j,se=!0){if(k.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Q=I,ce=j,t.width=Math.floor(I*ie),t.height=Math.floor(j*ie),se===!0&&(t.style.width=I+"px",t.style.height=j+"px"),this.setViewport(0,0,I,j)},this.getDrawingBufferSize=function(I){return I.set(Q*ie,ce*ie).floor()},this.setDrawingBufferSize=function(I,j,se){Q=I,ce=j,ie=se,t.width=Math.floor(I*se),t.height=Math.floor(j*se),this.setViewport(0,0,I,j)},this.getCurrentViewport=function(I){return I.copy(L)},this.getViewport=function(I){return I.copy(J)},this.setViewport=function(I,j,se,Y){I.isVector4?J.set(I.x,I.y,I.z,I.w):J.set(I,j,se,Y),pe.viewport(L.copy(J).multiplyScalar(ie).floor())},this.getScissor=function(I){return I.copy(he)},this.setScissor=function(I,j,se,Y){I.isVector4?he.set(I.x,I.y,I.z,I.w):he.set(I,j,se,Y),pe.scissor(z.copy(he).multiplyScalar(ie).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(I){pe.setScissorTest(X=I)},this.setOpaqueSort=function(I){V=I},this.setTransparentSort=function(I){Z=I},this.getClearColor=function(I){return I.copy(ae.getClearColor())},this.setClearColor=function(){ae.setClearColor.apply(ae,arguments)},this.getClearAlpha=function(){return ae.getClearAlpha()},this.setClearAlpha=function(){ae.setClearAlpha.apply(ae,arguments)},this.clear=function(I=!0,j=!0,se=!0){let Y=0;if(I){let oe=!1;if(N!==null){const De=N.texture.format;oe=De===ed||De===$f||De===Qf}if(oe){const De=N.texture.type,Ye=De===Ui||De===Qi||De===qc||De===xr||De===Kf||De===jf,je=ae.getClearColor(),Qe=ae.getClearAlpha(),dt=je.r,$e=je.g,et=je.b,wt=Pe.get(N).__webglFramebuffer;Ye?(_[0]=dt,_[1]=$e,_[2]=et,_[3]=Qe,B.clearBufferuiv(B.COLOR,wt,_)):(y[0]=dt,y[1]=$e,y[2]=et,y[3]=Qe,B.clearBufferiv(B.COLOR,wt,y))}else Y|=B.COLOR_BUFFER_BIT}j&&(Y|=B.DEPTH_BUFFER_BIT),se&&(Y|=B.STENCIL_BUFFER_BIT),B.clear(Y)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ae,!1),t.removeEventListener("webglcontextrestored",$,!1),t.removeEventListener("webglcontextcreationerror",xe,!1),_e.dispose(),Ee.dispose(),Pe.dispose(),Ke.dispose(),gt.dispose(),P.dispose(),Oe.dispose(),lt.dispose(),re.dispose(),k.dispose(),k.removeEventListener("sessionstart",It),k.removeEventListener("sessionend",On),Te&&(Te.dispose(),Te=null),hn.stop()};function Ae(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function $(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const I=ze.autoReset,j=we.enabled,se=we.autoUpdate,Y=we.needsUpdate,oe=we.type;bt(),ze.autoReset=I,we.enabled=j,we.autoUpdate=se,we.needsUpdate=Y,we.type=oe}function xe(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function Re(I){const j=I.target;j.removeEventListener("dispose",Re),_t(j)}function _t(I){Lt(I),Pe.remove(I)}function Lt(I){const j=Pe.get(I).programs;j!==void 0&&(j.forEach(function(se){re.releaseProgram(se)}),I.isShaderMaterial&&re.releaseShaderCache(I))}this.renderBufferDirect=function(I,j,se,Y,oe,De){j===null&&(j=vt);const Ye=oe.isMesh&&oe.matrixWorld.determinant()<0,je=lu(I,j,se,Y,oe);pe.setMaterial(Y,Ye);let Qe=se.index,dt=1;Y.wireframe===!0&&(Qe=F.getWireframeAttribute(se),dt=2);const $e=se.drawRange,et=se.attributes.position;let wt=$e.start*dt,Ut=($e.start+$e.count)*dt;De!==null&&(wt=Math.max(wt,De.start*dt),Ut=Math.min(Ut,(De.start+De.count)*dt)),Qe!==null?(wt=Math.max(wt,0),Ut=Math.min(Ut,Qe.count)):et!=null&&(wt=Math.max(wt,0),Ut=Math.min(Ut,et.count));const Bn=Ut-wt;if(Bn<0||Bn===1/0)return;Oe.setup(oe,Y,je,se,Qe);let zn,Rt=Xe;if(Qe!==null&&(zn=Nt.get(Qe),Rt=Ze,Rt.setIndex(zn)),oe.isMesh)Y.wireframe===!0?(pe.setLineWidth(Y.wireframeLinewidth*Ge()),Rt.setMode(B.LINES)):Rt.setMode(B.TRIANGLES);else if(oe.isLine){let it=Y.linewidth;it===void 0&&(it=1),pe.setLineWidth(it*Ge()),oe.isLineSegments?Rt.setMode(B.LINES):oe.isLineLoop?Rt.setMode(B.LINE_LOOP):Rt.setMode(B.LINE_STRIP)}else oe.isPoints?Rt.setMode(B.POINTS):oe.isSprite&&Rt.setMode(B.TRIANGLES);if(oe.isInstancedMesh)Rt.renderInstances(wt,Bn,oe.count);else if(se.isInstancedBufferGeometry){const it=se._maxInstanceCount!==void 0?se._maxInstanceCount:1/0,Tt=Math.min(se.instanceCount,it);Rt.renderInstances(wt,Bn,Tt)}else Rt.render(wt,Bn)},this.compile=function(I,j){function se(Y,oe,De){Y.transparent===!0&&Y.side===Pi&&Y.forceSinglePass===!1?(Y.side=Rn,Y.needsUpdate=!0,Si(Y,oe,De),Y.side=er,Y.needsUpdate=!0,Si(Y,oe,De),Y.side=Pi):Si(Y,oe,De)}x=Ee.get(I),x.init(),w.push(x),I.traverseVisible(function(Y){Y.isLight&&Y.layers.test(j.layers)&&(x.pushLight(Y),Y.castShadow&&x.pushShadow(Y))}),x.setupLights(S.useLegacyLights),I.traverse(function(Y){const oe=Y.material;if(oe)if(Array.isArray(oe))for(let De=0;De<oe.length;De++){const Ye=oe[De];se(Ye,I,Y)}else se(oe,I,Y)}),w.pop(),x=null};let zt=null;function Mi(I){zt&&zt(I)}function It(){hn.stop()}function On(){hn.start()}const hn=new t_;hn.setAnimationLoop(Mi),typeof self<"u"&&hn.setContext(self),this.setAnimationLoop=function(I){zt=I,k.setAnimationLoop(I),I===null?hn.stop():hn.start()},k.addEventListener("sessionstart",It),k.addEventListener("sessionend",On),this.render=function(I,j){if(j!==void 0&&j.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),j.parent===null&&j.matrixWorldAutoUpdate===!0&&j.updateMatrixWorld(),k.enabled===!0&&k.isPresenting===!0&&(j=k.updateCameraXR(j)),I.isScene===!0&&I.onBeforeRender(S,I,j,N),x=Ee.get(I,w.length),x.init(),w.push(x),Ie.multiplyMatrices(j.projectionMatrix,j.matrixWorldInverse),le.setFromProjectionMatrix(Ie),Se=this.localClippingEnabled,de=ke.init(this.clippingPlanes,Se),E=_e.get(I,v.length),E.init(),v.push(E),Wa(I,j,0,S.sortObjects),E.finish(),S.sortObjects===!0&&E.sort(V,Z),de===!0&&ke.beginShadows();const se=x.state.shadowsArray;if(we.render(se,I,j),de===!0&&ke.endShadows(),this.info.autoReset===!0&&this.info.reset(),this.info.render.frame++,ae.render(E,I),x.setupLights(S.useLegacyLights),j.isArrayCamera){const Y=j.cameras;for(let oe=0,De=Y.length;oe<De;oe++){const Ye=Y[oe];Xa(E,I,Ye,Ye.viewport)}}else Xa(E,I,j);N!==null&&(Ue.updateMultisampleRenderTarget(N),Ue.updateRenderTargetMipmap(N)),I.isScene===!0&&I.onAfterRender(S,I,j),Oe.resetDefaultState(),O=-1,b=null,w.pop(),w.length>0?x=w[w.length-1]:x=null,v.pop(),v.length>0?E=v[v.length-1]:E=null};function Wa(I,j,se,Y){if(I.visible===!1)return;if(I.layers.test(j.layers)){if(I.isGroup)se=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(j);else if(I.isLight)x.pushLight(I),I.castShadow&&x.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||le.intersectsSprite(I)){Y&&Je.setFromMatrixPosition(I.matrixWorld).applyMatrix4(Ie);const Ye=P.update(I),je=I.material;je.visible&&E.push(I,Ye,je,se,Je.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||le.intersectsObject(I))){I.isSkinnedMesh&&I.skeleton.frame!==ze.render.frame&&(I.skeleton.update(),I.skeleton.frame=ze.render.frame);const Ye=P.update(I),je=I.material;if(Y&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),Je.copy(I.boundingSphere.center)):(Ye.boundingSphere===null&&Ye.computeBoundingSphere(),Je.copy(Ye.boundingSphere.center)),Je.applyMatrix4(I.matrixWorld).applyMatrix4(Ie)),Array.isArray(je)){const Qe=Ye.groups;for(let dt=0,$e=Qe.length;dt<$e;dt++){const et=Qe[dt],wt=je[et.materialIndex];wt&&wt.visible&&E.push(I,Ye,wt,se,Je.z,et)}}else je.visible&&E.push(I,Ye,je,se,Je.z,null)}}const De=I.children;for(let Ye=0,je=De.length;Ye<je;Ye++)Wa(De[Ye],j,se,Y)}function Xa(I,j,se,Y){const oe=I.opaque,De=I.transmissive,Ye=I.transparent;x.setupLightsView(se),de===!0&&ke.setGlobalState(S.clippingPlanes,se),De.length>0&&Ya(oe,De,j,se),Y&&pe.viewport(L.copy(Y)),oe.length>0&&rr(oe,j,se),De.length>0&&rr(De,j,se),Ye.length>0&&rr(Ye,j,se),pe.buffers.depth.setTest(!0),pe.buffers.depth.setMask(!0),pe.buffers.color.setMask(!0),pe.setPolygonOffset(!1)}function Ya(I,j,se,Y){const oe=ye.isWebGL2;Te===null&&(Te=new _i(1,1,{generateMipmaps:!0,type:ue.has("EXT_color_buffer_half_float")?lo:Ui,minFilter:Ar,samples:oe&&c===!0?4:0})),S.getDrawingBufferSize(nt),oe?Te.setSize(nt.x,nt.y):Te.setSize(Vc(nt.x),Vc(nt.y));const De=S.getRenderTarget();S.setRenderTarget(Te),S.getClearColor(W),q=S.getClearAlpha(),q<1&&S.setClearColor(16777215,.5),S.clear();const Ye=S.toneMapping;S.toneMapping=mi,rr(I,se,Y),Ue.updateMultisampleRenderTarget(Te),Ue.updateRenderTargetMipmap(Te);let je=!1;for(let Qe=0,dt=j.length;Qe<dt;Qe++){const $e=j[Qe],et=$e.object,wt=$e.geometry,Ut=$e.material,Bn=$e.group;if(Ut.side===Pi&&et.layers.test(Y.layers)){const zn=Ut.side;Ut.side=Rn,Ut.needsUpdate=!0,qa(et,se,Y,wt,Ut,Bn),Ut.side=zn,Ut.needsUpdate=!0,je=!0}}je===!0&&(Ue.updateMultisampleRenderTarget(Te),Ue.updateRenderTargetMipmap(Te)),S.setRenderTarget(De),S.setClearColor(W,q),S.toneMapping=Ye}function rr(I,j,se){const Y=j.isScene===!0?j.overrideMaterial:null;for(let oe=0,De=I.length;oe<De;oe++){const Ye=I[oe],je=Ye.object,Qe=Ye.geometry,dt=Y===null?Ye.material:Y,$e=Ye.group;je.layers.test(se.layers)&&qa(je,j,se,Qe,dt,$e)}}function qa(I,j,se,Y,oe,De){I.onBeforeRender(S,j,se,Y,oe,De),I.modelViewMatrix.multiplyMatrices(se.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),oe.onBeforeRender(S,j,se,Y,I,De),oe.transparent===!0&&oe.side===Pi&&oe.forceSinglePass===!1?(oe.side=Rn,oe.needsUpdate=!0,S.renderBufferDirect(se,j,Y,oe,I,De),oe.side=er,oe.needsUpdate=!0,S.renderBufferDirect(se,j,Y,oe,I,De),oe.side=Pi):S.renderBufferDirect(se,j,Y,oe,I,De),I.onAfterRender(S,j,se,Y,oe,De)}function Si(I,j,se){j.isScene!==!0&&(j=vt);const Y=Pe.get(I),oe=x.state.lights,De=x.state.shadowsArray,Ye=oe.state.version,je=re.getParameters(I,oe.state,De,j,se),Qe=re.getProgramCacheKey(je);let dt=Y.programs;Y.environment=I.isMeshStandardMaterial?j.environment:null,Y.fog=j.fog,Y.envMap=(I.isMeshStandardMaterial?gt:Ke).get(I.envMap||Y.environment),dt===void 0&&(I.addEventListener("dispose",Re),dt=new Map,Y.programs=dt);let $e=dt.get(Qe);if($e!==void 0){if(Y.currentProgram===$e&&Y.lightsStateVersion===Ye)return Za(I,je),$e}else je.uniforms=re.getUniforms(I),I.onBuild(se,je,S),I.onBeforeCompile(je,S),$e=re.acquireProgram(je,Qe),dt.set(Qe,$e),Y.uniforms=je.uniforms;const et=Y.uniforms;(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(et.clippingPlanes=ke.uniform),Za(I,je),Y.needsLights=uu(I),Y.lightsStateVersion=Ye,Y.needsLights&&(et.ambientLightColor.value=oe.state.ambient,et.lightProbe.value=oe.state.probe,et.directionalLights.value=oe.state.directional,et.directionalLightShadows.value=oe.state.directionalShadow,et.spotLights.value=oe.state.spot,et.spotLightShadows.value=oe.state.spotShadow,et.rectAreaLights.value=oe.state.rectArea,et.ltc_1.value=oe.state.rectAreaLTC1,et.ltc_2.value=oe.state.rectAreaLTC2,et.pointLights.value=oe.state.point,et.pointLightShadows.value=oe.state.pointShadow,et.hemisphereLights.value=oe.state.hemi,et.directionalShadowMap.value=oe.state.directionalShadowMap,et.directionalShadowMatrix.value=oe.state.directionalShadowMatrix,et.spotShadowMap.value=oe.state.spotShadowMap,et.spotLightMatrix.value=oe.state.spotLightMatrix,et.spotLightMap.value=oe.state.spotLightMap,et.pointShadowMap.value=oe.state.pointShadowMap,et.pointShadowMatrix.value=oe.state.pointShadowMatrix);const wt=$e.getUniforms(),Ut=Oc.seqWithValue(wt.seq,et);return Y.currentProgram=$e,Y.uniformsList=Ut,$e}function Za(I,j){const se=Pe.get(I);se.outputColorSpace=j.outputColorSpace,se.instancing=j.instancing,se.skinning=j.skinning,se.morphTargets=j.morphTargets,se.morphNormals=j.morphNormals,se.morphColors=j.morphColors,se.morphTargetsCount=j.morphTargetsCount,se.numClippingPlanes=j.numClippingPlanes,se.numIntersection=j.numClipIntersection,se.vertexAlphas=j.vertexAlphas,se.vertexTangents=j.vertexTangents,se.toneMapping=j.toneMapping}function lu(I,j,se,Y,oe){j.isScene!==!0&&(j=vt),Ue.resetTextureUnits();const De=j.fog,Ye=Y.isMeshStandardMaterial?j.environment:null,je=N===null?S.outputColorSpace:N.isXRRenderTarget===!0?N.texture.colorSpace:gi,Qe=(Y.isMeshStandardMaterial?gt:Ke).get(Y.envMap||Ye),dt=Y.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,$e=!!se.attributes.tangent&&(!!Y.normalMap||Y.anisotropy>0),et=!!se.morphAttributes.position,wt=!!se.morphAttributes.normal,Ut=!!se.morphAttributes.color,Bn=Y.toneMapped?S.toneMapping:mi,zn=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,Rt=zn!==void 0?zn.length:0,it=Pe.get(Y),Tt=x.state.lights;if(de===!0&&(Se===!0||I!==b)){const mn=I===b&&Y.id===O;ke.setState(Y,I,mn)}let tt=!1;Y.version===it.__version?(it.needsLights&&it.lightsStateVersion!==Tt.state.version||it.outputColorSpace!==je||oe.isInstancedMesh&&it.instancing===!1||!oe.isInstancedMesh&&it.instancing===!0||oe.isSkinnedMesh&&it.skinning===!1||!oe.isSkinnedMesh&&it.skinning===!0||it.envMap!==Qe||Y.fog===!0&&it.fog!==De||it.numClippingPlanes!==void 0&&(it.numClippingPlanes!==ke.numPlanes||it.numIntersection!==ke.numIntersection)||it.vertexAlphas!==dt||it.vertexTangents!==$e||it.morphTargets!==et||it.morphNormals!==wt||it.morphColors!==Ut||it.toneMapping!==Bn||ye.isWebGL2===!0&&it.morphTargetsCount!==Rt)&&(tt=!0):(tt=!0,it.__version=Y.version);let pn=it.currentProgram;tt===!0&&(pn=Si(Y,j,oe));let en=!1,Kt=!1,oi=!1;const kt=pn.getUniforms(),Ht=it.uniforms;if(pe.useProgram(pn.program)&&(en=!0,Kt=!0,oi=!0),Y.id!==O&&(O=Y.id,Kt=!0),en||b!==I){if(kt.setValue(B,"projectionMatrix",I.projectionMatrix),ye.logarithmicDepthBuffer&&kt.setValue(B,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),b!==I&&(b=I,Kt=!0,oi=!0),Y.isShaderMaterial||Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshStandardMaterial||Y.envMap){const mn=kt.map.cameraPosition;mn!==void 0&&mn.setValue(B,Je.setFromMatrixPosition(I.matrixWorld))}(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial)&&kt.setValue(B,"isOrthographic",I.isOrthographicCamera===!0),(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial||Y.isShadowMaterial||oe.isSkinnedMesh)&&kt.setValue(B,"viewMatrix",I.matrixWorldInverse)}if(oe.isSkinnedMesh){kt.setOptional(B,oe,"bindMatrix"),kt.setOptional(B,oe,"bindMatrixInverse");const mn=oe.skeleton;mn&&(ye.floatVertexTextures?(mn.boneTexture===null&&mn.computeBoneTexture(),kt.setValue(B,"boneTexture",mn.boneTexture,Ue),kt.setValue(B,"boneTextureSize",mn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const sr=se.morphAttributes;if((sr.position!==void 0||sr.normal!==void 0||sr.color!==void 0&&ye.isWebGL2===!0)&&We.update(oe,se,pn),(Kt||it.receiveShadow!==oe.receiveShadow)&&(it.receiveShadow=oe.receiveShadow,kt.setValue(B,"receiveShadow",oe.receiveShadow)),Y.isMeshGouraudMaterial&&Y.envMap!==null&&(Ht.envMap.value=Qe,Ht.flipEnvMap.value=Qe.isCubeTexture&&Qe.isRenderTargetTexture===!1?-1:1),Kt&&(kt.setValue(B,"toneMappingExposure",S.toneMappingExposure),it.needsLights&&cu(Ht,oi),De&&Y.fog===!0&&ge.refreshFogUniforms(Ht,De),ge.refreshMaterialUniforms(Ht,Y,ie,ce,Te),Oc.upload(B,it.uniformsList,Ht,Ue)),Y.isShaderMaterial&&Y.uniformsNeedUpdate===!0&&(Oc.upload(B,it.uniformsList,Ht,Ue),Y.uniformsNeedUpdate=!1),Y.isSpriteMaterial&&kt.setValue(B,"center",oe.center),kt.setValue(B,"modelViewMatrix",oe.modelViewMatrix),kt.setValue(B,"normalMatrix",oe.normalMatrix),kt.setValue(B,"modelMatrix",oe.matrixWorld),Y.isShaderMaterial||Y.isRawShaderMaterial){const mn=Y.uniformsGroups;for(let ms=0,gs=mn.length;ms<gs;ms++)if(ye.isWebGL2){const So=mn[ms];lt.update(So,pn),lt.bind(So,pn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return pn}function cu(I,j){I.ambientLightColor.needsUpdate=j,I.lightProbe.needsUpdate=j,I.directionalLights.needsUpdate=j,I.directionalLightShadows.needsUpdate=j,I.pointLights.needsUpdate=j,I.pointLightShadows.needsUpdate=j,I.spotLights.needsUpdate=j,I.spotLightShadows.needsUpdate=j,I.rectAreaLights.needsUpdate=j,I.hemisphereLights.needsUpdate=j}function uu(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return N},this.setRenderTargetTextures=function(I,j,se){Pe.get(I.texture).__webglTexture=j,Pe.get(I.depthTexture).__webglTexture=se;const Y=Pe.get(I);Y.__hasExternalTextures=!0,Y.__hasExternalTextures&&(Y.__autoAllocateDepthBuffer=se===void 0,Y.__autoAllocateDepthBuffer||ue.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Y.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(I,j){const se=Pe.get(I);se.__webglFramebuffer=j,se.__useDefaultFramebuffer=j===void 0},this.setRenderTarget=function(I,j=0,se=0){N=I,R=j,C=se;let Y=!0,oe=null,De=!1,Ye=!1;if(I){const Qe=Pe.get(I);Qe.__useDefaultFramebuffer!==void 0?(pe.bindFramebuffer(B.FRAMEBUFFER,null),Y=!1):Qe.__webglFramebuffer===void 0?Ue.setupRenderTarget(I):Qe.__hasExternalTextures&&Ue.rebindTextures(I,Pe.get(I.texture).__webglTexture,Pe.get(I.depthTexture).__webglTexture);const dt=I.texture;(dt.isData3DTexture||dt.isDataArrayTexture||dt.isCompressedArrayTexture)&&(Ye=!0);const $e=Pe.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(oe=$e[j],De=!0):ye.isWebGL2&&I.samples>0&&Ue.useMultisampledRTT(I)===!1?oe=Pe.get(I).__webglMultisampledFramebuffer:oe=$e,L.copy(I.viewport),z.copy(I.scissor),te=I.scissorTest}else L.copy(J).multiplyScalar(ie).floor(),z.copy(he).multiplyScalar(ie).floor(),te=X;if(pe.bindFramebuffer(B.FRAMEBUFFER,oe)&&ye.drawBuffers&&Y&&pe.drawBuffers(I,oe),pe.viewport(L),pe.scissor(z),pe.setScissorTest(te),De){const Qe=Pe.get(I.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+j,Qe.__webglTexture,se)}else if(Ye){const Qe=Pe.get(I.texture),dt=j||0;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,Qe.__webglTexture,se||0,dt)}O=-1},this.readRenderTargetPixels=function(I,j,se,Y,oe,De,Ye){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let je=Pe.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Ye!==void 0&&(je=je[Ye]),je){pe.bindFramebuffer(B.FRAMEBUFFER,je);try{const Qe=I.texture,dt=Qe.format,$e=Qe.type;if(dt!==Nn&&Fe.convert(dt)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const et=$e===lo&&(ue.has("EXT_color_buffer_half_float")||ye.isWebGL2&&ue.has("EXT_color_buffer_float"));if($e!==Ui&&Fe.convert($e)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_TYPE)&&!($e===Li&&(ye.isWebGL2||ue.has("OES_texture_float")||ue.has("WEBGL_color_buffer_float")))&&!et){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}j>=0&&j<=I.width-Y&&se>=0&&se<=I.height-oe&&B.readPixels(j,se,Y,oe,Fe.convert(dt),Fe.convert($e),De)}finally{const Qe=N!==null?Pe.get(N).__webglFramebuffer:null;pe.bindFramebuffer(B.FRAMEBUFFER,Qe)}}},this.copyFramebufferToTexture=function(I,j,se=0){const Y=Math.pow(2,-se),oe=Math.floor(j.image.width*Y),De=Math.floor(j.image.height*Y);Ue.setTexture2D(j,0),B.copyTexSubImage2D(B.TEXTURE_2D,se,0,0,I.x,I.y,oe,De),pe.unbindTexture()},this.copyTextureToTexture=function(I,j,se,Y=0){const oe=j.image.width,De=j.image.height,Ye=Fe.convert(se.format),je=Fe.convert(se.type);Ue.setTexture2D(se,0),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,se.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,se.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,se.unpackAlignment),j.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,Y,I.x,I.y,oe,De,Ye,je,j.image.data):j.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,Y,I.x,I.y,j.mipmaps[0].width,j.mipmaps[0].height,Ye,j.mipmaps[0].data):B.texSubImage2D(B.TEXTURE_2D,Y,I.x,I.y,Ye,je,j.image),Y===0&&se.generateMipmaps&&B.generateMipmap(B.TEXTURE_2D),pe.unbindTexture()},this.copyTextureToTexture3D=function(I,j,se,Y,oe=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const De=I.max.x-I.min.x+1,Ye=I.max.y-I.min.y+1,je=I.max.z-I.min.z+1,Qe=Fe.convert(Y.format),dt=Fe.convert(Y.type);let $e;if(Y.isData3DTexture)Ue.setTexture3D(Y,0),$e=B.TEXTURE_3D;else if(Y.isDataArrayTexture)Ue.setTexture2DArray(Y,0),$e=B.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,Y.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Y.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,Y.unpackAlignment);const et=B.getParameter(B.UNPACK_ROW_LENGTH),wt=B.getParameter(B.UNPACK_IMAGE_HEIGHT),Ut=B.getParameter(B.UNPACK_SKIP_PIXELS),Bn=B.getParameter(B.UNPACK_SKIP_ROWS),zn=B.getParameter(B.UNPACK_SKIP_IMAGES),Rt=se.isCompressedTexture?se.mipmaps[0]:se.image;B.pixelStorei(B.UNPACK_ROW_LENGTH,Rt.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Rt.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,I.min.x),B.pixelStorei(B.UNPACK_SKIP_ROWS,I.min.y),B.pixelStorei(B.UNPACK_SKIP_IMAGES,I.min.z),se.isDataTexture||se.isData3DTexture?B.texSubImage3D($e,oe,j.x,j.y,j.z,De,Ye,je,Qe,dt,Rt.data):se.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),B.compressedTexSubImage3D($e,oe,j.x,j.y,j.z,De,Ye,je,Qe,Rt.data)):B.texSubImage3D($e,oe,j.x,j.y,j.z,De,Ye,je,Qe,dt,Rt),B.pixelStorei(B.UNPACK_ROW_LENGTH,et),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,wt),B.pixelStorei(B.UNPACK_SKIP_PIXELS,Ut),B.pixelStorei(B.UNPACK_SKIP_ROWS,Bn),B.pixelStorei(B.UNPACK_SKIP_IMAGES,zn),oe===0&&Y.generateMipmaps&&B.generateMipmap($e),pe.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?Ue.setTextureCube(I,0):I.isData3DTexture?Ue.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?Ue.setTexture2DArray(I,0):Ue.setTexture2D(I,0),pe.unbindTexture()},this.resetState=function(){R=0,C=0,N=null,pe.reset(),Oe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ii}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===at?Sr:nd}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Sr?at:gi}}class c_ extends fd{}c_.prototype.isWebGL1Renderer=!0;class Qc{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Le(e),this.density=t}clone(){return new Qc(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class $c{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Le(e),this.near=t,this.far=n}clone(){return new $c(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class dd extends Et{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class eu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ma,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=qn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const An=new U;class ls{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)An.fromBufferAttribute(this,t),An.applyMatrix4(e),this.setXYZ(t,An.x,An.y,An.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)An.fromBufferAttribute(this,t),An.applyNormalMatrix(e),this.setXYZ(t,An.x,An.y,An.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)An.fromBufferAttribute(this,t),An.transformDirection(e),this.setXYZ(t,An.x,An.y,An.z);return this}setX(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Yn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Yn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Yn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Yn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array),s=ft(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Pt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ls(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class pd extends En{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Xs;const Yo=new U,Ys=new U,qs=new U,Zs=new fe,qo=new fe,u_=new ot,ac=new U,Zo=new U,lc=new U,jm=new fe,Fh=new fe,Qm=new fe;class h_ extends Et{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Xs===void 0){Xs=new mt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new eu(t,5);Xs.setIndex([0,1,2,0,2,3]),Xs.setAttribute("position",new ls(n,3,0,!1)),Xs.setAttribute("uv",new ls(n,2,3,!1))}this.geometry=Xs,this.material=e!==void 0?e:new pd,this.center=new fe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ys.setFromMatrixScale(this.matrixWorld),u_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),qs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ys.multiplyScalar(-qs.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;cc(ac.set(-.5,-.5,0),qs,l,Ys,i,s),cc(Zo.set(.5,-.5,0),qs,l,Ys,i,s),cc(lc.set(.5,.5,0),qs,l,Ys,i,s),jm.set(0,0),Fh.set(1,0),Qm.set(1,1);let c=e.ray.intersectTriangle(ac,Zo,lc,!1,Yo);if(c===null&&(cc(Zo.set(-.5,.5,0),qs,l,Ys,i,s),Fh.set(0,1),c=e.ray.intersectTriangle(ac,lc,Zo,!1,Yo),c===null))return;const u=e.ray.origin.distanceTo(Yo);u<e.near||u>e.far||t.push({distance:u,point:Yo.clone(),uv:Dn.getInterpolation(Yo,ac,Zo,lc,jm,Fh,Qm,new fe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function cc(r,e,t,n,i,s){Zs.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(qo.x=s*Zs.x-i*Zs.y,qo.y=i*Zs.x+s*Zs.y):qo.copy(Zs),r.copy(e),r.x+=qo.x,r.y+=qo.y,r.applyMatrix4(u_)}const uc=new U,$m=new U;class f_ extends Et{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){uc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(uc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){uc.setFromMatrixPosition(e.matrixWorld),$m.setFromMatrixPosition(this.matrixWorld);const n=uc.distanceTo($m)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const eg=new U,tg=new At,ng=new At,ow=new U,ig=new ot,Js=new U,Oh=new vi,rg=new ot,Bh=new mo;class d_ extends dn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ot,this.bindMatrixInverse=new ot,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Fi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Js.fromBufferAttribute(t,n),this.applyBoneTransform(n,Js),this.boundingBox.expandByPoint(Js)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new vi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Js.fromBufferAttribute(t,n),this.applyBoneTransform(n,Js),this.boundingSphere.expandByPoint(Js)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Oh.copy(this.boundingSphere),Oh.applyMatrix4(i),e.ray.intersectsSphere(Oh)!==!1&&(rg.copy(i).invert(),Bh.copy(e.ray).applyMatrix4(rg),!(this.boundingBox!==null&&Bh.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Bh)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new At,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;tg.fromBufferAttribute(i.attributes.skinIndex,e),ng.fromBufferAttribute(i.attributes.skinWeight,e),eg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=ng.getComponent(s);if(l!==0){const c=tg.getComponent(s);ig.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(ow.copy(eg).applyMatrix4(ig),l)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class md extends Et{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ao extends Jt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=qt,d=qt,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const sg=new ot,aw=new ot;class tu{constructor(e=[],t=[]){this.uuid=qn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ot)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ot;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:aw;sg.multiplyMatrices(c,t[s]),sg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new tu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Z0(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ao(t,e,e,Nn,Li);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new md),this.bones.push(l),this.boneInverses.push(new ot().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class ho extends Pt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Ks=new ot,og=new ot,hc=[],ag=new Fi,lw=new ot,Jo=new dn,Ko=new vi;class p_ extends dn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ho(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,lw)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Fi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Ks),ag.copy(e.boundingBox).applyMatrix4(Ks),this.boundingBox.union(ag)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new vi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Ks),Ko.copy(e.boundingSphere).applyMatrix4(Ks),this.boundingSphere.union(Ko)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Jo.geometry=this.geometry,Jo.material=this.material,Jo.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ko.copy(this.boundingSphere),Ko.applyMatrix4(n),e.ray.intersectsSphere(Ko)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,Ks),og.multiplyMatrices(n,Ks),Jo.matrixWorld=og,Jo.raycast(e,hc);for(let l=0,c=hc.length;l<c;l++){const u=hc[l];u.instanceId=s,u.object=this,t.push(u)}hc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new ho(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Cn extends En{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const lg=new U,cg=new U,ug=new ot,zh=new mo,fc=new vi;class br extends Et{constructor(e=new mt,t=new Cn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)lg.fromBufferAttribute(t,i-1),cg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=lg.distanceTo(cg);e.setAttribute("lineDistance",new Be(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),fc.copy(n.boundingSphere),fc.applyMatrix4(i),fc.radius+=s,e.ray.intersectsSphere(fc)===!1)return;ug.copy(i).invert(),zh.copy(e.ray).applyMatrix4(ug);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new U,d=new U,p=new U,m=new U,_=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const v=Math.max(0,l.start),w=Math.min(y.count,l.start+l.count);for(let S=v,A=w-1;S<A;S+=_){const R=y.getX(S),C=y.getX(S+1);if(h.fromBufferAttribute(x,R),d.fromBufferAttribute(x,C),zh.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const O=e.ray.origin.distanceTo(m);O<e.near||O>e.far||t.push({distance:O,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,l.start),w=Math.min(x.count,l.start+l.count);for(let S=v,A=w-1;S<A;S+=_){if(h.fromBufferAttribute(x,S),d.fromBufferAttribute(x,S+1),zh.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const C=e.ray.origin.distanceTo(m);C<e.near||C>e.far||t.push({distance:C,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const hg=new U,fg=new U;class Oi extends br{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)hg.fromBufferAttribute(t,i),fg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+hg.distanceTo(fg);e.setAttribute("lineDistance",new Be(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class m_ extends br{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class gd extends En{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const dg=new ot,Ff=new mo,dc=new vi,pc=new U;class g_ extends Et{constructor(e=new mt,t=new gd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),dc.copy(n.boundingSphere),dc.applyMatrix4(i),dc.radius+=s,e.ray.intersectsSphere(dc)===!1)return;dg.copy(i).invert(),Ff.copy(e.ray).applyMatrix4(dg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),_=Math.min(h.count,l.start+l.count);for(let y=m,E=_;y<E;y++){const x=h.getX(y);pc.fromBufferAttribute(p,x),pg(pc,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),_=Math.min(p.count,l.start+l.count);for(let y=m,E=_;y<E;y++)pc.fromBufferAttribute(p,y),pg(pc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function pg(r,e,t,n,i,s,l){const c=Ff.distanceSqToPoint(r);if(c<t){const u=new U;Ff.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class cw extends Jt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:Zt,this.magFilter=s!==void 0?s:Zt,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class uw extends Jt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=qt,this.minFilter=qt,this.generateMipmaps=!1,this.needsUpdate=!0}}class _d extends Jt{constructor(e,t,n,i,s,l,c,u,h,d,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class hw extends _d{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Sn}}class fw extends Jt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class yi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const d=n[i],m=n[i+1]-d,_=(l-d)/m;return(i+_)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new fe:new U);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new U,i=[],s=[],l=[],c=new U,u=new ot;for(let _=0;_<=e;_++){const y=_/e;i[_]=this.getTangentAt(y,new U)}s[0]=new U,l[0]=new U;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let _=1;_<=e;_++){if(s[_]=s[_-1].clone(),l[_]=l[_-1].clone(),c.crossVectors(i[_-1],i[_]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Wt(i[_-1].dot(i[_]),-1,1));s[_].applyMatrix4(u.makeRotationAxis(c,y))}l[_].crossVectors(i[_],s[_])}if(t===!0){let _=Math.acos(Wt(s[0].dot(s[e]),-1,1));_/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(_=-_);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],_*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class nu extends yi{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new fe,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,_=h-this.aY;u=m*d-_*p+this.aX,h=m*p+_*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class __ extends nu{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function vd(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,d,p){let m=(l-s)/h-(c-s)/(h+d)+(c-l)/d,_=(c-l)/d-(u-l)/(d+p)+(u-c)/p;m*=d,_*=d,i(l,c,m,_)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const mc=new U,kh=new vd,Hh=new vd,Vh=new vd;class v_ extends yi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new U){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(mc.subVectors(i[0],i[1]).add(i[0]),h=mc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(mc.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=mc),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),_),E=Math.pow(p.distanceToSquared(m),_),x=Math.pow(m.distanceToSquared(d),_);E<1e-4&&(E=1),y<1e-4&&(y=E),x<1e-4&&(x=E),kh.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,y,E,x),Hh.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,y,E,x),Vh.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,y,E,x)}else this.curveType==="catmullrom"&&(kh.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),Hh.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),Vh.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(kh.calc(u),Hh.calc(u),Vh.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new U().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function mg(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function dw(r,e){const t=1-r;return t*t*e}function pw(r,e){return 2*(1-r)*r*e}function mw(r,e){return r*r*e}function oa(r,e,t,n){return dw(r,e)+pw(r,t)+mw(r,n)}function gw(r,e){const t=1-r;return t*t*t*e}function _w(r,e){const t=1-r;return 3*t*t*r*e}function vw(r,e){return 3*(1-r)*r*r*e}function yw(r,e){return r*r*r*e}function aa(r,e,t,n,i){return gw(r,e)+_w(r,t)+vw(r,n)+yw(r,i)}class yd extends yi{constructor(e=new fe,t=new fe,n=new fe,i=new fe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new fe){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(aa(e,i.x,s.x,l.x,c.x),aa(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class y_ extends yi{constructor(e=new U,t=new U,n=new U,i=new U){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(aa(e,i.x,s.x,l.x,c.x),aa(e,i.y,s.y,l.y,c.y),aa(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class iu extends yi{constructor(e=new fe,t=new fe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new fe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new fe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class x_ extends yi{constructor(e=new U,t=new U){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new U){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class xd extends yi{constructor(e=new fe,t=new fe,n=new fe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new fe){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(oa(e,i.x,s.x,l.x),oa(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Md extends yi{constructor(e=new U,t=new U,n=new U){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(oa(e,i.x,s.x,l.x),oa(e,i.y,s.y,l.y),oa(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Sd extends yi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new fe){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],d=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(mg(c,u.x,h.x,d.x,p.x),mg(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new fe().fromArray(i))}return this}}var Ed=Object.freeze({__proto__:null,ArcCurve:__,CatmullRomCurve3:v_,CubicBezierCurve:yd,CubicBezierCurve3:y_,EllipseCurve:nu,LineCurve:iu,LineCurve3:x_,QuadraticBezierCurve:xd,QuadraticBezierCurve3:Md,SplineCurve:Sd});class M_ extends yi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new iu(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Ed[i.type]().fromJSON(i))}return this}}class va extends M_{constructor(e){super(),this.type="Path",this.currentPoint=new fe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new iu(this.currentPoint.clone(),new fe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new xd(this.currentPoint.clone(),new fe(e,t),new fe(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new yd(this.currentPoint.clone(),new fe(e,t),new fe(n,i),new fe(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Sd(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new nu(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class vo extends mt{constructor(e=[new fe(0,-.5),new fe(.5,0),new fe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Wt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],d=1/t,p=new U,m=new fe,_=new U,y=new U,E=new U;let x=0,v=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,E.copy(_),_.normalize(),u.push(_.x,_.y,_.z);break;case e.length-1:u.push(E.x,E.y,E.z);break;default:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,y.copy(_),_.x+=E.x,_.y+=E.y,_.z+=E.z,_.normalize(),u.push(_.x,_.y,_.z),E.copy(y)}for(let w=0;w<=t;w++){const S=n+w*d*i,A=Math.sin(S),R=Math.cos(S);for(let C=0;C<=e.length-1;C++){p.x=e[C].x*A,p.y=e[C].y,p.z=e[C].x*R,l.push(p.x,p.y,p.z),m.x=w/t,m.y=C/(e.length-1),c.push(m.x,m.y);const N=u[3*C+0]*A,O=u[3*C+1],b=u[3*C+0]*R;h.push(N,O,b)}}for(let w=0;w<t;w++)for(let S=0;S<e.length-1;S++){const A=S+w*e.length,R=A,C=A+e.length,N=A+e.length+1,O=A+1;s.push(R,C,O),s.push(N,O,C)}this.setIndex(s),this.setAttribute("position",new Be(l,3)),this.setAttribute("uv",new Be(c,2)),this.setAttribute("normal",new Be(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vo(e.points,e.segments,e.phiStart,e.phiLength)}}class La extends vo{constructor(e=1,t=1,n=4,i=8){const s=new va;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new La(e.radius,e.length,e.capSegments,e.radialSegments)}}class Ia extends mt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new U,d=new fe;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const _=n+p/t*i;h.x=e*Math.cos(_),h.y=e*Math.sin(_),l.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(l[m]/e+1)/2,d.y=(l[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Be(l,3)),this.setAttribute("normal",new Be(c,3)),this.setAttribute("uv",new Be(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ia(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class hs extends mt{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],p=[],m=[],_=[];let y=0;const E=[],x=n/2;let v=0;w(),l===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(d),this.setAttribute("position",new Be(p,3)),this.setAttribute("normal",new Be(m,3)),this.setAttribute("uv",new Be(_,2));function w(){const A=new U,R=new U;let C=0;const N=(t-e)/n;for(let O=0;O<=s;O++){const b=[],L=O/s,z=L*(t-e)+e;for(let te=0;te<=i;te++){const W=te/i,q=W*u+c,Q=Math.sin(q),ce=Math.cos(q);R.x=z*Q,R.y=-L*n+x,R.z=z*ce,p.push(R.x,R.y,R.z),A.set(Q,N,ce).normalize(),m.push(A.x,A.y,A.z),_.push(W,1-L),b.push(y++)}E.push(b)}for(let O=0;O<i;O++)for(let b=0;b<s;b++){const L=E[b][O],z=E[b+1][O],te=E[b+1][O+1],W=E[b][O+1];d.push(L,z,W),d.push(z,te,W),C+=6}h.addGroup(v,C,0),v+=C}function S(A){const R=y,C=new fe,N=new U;let O=0;const b=A===!0?e:t,L=A===!0?1:-1;for(let te=1;te<=i;te++)p.push(0,x*L,0),m.push(0,L,0),_.push(.5,.5),y++;const z=y;for(let te=0;te<=i;te++){const q=te/i*u+c,Q=Math.cos(q),ce=Math.sin(q);N.x=b*ce,N.y=x*L,N.z=b*Q,p.push(N.x,N.y,N.z),m.push(0,L,0),C.x=Q*.5+.5,C.y=ce*.5*L+.5,_.push(C.x,C.y),y++}for(let te=0;te<i;te++){const W=R+te,q=z+te;A===!0?d.push(q,q+1,W):d.push(q+1,q,W),O+=3}h.addGroup(v,O,A===!0?1:2),v+=O}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hs(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ua extends hs{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new Ua(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ir extends mt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),d(),this.setAttribute("position",new Be(s,3)),this.setAttribute("normal",new Be(s.slice(),3)),this.setAttribute("uv",new Be(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const S=new U,A=new U,R=new U;for(let C=0;C<t.length;C+=3)_(t[C+0],S),_(t[C+1],A),_(t[C+2],R),u(S,A,R,w)}function u(w,S,A,R){const C=R+1,N=[];for(let O=0;O<=C;O++){N[O]=[];const b=w.clone().lerp(A,O/C),L=S.clone().lerp(A,O/C),z=C-O;for(let te=0;te<=z;te++)te===0&&O===C?N[O][te]=b:N[O][te]=b.clone().lerp(L,te/z)}for(let O=0;O<C;O++)for(let b=0;b<2*(C-O)-1;b++){const L=Math.floor(b/2);b%2===0?(m(N[O][L+1]),m(N[O+1][L]),m(N[O][L])):(m(N[O][L+1]),m(N[O+1][L+1]),m(N[O+1][L]))}}function h(w){const S=new U;for(let A=0;A<s.length;A+=3)S.x=s[A+0],S.y=s[A+1],S.z=s[A+2],S.normalize().multiplyScalar(w),s[A+0]=S.x,s[A+1]=S.y,s[A+2]=S.z}function d(){const w=new U;for(let S=0;S<s.length;S+=3){w.x=s[S+0],w.y=s[S+1],w.z=s[S+2];const A=x(w)/2/Math.PI+.5,R=v(w)/Math.PI+.5;l.push(A,1-R)}y(),p()}function p(){for(let w=0;w<l.length;w+=6){const S=l[w+0],A=l[w+2],R=l[w+4],C=Math.max(S,A,R),N=Math.min(S,A,R);C>.9&&N<.1&&(S<.2&&(l[w+0]+=1),A<.2&&(l[w+2]+=1),R<.2&&(l[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function _(w,S){const A=w*3;S.x=e[A+0],S.y=e[A+1],S.z=e[A+2]}function y(){const w=new U,S=new U,A=new U,R=new U,C=new fe,N=new fe,O=new fe;for(let b=0,L=0;b<s.length;b+=9,L+=6){w.set(s[b+0],s[b+1],s[b+2]),S.set(s[b+3],s[b+4],s[b+5]),A.set(s[b+6],s[b+7],s[b+8]),C.set(l[L+0],l[L+1]),N.set(l[L+2],l[L+3]),O.set(l[L+4],l[L+5]),R.copy(w).add(S).add(A).divideScalar(3);const z=x(R);E(C,L+0,w,z),E(N,L+2,S,z),E(O,L+4,A,z)}}function E(w,S,A,R){R<0&&w.x===1&&(l[S]=w.x-1),A.x===0&&A.z===0&&(l[S]=R/2/Math.PI+.5)}function x(w){return Math.atan2(w.z,-w.x)}function v(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ir(e.vertices,e.indices,e.radius,e.details)}}class Da extends ir{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Da(e.radius,e.detail)}}const gc=new U,_c=new U,Gh=new U,vc=new Dn;class S_ extends mt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(rs*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},_=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:E,b:x,c:v}=vc;if(E.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),v.fromBufferAttribute(c,h[2]),vc.getNormal(Gh),p[0]=`${Math.round(E.x*i)},${Math.round(E.y*i)},${Math.round(E.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const S=(w+1)%3,A=p[w],R=p[S],C=vc[d[w]],N=vc[d[S]],O=`${A}_${R}`,b=`${R}_${A}`;b in m&&m[b]?(Gh.dot(m[b].normal)<=s&&(_.push(C.x,C.y,C.z),_.push(N.x,N.y,N.z)),m[b]=null):O in m||(m[O]={index0:h[w],index1:h[S],normal:Gh.clone()})}}for(const y in m)if(m[y]){const{index0:E,index1:x}=m[y];gc.fromBufferAttribute(c,E),_c.fromBufferAttribute(c,x),_.push(gc.x,gc.y,gc.z),_.push(_c.x,_c.y,_c.z)}this.setAttribute("position",new Be(_,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class os extends va{constructor(e){super(e),this.uuid=qn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new va().fromJSON(i))}return this}}const xw={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=E_(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,d,p,m,_;if(n&&(s=Tw(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);_=Math.max(h-c,d-u),_=_!==0?32767/_:0}return ya(s,l,t,c,u,_,0),l}};function E_(r,e,t,n,i){let s,l;if(i===Fw(r,e,t,n)>0)for(s=e;s<t;s+=n)l=gg(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=gg(s,r[s],r[s+1],l);return l&&ru(l,l.next)&&(Ma(l),l=l.next),l}function cs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(ru(t,t.next)||Bt(t.prev,t,t.next)===0)){if(Ma(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function ya(r,e,t,n,i,s,l){if(!r)return;!l&&s&&Pw(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?Sw(r,n,i,s):Mw(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Ma(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=Ew(cs(r),e,t),ya(r,e,t,n,i,s,2)):l===2&&ww(r,e,t,n,i,s):ya(cs(r),e,t,n,i,s,1);break}}}function Mw(r){const e=r.prev,t=r,n=r.next;if(Bt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,_=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=_&&ro(i,c,s,u,l,h,y.x,y.y)&&Bt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function Sw(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Bt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,d=i.y,p=s.y,m=l.y,_=c<u?c<h?c:h:u<h?u:h,y=d<p?d<m?d:m:p<m?p:m,E=c>u?c>h?c:h:u>h?u:h,x=d>p?d>m?d:m:p>m?p:m,v=Of(_,y,e,t,n),w=Of(E,x,e,t,n);let S=r.prevZ,A=r.nextZ;for(;S&&S.z>=v&&A&&A.z<=w;){if(S.x>=_&&S.x<=E&&S.y>=y&&S.y<=x&&S!==i&&S!==l&&ro(c,d,u,p,h,m,S.x,S.y)&&Bt(S.prev,S,S.next)>=0||(S=S.prevZ,A.x>=_&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&ro(c,d,u,p,h,m,A.x,A.y)&&Bt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;S&&S.z>=v;){if(S.x>=_&&S.x<=E&&S.y>=y&&S.y<=x&&S!==i&&S!==l&&ro(c,d,u,p,h,m,S.x,S.y)&&Bt(S.prev,S,S.next)>=0)return!1;S=S.prevZ}for(;A&&A.z<=w;){if(A.x>=_&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&ro(c,d,u,p,h,m,A.x,A.y)&&Bt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function Ew(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!ru(i,s)&&w_(i,n,n.next,s)&&xa(i,s)&&xa(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Ma(n),Ma(n.next),n=r=s),n=n.next}while(n!==r);return cs(n)}function ww(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&Uw(l,c)){let u=T_(l,c);l=cs(l,l.next),u=cs(u,u.next),ya(l,e,t,n,i,s,0),ya(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function Tw(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=E_(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(Iw(h));for(i.sort(Aw),s=0;s<i.length;s++)t=bw(i[s],t);return t}function Aw(r,e){return r.x-e.x}function bw(r,e){const t=Rw(r,e);if(!t)return e;const n=T_(t,r);return cs(n,n.next),cs(t,t.next)}function Rw(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&ro(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),xa(t,r)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&Cw(i,t)))&&(i=t,d=p)),t=t.next;while(t!==c);return i}function Cw(r,e){return Bt(r.prev,r,e.prev)<0&&Bt(e.next,r,r.next)<0}function Pw(r,e,t,n){let i=r;do i.z===0&&(i.z=Of(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,Lw(i)}function Lw(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function Of(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function Iw(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ro(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function Uw(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!Dw(r,e)&&(xa(r,e)&&xa(e,r)&&Nw(r,e)&&(Bt(r.prev,r,e.prev)||Bt(r,e.prev,e))||ru(r,e)&&Bt(r.prev,r,r.next)>0&&Bt(e.prev,e,e.next)>0)}function Bt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function ru(r,e){return r.x===e.x&&r.y===e.y}function w_(r,e,t,n){const i=xc(Bt(r,e,t)),s=xc(Bt(r,e,n)),l=xc(Bt(t,n,r)),c=xc(Bt(t,n,e));return!!(i!==s&&l!==c||i===0&&yc(r,t,e)||s===0&&yc(r,n,e)||l===0&&yc(t,r,n)||c===0&&yc(t,e,n))}function yc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function xc(r){return r>0?1:r<0?-1:0}function Dw(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&w_(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function xa(r,e){return Bt(r.prev,r,r.next)<0?Bt(r,e,r.next)>=0&&Bt(r,r.prev,e)>=0:Bt(r,e,r.prev)<0||Bt(r,r.next,e)<0}function Nw(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function T_(r,e){const t=new Bf(r.i,r.x,r.y),n=new Bf(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function gg(r,e,t,n){const i=new Bf(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Ma(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Bf(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Fw(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class Di{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Di.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];_g(e),vg(n,e);let l=e.length;t.forEach(_g);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,vg(n,t[u]);const c=xw.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function _g(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function vg(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Na extends mt{constructor(e=new os([new fe(.5,.5),new fe(-.5,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new Be(i,3)),this.setAttribute("uv",new Be(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:_-.1,E=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:Ow;let S,A=!1,R,C,N,O;v&&(S=v.getSpacedPoints(d),A=!0,m=!1,R=v.computeFrenetFrames(d,!1),C=new U,N=new U,O=new U),m||(x=0,_=0,y=0,E=0);const b=c.extractPoints(h);let L=b.shape;const z=b.holes;if(!Di.isClockWise(L)){L=L.reverse();for(let B=0,me=z.length;B<me;B++){const ue=z[B];Di.isClockWise(ue)&&(z[B]=ue.reverse())}}const W=Di.triangulateShape(L,z),q=L;for(let B=0,me=z.length;B<me;B++){const ue=z[B];L=L.concat(ue)}function Q(B,me,ue){return me||console.error("THREE.ExtrudeGeometry: vec does not exist"),B.clone().addScaledVector(me,ue)}const ce=L.length,ie=W.length;function V(B,me,ue){let ye,pe,ze;const Pe=B.x-me.x,Ue=B.y-me.y,Ke=ue.x-B.x,gt=ue.y-B.y,Nt=Pe*Pe+Ue*Ue,F=Pe*gt-Ue*Ke;if(Math.abs(F)>Number.EPSILON){const P=Math.sqrt(Nt),re=Math.sqrt(Ke*Ke+gt*gt),ge=me.x-Ue/P,_e=me.y+Pe/P,Ee=ue.x-gt/re,ke=ue.y+Ke/re,we=((Ee-ge)*gt-(ke-_e)*Ke)/(Pe*gt-Ue*Ke);ye=ge+Pe*we-B.x,pe=_e+Ue*we-B.y;const ae=ye*ye+pe*pe;if(ae<=2)return new fe(ye,pe);ze=Math.sqrt(ae/2)}else{let P=!1;Pe>Number.EPSILON?Ke>Number.EPSILON&&(P=!0):Pe<-Number.EPSILON?Ke<-Number.EPSILON&&(P=!0):Math.sign(Ue)===Math.sign(gt)&&(P=!0),P?(ye=-Ue,pe=Pe,ze=Math.sqrt(Nt)):(ye=Pe,pe=Ue,ze=Math.sqrt(Nt/2))}return new fe(ye/ze,pe/ze)}const Z=[];for(let B=0,me=q.length,ue=me-1,ye=B+1;B<me;B++,ue++,ye++)ue===me&&(ue=0),ye===me&&(ye=0),Z[B]=V(q[B],q[ue],q[ye]);const J=[];let he,X=Z.concat();for(let B=0,me=z.length;B<me;B++){const ue=z[B];he=[];for(let ye=0,pe=ue.length,ze=pe-1,Pe=ye+1;ye<pe;ye++,ze++,Pe++)ze===pe&&(ze=0),Pe===pe&&(Pe=0),he[ye]=V(ue[ye],ue[ze],ue[Pe]);J.push(he),X=X.concat(he)}for(let B=0;B<x;B++){const me=B/x,ue=_*Math.cos(me*Math.PI/2),ye=y*Math.sin(me*Math.PI/2)+E;for(let pe=0,ze=q.length;pe<ze;pe++){const Pe=Q(q[pe],Z[pe],ye);Ie(Pe.x,Pe.y,-ue)}for(let pe=0,ze=z.length;pe<ze;pe++){const Pe=z[pe];he=J[pe];for(let Ue=0,Ke=Pe.length;Ue<Ke;Ue++){const gt=Q(Pe[Ue],he[Ue],ye);Ie(gt.x,gt.y,-ue)}}}const le=y+E;for(let B=0;B<ce;B++){const me=m?Q(L[B],X[B],le):L[B];A?(N.copy(R.normals[0]).multiplyScalar(me.x),C.copy(R.binormals[0]).multiplyScalar(me.y),O.copy(S[0]).add(N).add(C),Ie(O.x,O.y,O.z)):Ie(me.x,me.y,0)}for(let B=1;B<=d;B++)for(let me=0;me<ce;me++){const ue=m?Q(L[me],X[me],le):L[me];A?(N.copy(R.normals[B]).multiplyScalar(ue.x),C.copy(R.binormals[B]).multiplyScalar(ue.y),O.copy(S[B]).add(N).add(C),Ie(O.x,O.y,O.z)):Ie(ue.x,ue.y,p/d*B)}for(let B=x-1;B>=0;B--){const me=B/x,ue=_*Math.cos(me*Math.PI/2),ye=y*Math.sin(me*Math.PI/2)+E;for(let pe=0,ze=q.length;pe<ze;pe++){const Pe=Q(q[pe],Z[pe],ye);Ie(Pe.x,Pe.y,p+ue)}for(let pe=0,ze=z.length;pe<ze;pe++){const Pe=z[pe];he=J[pe];for(let Ue=0,Ke=Pe.length;Ue<Ke;Ue++){const gt=Q(Pe[Ue],he[Ue],ye);A?Ie(gt.x,gt.y+S[d-1].y,S[d-1].x+ue):Ie(gt.x,gt.y,p+ue)}}}de(),Se();function de(){const B=i.length/3;if(m){let me=0,ue=ce*me;for(let ye=0;ye<ie;ye++){const pe=W[ye];nt(pe[2]+ue,pe[1]+ue,pe[0]+ue)}me=d+x*2,ue=ce*me;for(let ye=0;ye<ie;ye++){const pe=W[ye];nt(pe[0]+ue,pe[1]+ue,pe[2]+ue)}}else{for(let me=0;me<ie;me++){const ue=W[me];nt(ue[2],ue[1],ue[0])}for(let me=0;me<ie;me++){const ue=W[me];nt(ue[0]+ce*d,ue[1]+ce*d,ue[2]+ce*d)}}n.addGroup(B,i.length/3-B,0)}function Se(){const B=i.length/3;let me=0;Te(q,me),me+=q.length;for(let ue=0,ye=z.length;ue<ye;ue++){const pe=z[ue];Te(pe,me),me+=pe.length}n.addGroup(B,i.length/3-B,1)}function Te(B,me){let ue=B.length;for(;--ue>=0;){const ye=ue;let pe=ue-1;pe<0&&(pe=B.length-1);for(let ze=0,Pe=d+x*2;ze<Pe;ze++){const Ue=ce*ze,Ke=ce*(ze+1),gt=me+ye+Ue,Nt=me+pe+Ue,F=me+pe+Ke,P=me+ye+Ke;Je(gt,Nt,F,P)}}}function Ie(B,me,ue){u.push(B),u.push(me),u.push(ue)}function nt(B,me,ue){vt(B),vt(me),vt(ue);const ye=i.length/3,pe=w.generateTopUV(n,i,ye-3,ye-2,ye-1);Ge(pe[0]),Ge(pe[1]),Ge(pe[2])}function Je(B,me,ue,ye){vt(B),vt(me),vt(ye),vt(me),vt(ue),vt(ye);const pe=i.length/3,ze=w.generateSideWallUV(n,i,pe-6,pe-3,pe-2,pe-1);Ge(ze[0]),Ge(ze[1]),Ge(ze[3]),Ge(ze[1]),Ge(ze[2]),Ge(ze[3])}function vt(B){i.push(u[B*3+0]),i.push(u[B*3+1]),i.push(u[B*3+2])}function Ge(B){s.push(B.x),s.push(B.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Bw(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Ed[i.type]().fromJSON(i)),new Na(n,e.options)}}const Ow={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new fe(s,l),new fe(c,u),new fe(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],_=e[i*3+1],y=e[i*3+2],E=e[s*3],x=e[s*3+1],v=e[s*3+2];return Math.abs(c-d)<Math.abs(l-h)?[new fe(l,1-u),new fe(h,1-p),new fe(m,1-y),new fe(E,1-v)]:[new fe(c,1-u),new fe(d,1-p),new fe(_,1-y),new fe(x,1-v)]}};function Bw(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Fa extends ir{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Fa(e.radius,e.detail)}}class yo extends ir{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yo(e.radius,e.detail)}}class Oa extends mt{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,_=new U,y=new fe;for(let E=0;E<=i;E++){for(let x=0;x<=n;x++){const v=s+x/n*l;_.x=p*Math.cos(v),_.y=p*Math.sin(v),u.push(_.x,_.y,_.z),h.push(0,0,1),y.x=(_.x/t+1)/2,y.y=(_.y/t+1)/2,d.push(y.x,y.y)}p+=m}for(let E=0;E<i;E++){const x=E*(n+1);for(let v=0;v<n;v++){const w=v+x,S=w,A=w+n+1,R=w+n+2,C=w+1;c.push(S,A,C),c.push(A,R,C)}}this.setIndex(c),this.setAttribute("position",new Be(u,3)),this.setAttribute("normal",new Be(h,3)),this.setAttribute("uv",new Be(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Oa(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Ba extends mt{constructor(e=new os([new fe(0,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Be(i,3)),this.setAttribute("normal",new Be(s,3)),this.setAttribute("uv",new Be(l,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let _=m.shape;const y=m.holes;Di.isClockWise(_)===!1&&(_=_.reverse());for(let x=0,v=y.length;x<v;x++){const w=y[x];Di.isClockWise(w)===!0&&(y[x]=w.reverse())}const E=Di.triangulateShape(_,y);for(let x=0,v=y.length;x<v;x++){const w=y[x];_=_.concat(w)}for(let x=0,v=_.length;x<v;x++){const w=_[x];i.push(w.x,w.y,0),s.push(0,0,1),l.push(w.x,w.y)}for(let x=0,v=E.length;x<v;x++){const w=E[x],S=w[0]+p,A=w[1]+p,R=w[2]+p;n.push(S,A,R),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return zw(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new Ba(n,e.curveSegments)}}function zw(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class xo extends mt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const d=[],p=new U,m=new U,_=[],y=[],E=[],x=[];for(let v=0;v<=n;v++){const w=[],S=v/n;let A=0;v===0&&l===0?A=.5/t:v===n&&u===Math.PI&&(A=-.5/t);for(let R=0;R<=t;R++){const C=R/t;p.x=-e*Math.cos(i+C*s)*Math.sin(l+S*c),p.y=e*Math.cos(l+S*c),p.z=e*Math.sin(i+C*s)*Math.sin(l+S*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),E.push(m.x,m.y,m.z),x.push(C+A,1-S),w.push(h++)}d.push(w)}for(let v=0;v<n;v++)for(let w=0;w<t;w++){const S=d[v][w+1],A=d[v][w],R=d[v+1][w],C=d[v+1][w+1];(v!==0||l>0)&&_.push(S,A,C),(v!==n-1||u<Math.PI)&&_.push(A,R,C)}this.setIndex(_),this.setAttribute("position",new Be(y,3)),this.setAttribute("normal",new Be(E,3)),this.setAttribute("uv",new Be(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xo(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class za extends ir{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new za(e.radius,e.detail)}}class ka extends mt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],d=new U,p=new U,m=new U;for(let _=0;_<=n;_++)for(let y=0;y<=i;y++){const E=y/i*s,x=_/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(E),p.y=(e+t*Math.cos(x))*Math.sin(E),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),d.x=e*Math.cos(E),d.y=e*Math.sin(E),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(_/n)}for(let _=1;_<=n;_++)for(let y=1;y<=i;y++){const E=(i+1)*_+y-1,x=(i+1)*(_-1)+y-1,v=(i+1)*(_-1)+y,w=(i+1)*_+y;l.push(E,x,w),l.push(x,v,w)}this.setIndex(l),this.setAttribute("position",new Be(c,3)),this.setAttribute("normal",new Be(u,3)),this.setAttribute("uv",new Be(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ka(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Ha extends mt{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new U,m=new U,_=new U,y=new U,E=new U,x=new U,v=new U;for(let S=0;S<=n;++S){const A=S/n*s*Math.PI*2;w(A,s,l,e,_),w(A+.01,s,l,e,y),x.subVectors(y,_),v.addVectors(y,_),E.crossVectors(x,v),v.crossVectors(E,x),E.normalize(),v.normalize();for(let R=0;R<=i;++R){const C=R/i*Math.PI*2,N=-t*Math.cos(C),O=t*Math.sin(C);p.x=_.x+(N*v.x+O*E.x),p.y=_.y+(N*v.y+O*E.y),p.z=_.z+(N*v.z+O*E.z),u.push(p.x,p.y,p.z),m.subVectors(p,_).normalize(),h.push(m.x,m.y,m.z),d.push(S/n),d.push(R/i)}}for(let S=1;S<=n;S++)for(let A=1;A<=i;A++){const R=(i+1)*(S-1)+(A-1),C=(i+1)*S+(A-1),N=(i+1)*S+A,O=(i+1)*(S-1)+A;c.push(R,C,O),c.push(C,N,O)}this.setIndex(c),this.setAttribute("position",new Be(u,3)),this.setAttribute("normal",new Be(h,3)),this.setAttribute("uv",new Be(d,2));function w(S,A,R,C,N){const O=Math.cos(S),b=Math.sin(S),L=R/A*S,z=Math.cos(L);N.x=C*(2+z)*.5*O,N.y=C*(2+z)*b*.5,N.z=C*Math.sin(L)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ha(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Va extends mt{constructor(e=new Md(new U(-1,-1,0),new U(-1,1,0),new U(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new U,u=new U,h=new fe;let d=new U;const p=[],m=[],_=[],y=[];E(),this.setIndex(y),this.setAttribute("position",new Be(p,3)),this.setAttribute("normal",new Be(m,3)),this.setAttribute("uv",new Be(_,2));function E(){for(let S=0;S<t;S++)x(S);x(s===!1?t:0),w(),v()}function x(S){d=e.getPointAt(S/t,d);const A=l.normals[S],R=l.binormals[S];for(let C=0;C<=i;C++){const N=C/i*Math.PI*2,O=Math.sin(N),b=-Math.cos(N);u.x=b*A.x+O*R.x,u.y=b*A.y+O*R.y,u.z=b*A.z+O*R.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function v(){for(let S=1;S<=t;S++)for(let A=1;A<=i;A++){const R=(i+1)*(S-1)+(A-1),C=(i+1)*S+(A-1),N=(i+1)*S+A,O=(i+1)*(S-1)+A;y.push(R,C,O),y.push(C,N,O)}}function w(){for(let S=0;S<=t;S++)for(let A=0;A<=i;A++)h.x=S/t,h.y=A/i,_.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Va(new Ed[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class A_ extends mt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new U,s=new U;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,_=p.count;for(let y=m,E=m+_;y<E;y+=3)for(let x=0;x<3;x++){const v=c.getX(y+x),w=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,v),s.fromBufferAttribute(l,w),yg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,d),s.fromBufferAttribute(l,p),yg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Be(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function yg(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var xg=Object.freeze({__proto__:null,BoxGeometry:Pr,CapsuleGeometry:La,CircleGeometry:Ia,ConeGeometry:Ua,CylinderGeometry:hs,DodecahedronGeometry:Da,EdgesGeometry:S_,ExtrudeGeometry:Na,IcosahedronGeometry:Fa,LatheGeometry:vo,OctahedronGeometry:yo,PlaneGeometry:go,PolyhedronGeometry:ir,RingGeometry:Oa,ShapeGeometry:Ba,SphereGeometry:xo,TetrahedronGeometry:za,TorusGeometry:ka,TorusKnotGeometry:Ha,TubeGeometry:Va,WireframeGeometry:A_});class b_ extends En{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class R_ extends Ni{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class wd extends En{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class C_ extends wd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new fe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Wt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class P_ extends En{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Aa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class L_ extends En{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class I_ extends En{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class U_ extends En{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Aa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class D_ extends En{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class N_ extends Cn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function si(r,e,t){return Td(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)}function ns(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Td(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function F_(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function zf(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function Ad(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function kw(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),p=[],m=[];for(let _=0;_<h.times.length;++_){const y=h.times[_]*i;if(!(y<t||y>=n)){p.push(h.times[_]);for(let E=0;E<d;++E)m.push(h.values[_*d+E])}}p.length!==0&&(h.times=ns(p,h.times.constructor),h.values=ns(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function Hw(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(v){return v.name===c.name&&v.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const _=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=_/3);const y=c.times.length-1;let E;if(s<=c.times[0]){const v=d,w=p-d;E=si(c.values,v,w)}else if(s>=c.times[y]){const v=y*p+d,w=v+p-d;E=si(c.values,v,w)}else{const v=c.createInterpolant(),w=d,S=p-d;v.evaluate(s),E=si(v.resultBuffer,w,S)}u==="quaternion"&&new Fn().fromArray(E).normalize().conjugate().toArray(E);const x=h.times.length;for(let v=0;v<x;++v){const w=v*_+m;if(u==="quaternion")Fn.multiplyQuaternionsFlat(h.values,w,E,0,h.values,w);else{const S=_-m*2;for(let A=0;A<S;++A)h.values[w+A]-=E[A]}}}return r.blendMode=td,r}const Vw={arraySlice:si,convertArray:ns,isTypedArray:Td,getKeyframeOrder:F_,sortedArray:zf,flattenJSON:Ad,subclip:kw,makeClipAdditive:Hw};class Ga{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class O_ extends Ga{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:$r,endingEnd:$r}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case es:s=e,c=2*t-n;break;case pa:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case es:l=e,u=2*n-t;break;case pa:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=l*d}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,_=this._weightNext,y=(n-t)/(i-t),E=y*y,x=E*y,v=-m*x+2*m*E-m*y,w=(1+m)*x+(-1.5-2*m)*E+(-.5+m)*y+1,S=(-1-_)*x+(1.5+_)*E+.5*y,A=_*x-_*E;for(let R=0;R!==c;++R)s[R]=v*l[d+R]+w*l[h+R]+S*l[u+R]+A*l[p+R];return s}}class bd extends Ga{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*d;return s}}class B_ extends Ga{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class xi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ns(t,this.TimeBufferType),this.values=ns(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ns(e.times,Array),values:ns(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new B_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new bd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new O_(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case fa:t=this.InterpolantFactoryMethodDiscrete;break;case da:t=this.InterpolantFactoryMethodLinear;break;case Nc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return fa;case this.InterpolantFactoryMethodLinear:return da;case this.InterpolantFactoryMethodSmooth:return Nc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=si(n,s,l),this.values=si(this.values,s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&Td(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=si(this.times),t=si(this.values),n=this.getValueSize(),i=this.getInterpolation()===Nc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,_=p+n;for(let y=0;y!==n;++y){const E=t[p+y];if(E!==t[m+y]||E!==t[_+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let _=0;_!==n;++_)t[m+_]=t[p+_]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=si(e,0,l),this.values=si(t,0,l*n)):(this.times=e,this.values=t),this}clone(){const e=si(this.times,0),t=si(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}xi.prototype.TimeBufferType=Float32Array;xi.prototype.ValueBufferType=Float32Array;xi.prototype.DefaultInterpolation=da;class fs extends xi{}fs.prototype.ValueTypeName="bool";fs.prototype.ValueBufferType=Array;fs.prototype.DefaultInterpolation=fa;fs.prototype.InterpolantFactoryMethodLinear=void 0;fs.prototype.InterpolantFactoryMethodSmooth=void 0;class Rd extends xi{}Rd.prototype.ValueTypeName="color";class Sa extends xi{}Sa.prototype.ValueTypeName="number";class z_ extends Ga{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Fn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Mo extends xi{InterpolantFactoryMethodLinear(e){return new z_(this.times,this.values,this.getValueSize(),e)}}Mo.prototype.ValueTypeName="quaternion";Mo.prototype.DefaultInterpolation=da;Mo.prototype.InterpolantFactoryMethodSmooth=void 0;class ds extends xi{}ds.prototype.ValueTypeName="string";ds.prototype.ValueBufferType=Array;ds.prototype.DefaultInterpolation=fa;ds.prototype.InterpolantFactoryMethodLinear=void 0;ds.prototype.InterpolantFactoryMethodSmooth=void 0;class Ea extends xi{}Ea.prototype.ValueTypeName="vector";class wa{constructor(e,t=-1,n,i=Zc){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=qn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(Ww(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(xi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=F_(u);u=zf(u,1,d),h=zf(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Sa(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,_,y,E){if(_.length!==0){const x=[],v=[];Ad(_,x,v,y),x.length!==0&&E.push(new p(m,x,v))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const _={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let E=0;E<m[y].morphTargets.length;E++)_[m[y].morphTargets[E]]=-1;for(const E in _){const x=[],v=[];for(let w=0;w!==m[y].morphTargets.length;++w){const S=m[y];x.push(S.time),v.push(S.morphTarget===E?1:0)}i.push(new Sa(".morphTargetInfluence["+E+"]",x,v))}u=_.length*l}else{const _=".bones["+t[p].name+"]";n(Ea,_+".position",m,"pos",i),n(Mo,_+".quaternion",m,"rot",i),n(Ea,_+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Gw(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Sa;case"vector":case"vector2":case"vector3":case"vector4":return Ea;case"color":return Rd;case"quaternion":return Mo;case"bool":case"boolean":return fs;case"string":return ds}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function Ww(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Gw(r.type);if(r.times===void 0){const t=[],n=[];Ad(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const us={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Cd{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,l,c),s=!0},this.itemEnd=function(d){l++,i.onProgress!==void 0&&i.onProgress(d,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const _=h[p],y=h[p+1];if(_.global&&(_.lastIndex=0),_.test(d))return y}return null}}}const k_=new Cd;class Zn{constructor(e){this.manager=e!==void 0?e:k_,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Ki={};class Xw extends Error{constructor(e,t){super(e),this.response=t}}class tr extends Zn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=us.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Ki[e]!==void 0){Ki[e].push({onLoad:t,onProgress:n,onError:i});return}Ki[e]=[],Ki[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=Ki[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),_=m?parseInt(m):0,y=_!==0;let E=0;const x=new ReadableStream({start(v){w();function w(){p.read().then(({done:S,value:A})=>{if(S)v.close();else{E+=A.byteLength;const R=new ProgressEvent("progress",{lengthComputable:y,loaded:E,total:_});for(let C=0,N=d.length;C<N;C++){const O=d[C];O.onProgress&&O.onProgress(R)}v.enqueue(A),w()}})}}});return new Response(x)}else throw new Xw(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,_=new TextDecoder(m);return h.arrayBuffer().then(y=>_.decode(y))}}}).then(h=>{us.add(e,h);const d=Ki[e];delete Ki[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onLoad&&_.onLoad(h)}}).catch(h=>{const d=Ki[e];if(d===void 0)throw this.manager.itemError(e),h;delete Ki[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onError&&_.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Yw extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new tr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=wa.parse(e[n]);t.push(i)}return t}}class qw extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new _d,u=new tr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const _=s.parse(m,!0);l[p]={width:_.width,height:_.height,format:_.format,mipmaps:_.mipmaps},h+=1,h===6&&(_.mipmapCount===1&&(c.minFilter=Zt),c.image=l,c.format=_.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const _=m.mipmaps.length/m.mipmapCount;for(let y=0;y<_;y++){l[y]={mipmaps:[]};for(let E=0;E<m.mipmapCount;E++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+E]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=Zt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Ta extends Zn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=us.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=_a("img");function u(){d(),us.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){d(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class Zw extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=new Ca;s.colorSpace=at;const l=new Ta(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class Jw extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new ao,c=new tr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){const h=s.parse(u);h&&(h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:Sn,l.wrapT=h.wrapT!==void 0?h.wrapT:Sn,l.magFilter=h.magFilter!==void 0?h.magFilter:Zt,l.minFilter=h.minFilter!==void 0?h.minFilter:Zt,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?l.colorSpace=h.colorSpace:h.encoding!==void 0&&(l.encoding=h.encoding),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Ar),h.mipmapCount===1&&(l.minFilter=Zt),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h))},n,i),l}}class Kw extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=new Jt,l=new Ta(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Lr extends Et{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class H_ extends Lr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Wh=new ot,Mg=new U,Sg=new U;class Pd{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new fe(512,512),this.map=null,this.mapPass=null,this.matrix=new ot,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Kc,this._frameExtents=new fe(1,1),this._viewportCount=1,this._viewports=[new At(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Mg.setFromMatrixPosition(e.matrixWorld),t.position.copy(Mg),Sg.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Sg),t.updateMatrixWorld(),Wh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Wh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Wh)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class jw extends Pd{constructor(){super(new un(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=co*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class V_ extends Lr{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.target=new Et,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new jw}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Eg=new ot,jo=new U,Xh=new U;class Qw extends Pd{constructor(){super(new un(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new fe(4,2),this._viewportCount=6,this._viewports=[new At(2,1,1,1),new At(0,1,1,1),new At(3,1,1,1),new At(1,1,1,1),new At(3,0,1,1),new At(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),jo.setFromMatrixPosition(e.matrixWorld),n.position.copy(jo),Xh.copy(n.position),Xh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Xh),n.updateMatrixWorld(),i.makeTranslation(-jo.x,-jo.y,-jo.z),Eg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Eg)}}class G_ extends Lr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Qw}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class $w extends Pd{constructor(){super(new Pa(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class W_ extends Lr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.target=new Et,this.shadow=new $w}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class X_ extends Lr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Y_ extends Lr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class q_{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new U)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class su extends Lr{constructor(e=new q_,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class ou extends Zn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new tr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=ou.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Le().setHex(l.value);break;case"v2":i.uniforms[s].value=new fe().fromArray(l.value);break;case"v3":i.uniforms[s].value=new U().fromArray(l.value);break;case"v4":i.uniforms[s].value=new At().fromArray(l.value);break;case"m3":i.uniforms[s].value=new ht().fromArray(l.value);break;case"m4":i.uniforms[s].value=new ot().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new fe().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new fe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:b_,SpriteMaterial:pd,RawShaderMaterial:R_,ShaderMaterial:Ni,PointsMaterial:gd,MeshPhysicalMaterial:C_,MeshStandardMaterial:wd,MeshPhongMaterial:P_,MeshToonMaterial:L_,MeshNormalMaterial:I_,MeshLambertMaterial:U_,MeshDepthMaterial:ud,MeshDistanceMaterial:hd,MeshBasicMaterial:Cr,MeshMatcapMaterial:D_,LineDashedMaterial:N_,LineBasicMaterial:Cn,Material:En};return new t[e]}}class kf{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Z_ extends mt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class J_ extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new tr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(_,y){if(t[y]!==void 0)return t[y];const x=_.interleavedBuffers[y],v=s(_,x.buffer),w=to(x.type,v),S=new eu(w,x.stride);return S.uuid=x.uuid,t[y]=S,S}function s(_,y){if(n[y]!==void 0)return n[y];const x=_.arrayBuffers[y],v=new Uint32Array(x).buffer;return n[y]=v,v}const l=e.isInstancedBufferGeometry?new Z_:new mt,c=e.data.index;if(c!==void 0){const _=to(c.type,c.array);l.setIndex(new Pt(_,1))}const u=e.data.attributes;for(const _ in u){const y=u[_];let E;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);E=new ls(x,y.itemSize,y.offset,y.normalized)}else{const x=to(y.type,y.array),v=y.isInstancedBufferAttribute?ho:Pt;E=new v(x,y.itemSize,y.normalized)}y.name!==void 0&&(E.name=y.name),y.usage!==void 0&&E.setUsage(y.usage),y.updateRange!==void 0&&(E.updateRange.offset=y.updateRange.offset,E.updateRange.count=y.updateRange.count),l.setAttribute(_,E)}const h=e.data.morphAttributes;if(h)for(const _ in h){const y=h[_],E=[];for(let x=0,v=y.length;x<v;x++){const w=y[x];let S;if(w.isInterleavedBufferAttribute){const A=i(e.data,w.data);S=new ls(A,w.itemSize,w.offset,w.normalized)}else{const A=to(w.type,w.array);S=new Pt(A,w.itemSize,w.normalized)}w.name!==void 0&&(S.name=w.name),E.push(S)}l.morphAttributes[_]=E}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let _=0,y=p.length;_!==y;++_){const E=p[_];l.addGroup(E.start,E.count,E.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const _=new U;m.center!==void 0&&_.fromArray(m.center),l.boundingSphere=new vi(_,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class eT extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?kf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new tr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?kf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new tr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new os().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new tu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new J_;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in xg?c=xg[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new ou;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=wa.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(d)}else return u.data?{data:to(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new Cd(t);s=new Ta(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const _=[];for(let y=0,E=m.length;y<E;y++){const x=m[y],v=c(x);v!==null&&(v instanceof HTMLImageElement?_.push(v):_.push(new ao(v.data,v.width,v.height)))}i[p.uuid]=new ts(_)}else{const _=c(p.url);i[p.uuid]=new ts(_)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:to(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Ta(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p],y=await s(_);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new ao(y.data,y.width,y.height)))}n[u.uuid]=new ts(d)}else{const d=await s(u.url);n[u.uuid]=new ts(d)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new Ca,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new ao:d=new Jt,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,tT)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],wg),d.wrapT=n(c.wrap[1],wg)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.encoding!==void 0&&(d.encoding=c.encoding),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,Tg)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,Tg)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const _=[];for(let y=0,E=m.length;y<E;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),_.push(n[x])}return _}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":l=new dd,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Le(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new $c(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new Qc(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":l=new un(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Pa(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new X_(e.color,e.intensity);break;case"DirectionalLight":l=new W_(e.color,e.intensity);break;case"PointLight":l=new G_(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new Y_(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new V_(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new H_(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new su().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),l=new d_(d,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),l=new dn(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,_=e.instanceMatrix,y=e.instanceColor;l=new p_(d,p,m),l.instanceMatrix=new ho(new Float32Array(_.array),16),y!==void 0&&(l.instanceColor=new ho(new Float32Array(y.array),y.itemSize));break;case"LOD":l=new f_;break;case"Line":l=new br(c(e.geometry),u(e.material));break;case"LineLoop":l=new m_(c(e.geometry),u(e.material));break;case"LineSegments":l=new Oi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new g_(c(e.geometry),u(e.material));break;case"Sprite":l=new h_(u(e.material));break;case"Group":l=new io;break;case"Bone":l=new md;break;default:l=new Et}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let _=0;_<m.length;_++)l.add(this.parseObject(m[_],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let _=0;_<m.length;_++){const y=m[_];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let _=0;_<m.length;_++){const y=m[_],E=l.getObjectByProperty("uuid",y.object);E!==void 0&&l.addLevel(E,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const tT={UVMapping:Yc,CubeReflectionMapping:wr,CubeRefractionMapping:Tr,EquirectangularReflectionMapping:la,EquirectangularRefractionMapping:ca,CubeUVReflectionMapping:po},wg={RepeatWrapping:ua,ClampToEdgeWrapping:Sn,MirroredRepeatWrapping:ha},Tg={NearestFilter:qt,NearestMipmapNearestFilter:kc,NearestMipmapLinearFilter:ia,LinearFilter:Zt,LinearMipmapNearestFilter:Zf,LinearMipmapLinearFilter:Ar};class nT extends Zn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=us.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){us.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Mc;class Ld{static getContext(){return Mc===void 0&&(Mc=new(window.AudioContext||window.webkitAudioContext)),Mc}static setContext(e){Mc=e}}class iT extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new tr(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);Ld.getContext().decodeAudioData(h,function(p){t(p)},c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}class rT extends su{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Le().set(e),s=new Le().set(t),l=new U(i.r,i.g,i.b),c=new U(s.r,s.g,s.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(l).add(c).multiplyScalar(u),this.sh.coefficients[1].copy(l).sub(c).multiplyScalar(h)}}class sT extends su{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Le().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const Ag=new ot,bg=new ot,Xr=new ot;class oT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new un,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new un,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Xr.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(rs*t.fov*.5)/t.zoom;let c,u;bg.elements[12]=-i,Ag.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,Xr.elements[0]=2*t.near/(u-c),Xr.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Xr),c=-l*t.aspect-s,u=l*t.aspect-s,Xr.elements[0]=2*t.near/(u-c),Xr.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Xr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(bg),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ag)}}class Id{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Rg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Rg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Rg(){return(typeof performance>"u"?Date:performance).now()}const Yr=new U,Cg=new Fn,aT=new U,qr=new U;class lT extends Et{constructor(){super(),this.type="AudioListener",this.context=Ld.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Id}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Yr,Cg,aT),qr.set(0,0,-1).applyQuaternion(Cg),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Yr.x,i),t.positionY.linearRampToValueAtTime(Yr.y,i),t.positionZ.linearRampToValueAtTime(Yr.z,i),t.forwardX.linearRampToValueAtTime(qr.x,i),t.forwardY.linearRampToValueAtTime(qr.y,i),t.forwardZ.linearRampToValueAtTime(qr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Yr.x,Yr.y,Yr.z),t.setOrientation(qr.x,qr.y,qr.z,n.x,n.y,n.z)}}class K_ extends Et{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Zr=new U,Pg=new Fn,cT=new U,Jr=new U;class uT extends K_{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Zr,Pg,cT),Jr.set(0,0,1).applyQuaternion(Pg);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Zr.x,n),t.positionY.linearRampToValueAtTime(Zr.y,n),t.positionZ.linearRampToValueAtTime(Zr.z,n),t.orientationX.linearRampToValueAtTime(Jr.x,n),t.orientationY.linearRampToValueAtTime(Jr.y,n),t.orientationZ.linearRampToValueAtTime(Jr.z,n)}else t.setPosition(Zr.x,Zr.y,Zr.z),t.setOrientation(Jr.x,Jr.y,Jr.z)}}class hT{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class j_{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Fn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Fn.multiplyQuaternionsFlat(e,l,e,t,e,n),Fn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const Ud="\\[\\]\\.:\\/",fT=new RegExp("["+Ud+"]","g"),Dd="[^"+Ud+"]",dT="[^"+Ud.replace("\\.","")+"]",pT=/((?:WC+[\/:])*)/.source.replace("WC",Dd),mT=/(WCOD+)?/.source.replace("WCOD",dT),gT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Dd),_T=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Dd),vT=new RegExp("^"+pT+mT+gT+_T+"$"),yT=["material","materials","bones","map"];class xT{constructor(e,t,n){const i=n||yt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class yt{constructor(e,t,n){this.path=t,this.parsedPath=n||yt.parseTrackName(t),this.node=yt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new yt.Composite(e,t,n):new yt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(fT,"")}static parseTrackName(e){const t=vT.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);yT.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=yt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}yt.Composite=xT;yt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};yt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};yt.prototype.GetterByBindingType=[yt.prototype._getValue_direct,yt.prototype._getValue_array,yt.prototype._getValue_arrayElement,yt.prototype._getValue_toArray];yt.prototype.SetterByBindingTypeAndVersioning=[[yt.prototype._setValue_direct,yt.prototype._setValue_direct_setNeedsUpdate,yt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_array,yt.prototype._setValue_array_setNeedsUpdate,yt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_arrayElement,yt.prototype._setValue_arrayElement_setNeedsUpdate,yt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_fromArray,yt.prototype._setValue_fromArray_setNeedsUpdate,yt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class MT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=qn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],_=m.uuid;let y=t[_];if(y===void 0){y=u++,t[_]=y,e.push(m);for(let E=0,x=l;E!==x;++E)s[E].push(new yt(m,n[E],i[E]))}else if(y<h){c=e[y];const E=--h,x=e[E];t[x.uuid]=y,e[y]=x,t[_]=E,e[E]=m;for(let v=0,w=l;v!==w;++v){const S=s[v],A=S[E];let R=S[y];S[y]=A,R===void 0&&(R=new yt(m,n[v],i[v])),S[E]=R}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const p=s++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let _=0,y=i;_!==y;++_){const E=n[_],x=E[p],v=E[d];E[d]=x,E[p]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<s){const m=--s,_=e[m],y=--l,E=e[y];t[_.uuid]=p,e[p]=_,t[E.uuid]=m,e[m]=E,e.pop();for(let x=0,v=i;x!==v;++x){const w=n[x],S=w[m],A=w[y];w[p]=S,w[m]=A,w.pop()}}else{const m=--l,_=e[m];m>0&&(t[_.uuid]=p),e[p]=_,e.pop();for(let y=0,E=i;y!==E;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=d,_=u.length;m!==_;++m){const y=u[m];p[m]=new yt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class Q_{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:$r,endingEnd:$r};for(let h=0;h!==l;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=D0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case td:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulateAdditive(c);break;case Zc:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===N0;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===U0){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=es,i.endingEnd=es):(e?i.endingStart=this.zeroSlopeAtStart?es:$r:i.endingStart=pa,t?i.endingEnd=this.zeroSlopeAtEnd?es:$r:i.endingEnd=pa)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const ST=new Float32Array(1);class ET extends nr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==s;++p){const m=i[p],_=m.name;let y=d[_];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,_));continue}const E=t&&t._propertyBindings[p].binding.parsedPath;y=new j_(yt.create(n,_,E),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,_),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new bd(new Float32Array(2),new Float32Array(2),1,ST),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?wa.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=Zc),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const d=new Q_(this,l,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?wa.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Nd{constructor(e){this.value=e}clone(){return new Nd(this.value.clone===void 0?this.value:this.value.clone())}}let wT=0;class TT extends nr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:wT++}),this.name="",this.usage=ma,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class AT extends eu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class bT{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class $_{constructor(e,t,n=0,i=1/0){this.ray=new mo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new ss,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Hf(e,this,n,t),n.sort(Lg),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Hf(e[i],this,n,t);return n.sort(Lg),n}}function Lg(r,e){return r.distance-e.distance}function Hf(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)Hf(i[s],e,t,!0)}}class RT{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Wt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class CT{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Ig=new fe;class PT{constructor(e=new fe(1/0,1/0),t=new fe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ig.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ig).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ug=new U,Sc=new U;class LT{constructor(e=new U,t=new U){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Ug.subVectors(e,this.start),Sc.subVectors(this.end,this.start);const n=Sc.dot(Sc);let s=Sc.dot(Ug)/n;return t&&(s=Wt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Dg=new U;class IT extends Et{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new mt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Be(i,3));const s=new Cn({fog:!1,toneMapped:!1});this.cone=new Oi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Dg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Dg),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const vr=new U,Ec=new ot,Yh=new ot;class UT extends Oi{constructor(e){const t=ev(e),n=new mt,i=[],s=[],l=new Le(0,0,1),c=new Le(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Be(i,3)),n.setAttribute("color",new Be(s,3));const u=new Cn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Yh.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Ec.multiplyMatrices(Yh,c.matrixWorld),vr.setFromMatrixPosition(Ec),i.setXYZ(l,vr.x,vr.y,vr.z),Ec.multiplyMatrices(Yh,c.parent.matrixWorld),vr.setFromMatrixPosition(Ec),i.setXYZ(l+1,vr.x,vr.y,vr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function ev(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,ev(r.children[t]));return e}class DT extends dn{constructor(e,t,n){const i=new xo(t,4,2),s=new Cr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const NT=new U,Ng=new Le,Fg=new Le;class FT extends Et{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new yo(t);i.rotateY(Math.PI*.5),this.material=new Cr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new Pt(l,3)),this.add(new dn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Ng.copy(this.light.color),Fg.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?Ng:Fg;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(NT.setFromMatrixPosition(this.light.matrixWorld).negate())}}class OT extends Oi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Le(n),i=new Le(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,_=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const E=m===s?n:i;E.toArray(h,_),_+=3,E.toArray(h,_),_+=3,E.toArray(h,_),_+=3,E.toArray(h,_),_+=3}const d=new mt;d.setAttribute("position",new Be(u,3)),d.setAttribute("color",new Be(h,3));const p=new Cn({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class BT extends Oi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Le(s),l=new Le(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),_=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(_,0,y);const E=p&1?s:l;u.push(E.r,E.g,E.b),u.push(E.r,E.g,E.b)}for(let p=0;p<n;p++){const m=p&1?s:l,_=e-e/n*p;for(let y=0;y<i;y++){let E=y/i*(Math.PI*2),x=Math.sin(E)*_,v=Math.cos(E)*_;c.push(x,0,v),u.push(m.r,m.g,m.b),E=(y+1)/i*(Math.PI*2),x=Math.sin(E)*_,v=Math.cos(E)*_,c.push(x,0,v),u.push(m.r,m.g,m.b)}}const h=new mt;h.setAttribute("position",new Be(c,3)),h.setAttribute("color",new Be(u,3));const d=new Cn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Og=new U,wc=new U,Bg=new U;class zT extends Et{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new mt;i.setAttribute("position",new Be([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Cn({fog:!1,toneMapped:!1});this.lightPlane=new br(i,s),this.add(this.lightPlane),i=new mt,i.setAttribute("position",new Be([0,0,0,0,0,1],3)),this.targetLine=new br(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Og.setFromMatrixPosition(this.light.matrixWorld),wc.setFromMatrixPosition(this.light.target.matrixWorld),Bg.subVectors(wc,Og),this.lightPlane.lookAt(wc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(wc),this.targetLine.scale.z=Bg.length()}}const Tc=new U,Gt=new Ra;class kT extends Oi{constructor(e){const t=new mt,n=new Cn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,E){u(y),u(E)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new Be(i,3)),t.setAttribute("color",new Be(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Le(16755200),d=new Le(16711680),p=new Le(43775),m=new Le(16777215),_=new Le(3355443);this.setColors(h,d,p,m,_)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Gt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Yt("c",t,e,Gt,0,0,-1),Yt("t",t,e,Gt,0,0,1),Yt("n1",t,e,Gt,-n,-i,-1),Yt("n2",t,e,Gt,n,-i,-1),Yt("n3",t,e,Gt,-n,i,-1),Yt("n4",t,e,Gt,n,i,-1),Yt("f1",t,e,Gt,-n,-i,1),Yt("f2",t,e,Gt,n,-i,1),Yt("f3",t,e,Gt,-n,i,1),Yt("f4",t,e,Gt,n,i,1),Yt("u1",t,e,Gt,n*.7,i*1.1,-1),Yt("u2",t,e,Gt,-n*.7,i*1.1,-1),Yt("u3",t,e,Gt,0,i*2,-1),Yt("cf1",t,e,Gt,-n,0,1),Yt("cf2",t,e,Gt,n,0,1),Yt("cf3",t,e,Gt,0,-i,1),Yt("cf4",t,e,Gt,0,i,1),Yt("cn1",t,e,Gt,-n,0,-1),Yt("cn2",t,e,Gt,n,0,-1),Yt("cn3",t,e,Gt,0,-i,-1),Yt("cn4",t,e,Gt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Yt(r,e,t,n,i,s,l){Tc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],Tc.x,Tc.y,Tc.z)}}const Ac=new Fi;class HT extends Oi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new mt;s.setIndex(new Pt(n,1)),s.setAttribute("position",new Pt(i,3)),super(s,new Cn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Ac.setFromObject(this.object),Ac.isEmpty())return;const t=Ac.min,n=Ac.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class VT extends Oi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new mt;s.setIndex(new Pt(n,1)),s.setAttribute("position",new Be(i,3)),super(s,new Cn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class GT extends br{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new mt;l.setAttribute("position",new Be(s,3)),l.computeBoundingSphere(),super(l,new Cn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new mt;u.setAttribute("position",new Be(c,3)),u.computeBoundingSphere(),this.add(new dn(u,new Cr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const zg=new U;let bc,qh;class WT extends Et{constructor(e=new U(0,0,1),t=new U(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",bc===void 0&&(bc=new mt,bc.setAttribute("position",new Be([0,0,0,0,1,0],3)),qh=new hs(0,.5,1,5,1),qh.translate(0,-.5,0)),this.position.copy(t),this.line=new br(bc,new Cn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new dn(qh,new Cr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{zg.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(zg,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class XT extends Oi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new mt;i.setAttribute("position",new Be(t,3)),i.setAttribute("color",new Be(n,3));const s=new Cn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Le,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class YT{constructor(){this.type="ShapePath",this.color=new Le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new va,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const w=[];for(let S=0,A=v.length;S<A;S++){const R=v[S],C=new os;C.curves=R.curves,w.push(C)}return w}function n(v,w){const S=w.length;let A=!1;for(let R=S-1,C=0;C<S;R=C++){let N=w[R],O=w[C],b=O.x-N.x,L=O.y-N.y;if(Math.abs(L)>Number.EPSILON){if(L<0&&(N=w[C],b=-b,O=w[R],L=-L),v.y<N.y||v.y>O.y)continue;if(v.y===N.y){if(v.x===N.x)return!0}else{const z=L*(v.x-N.x)-b*(v.y-N.y);if(z===0)return!0;if(z<0)continue;A=!A}}else{if(v.y!==N.y)continue;if(O.x<=v.x&&v.x<=N.x||N.x<=v.x&&v.x<=O.x)return!0}}return A}const i=Di.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new os,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const p=[],m=[];let _=[],y=0,E;m[y]=void 0,_[y]=[];for(let v=0,w=s.length;v<w;v++)c=s[v],E=c.getPoints(),l=i(E),l=e?!l:l,l?(!d&&m[y]&&y++,m[y]={s:new os,p:E},m[y].s.curves=c.curves,d&&y++,_[y]=[]):_[y].push({h:c,p:E[0]});if(!m[0])return t(s);if(m.length>1){let v=!1,w=0;for(let S=0,A=m.length;S<A;S++)p[S]=[];for(let S=0,A=m.length;S<A;S++){const R=_[S];for(let C=0;C<R.length;C++){const N=R[C];let O=!0;for(let b=0;b<m.length;b++)n(N.p,m[b].p)&&(S!==b&&w++,O?(O=!1,p[b].push(N)):v=!0);O&&p[S].push(N)}}w>0&&v===!1&&(_=p)}let x;for(let v=0,w=m.length;v<w;v++){u=m[v].s,h.push(u),x=_[v];for(let S=0,A=x.length;S<A;S++)u.holes.push(x[S].h)}return h}}class qT extends Pr{constructor(e,t,n,i,s,l){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,s,l)}}class ZT extends La{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class JT extends Ia{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class KT extends Ua{constructor(e,t,n,i,s,l,c){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,s,l,c)}}class jT extends hs{constructor(e,t,n,i,s,l,c,u){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,s,l,c,u)}}class QT extends Da{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class $T extends Na{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class eA extends Fa{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class tA extends vo{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class nA extends yo{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class iA extends go{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class rA extends ir{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class sA extends Oa{constructor(e,t,n,i,s,l){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,s,l)}}class oA extends Ba{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class aA extends xo{constructor(e,t,n,i,s,l,c){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,s,l,c)}}class lA extends za{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class cA extends ka{constructor(e,t,n,i,s){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,s)}}class uA extends Ha{constructor(e,t,n,i,s,l){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,s,l)}}class hA extends Va{constructor(e,t,n,i,s){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,s)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Wc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Wc);const BA=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:qf,AddEquation:jr,AddOperation:y0,AdditiveAnimationBlendMode:td,AdditiveBlending:rf,AlphaFormat:A0,AlwaysCompare:q0,AlwaysDepth:f0,AlwaysStencilFunc:z0,AmbientLight:X_,AmbientLightProbe:sT,AnimationAction:Q_,AnimationClip:wa,AnimationLoader:Yw,AnimationMixer:ET,AnimationObjectGroup:MT,AnimationUtils:Vw,ArcCurve:__,ArrayCamera:a_,ArrowHelper:WT,Audio:K_,AudioAnalyser:hT,AudioContext:Ld,AudioListener:lT,AudioLoader:iT,AxesHelper:XT,BackSide:Rn,BasicDepthPacking:F0,BasicShadowMap:Qg,Bone:md,BooleanKeyframeTrack:fs,Box2:PT,Box3:Fi,Box3Helper:VT,BoxBufferGeometry:qT,BoxGeometry:Pr,BoxHelper:HT,BufferAttribute:Pt,BufferGeometry:mt,BufferGeometryLoader:J_,ByteType:w0,Cache:us,Camera:Ra,CameraHelper:kT,CanvasTexture:fw,CapsuleBufferGeometry:ZT,CapsuleGeometry:La,CatmullRomCurve3:v_,CineonToneMapping:S0,CircleBufferGeometry:JT,CircleGeometry:Ia,ClampToEdgeWrapping:Sn,Clock:Id,Color:Le,ColorKeyframeTrack:Rd,ColorManagement:ri,CompressedArrayTexture:hw,CompressedTexture:_d,CompressedTextureLoader:qw,ConeBufferGeometry:KT,ConeGeometry:Ua,CubeCamera:$0,CubeReflectionMapping:wr,CubeRefractionMapping:Tr,CubeTexture:Ca,CubeTextureLoader:Zw,CubeUVReflectionMapping:po,CubicBezierCurve:yd,CubicBezierCurve3:y_,CubicInterpolant:O_,CullFaceBack:nf,CullFaceFront:jg,CullFaceFrontBack:ly,CullFaceNone:Kg,Curve:yi,CurvePath:M_,CustomBlending:$g,CustomToneMapping:E0,CylinderBufferGeometry:jT,CylinderGeometry:hs,Cylindrical:CT,Data3DTexture:od,DataArrayTexture:Jc,DataTexture:ao,DataTextureLoader:Jw,DataUtils:Mx,DecrementStencilOp:xy,DecrementWrapStencilOp:Sy,DefaultLoadingManager:k_,DepthFormat:Mr,DepthStencilFormat:as,DepthTexture:l_,DirectionalLight:W_,DirectionalLightHelper:zT,DiscreteInterpolant:B_,DisplayP3ColorSpace:id,DodecahedronBufferGeometry:QT,DodecahedronGeometry:Da,DoubleSide:Pi,DstAlphaFactor:o0,DstColorFactor:l0,DynamicCopyUsage:Oy,DynamicDrawUsage:Ly,DynamicReadUsage:Dy,EdgesGeometry:S_,EllipseCurve:nu,EqualCompare:V0,EqualDepth:p0,EqualStencilFunc:Ay,EquirectangularReflectionMapping:la,EquirectangularRefractionMapping:ca,Euler:ba,EventDispatcher:nr,ExtrudeBufferGeometry:$T,ExtrudeGeometry:Na,FileLoader:tr,Float16BufferAttribute:bx,Float32BufferAttribute:Be,Float64BufferAttribute:Rx,FloatType:Li,Fog:$c,FogExp2:Qc,FramebufferTexture:uw,FrontSide:er,Frustum:Kc,GLBufferAttribute:bT,GLSL1:zy,GLSL3:If,GreaterCompare:W0,GreaterDepth:g0,GreaterEqualCompare:Y0,GreaterEqualDepth:m0,GreaterEqualStencilFunc:Py,GreaterStencilFunc:Ry,GridHelper:OT,Group:io,HalfFloatType:lo,HemisphereLight:H_,HemisphereLightHelper:FT,HemisphereLightProbe:rT,IcosahedronBufferGeometry:eA,IcosahedronGeometry:Fa,ImageBitmapLoader:nT,ImageLoader:Ta,ImageUtils:sd,IncrementStencilOp:yy,IncrementWrapStencilOp:My,InstancedBufferAttribute:ho,InstancedBufferGeometry:Z_,InstancedInterleavedBuffer:AT,InstancedMesh:p_,Int16BufferAttribute:Tx,Int32BufferAttribute:Ax,Int8BufferAttribute:Sx,IntType:Jf,InterleavedBuffer:eu,InterleavedBufferAttribute:ls,Interpolant:Ga,InterpolateDiscrete:fa,InterpolateLinear:da,InterpolateSmooth:Nc,InvertStencilOp:Ey,KeepStencilOp:Fc,KeyframeTrack:xi,LOD:f_,LatheBufferGeometry:tA,LatheGeometry:vo,Layers:ss,LessCompare:H0,LessDepth:d0,LessEqualCompare:G0,LessEqualDepth:zc,LessEqualStencilFunc:by,LessStencilFunc:Ty,Light:Lr,LightProbe:su,Line:br,Line3:LT,LineBasicMaterial:Cn,LineCurve:iu,LineCurve3:x_,LineDashedMaterial:N_,LineLoop:m_,LineSegments:Oi,LinearEncoding:nd,LinearFilter:Zt,LinearInterpolant:bd,LinearMipMapLinearFilter:dy,LinearMipMapNearestFilter:fy,LinearMipmapLinearFilter:Ar,LinearMipmapNearestFilter:Zf,LinearSRGBColorSpace:gi,LinearToneMapping:x0,Loader:Zn,LoaderUtils:kf,LoadingManager:Cd,LoopOnce:U0,LoopPingPong:N0,LoopRepeat:D0,LuminanceAlphaFormat:R0,LuminanceFormat:b0,MOUSE:oy,Material:En,MaterialLoader:ou,MathUtils:$y,Matrix3:ht,Matrix4:ot,MaxEquation:lf,Mesh:dn,MeshBasicMaterial:Cr,MeshDepthMaterial:ud,MeshDistanceMaterial:hd,MeshLambertMaterial:U_,MeshMatcapMaterial:D_,MeshNormalMaterial:I_,MeshPhongMaterial:P_,MeshPhysicalMaterial:C_,MeshStandardMaterial:wd,MeshToonMaterial:L_,MinEquation:af,MirroredRepeatWrapping:ha,MixOperation:v0,MultiplyBlending:of,MultiplyOperation:Aa,NearestFilter:qt,NearestMipMapLinearFilter:hy,NearestMipMapNearestFilter:uy,NearestMipmapLinearFilter:ia,NearestMipmapNearestFilter:kc,NeverCompare:k0,NeverDepth:h0,NeverStencilFunc:wy,NoBlending:$i,NoColorSpace:Er,NoToneMapping:mi,NormalAnimationBlendMode:Zc,NormalBlending:is,NotEqualCompare:X0,NotEqualDepth:_0,NotEqualStencilFunc:Cy,NumberKeyframeTrack:Sa,Object3D:Et,ObjectLoader:eT,ObjectSpaceNormalMap:B0,OctahedronBufferGeometry:nA,OctahedronGeometry:yo,OneFactor:i0,OneMinusDstAlphaFactor:a0,OneMinusDstColorFactor:c0,OneMinusSrcAlphaFactor:Yf,OneMinusSrcColorFactor:s0,OrthographicCamera:Pa,PCFShadowMap:Xc,PCFSoftShadowMap:na,PMREMGenerator:Df,Path:va,PerspectiveCamera:un,Plane:yr,PlaneBufferGeometry:iA,PlaneGeometry:go,PlaneHelper:GT,PointLight:G_,PointLightHelper:DT,Points:g_,PointsMaterial:gd,PolarGridHelper:BT,PolyhedronBufferGeometry:rA,PolyhedronGeometry:ir,PositionalAudio:uT,PropertyBinding:yt,PropertyMixer:j_,QuadraticBezierCurve:xd,QuadraticBezierCurve3:Md,Quaternion:Fn,QuaternionKeyframeTrack:Mo,QuaternionLinearInterpolant:z_,RED_GREEN_RGTC2_Format:Pf,RED_RGTC1_Format:I0,REVISION:Wc,RGBADepthPacking:O0,RGBAFormat:Nn,RGBAIntegerFormat:ed,RGBA_ASTC_10x10_Format:Af,RGBA_ASTC_10x5_Format:Ef,RGBA_ASTC_10x6_Format:wf,RGBA_ASTC_10x8_Format:Tf,RGBA_ASTC_12x10_Format:bf,RGBA_ASTC_12x12_Format:Rf,RGBA_ASTC_4x4_Format:mf,RGBA_ASTC_5x4_Format:gf,RGBA_ASTC_5x5_Format:_f,RGBA_ASTC_6x5_Format:vf,RGBA_ASTC_6x6_Format:yf,RGBA_ASTC_8x5_Format:xf,RGBA_ASTC_8x6_Format:Mf,RGBA_ASTC_8x8_Format:Sf,RGBA_BPTC_Format:Dc,RGBA_ETC2_EAC_Format:pf,RGBA_PVRTC_2BPPV1_Format:ff,RGBA_PVRTC_4BPPV1_Format:hf,RGBA_S3TC_DXT1_Format:Lc,RGBA_S3TC_DXT3_Format:Ic,RGBA_S3TC_DXT5_Format:Uc,RGB_ETC1_Format:L0,RGB_ETC2_Format:df,RGB_PVRTC_2BPPV1_Format:uf,RGB_PVRTC_4BPPV1_Format:cf,RGB_S3TC_DXT1_Format:Pc,RGFormat:P0,RGIntegerFormat:$f,RawShaderMaterial:R_,Ray:mo,Raycaster:$_,RectAreaLight:Y_,RedFormat:C0,RedIntegerFormat:Qf,ReinhardToneMapping:M0,RepeatWrapping:ua,ReplaceStencilOp:vy,ReverseSubtractEquation:t0,RingBufferGeometry:sA,RingGeometry:Oa,SIGNED_RED_GREEN_RGTC2_Format:Lf,SIGNED_RED_RGTC1_Format:Cf,SRGBColorSpace:at,Scene:dd,ShaderChunk:ut,ShaderLib:pi,ShaderMaterial:Ni,ShadowMaterial:b_,Shape:os,ShapeBufferGeometry:oA,ShapeGeometry:Ba,ShapePath:YT,ShapeUtils:Di,ShortType:T0,Skeleton:tu,SkeletonHelper:UT,SkinnedMesh:d_,Source:ts,Sphere:vi,SphereBufferGeometry:aA,SphereGeometry:xo,Spherical:RT,SphericalHarmonics3:q_,SplineCurve:Sd,SpotLight:V_,SpotLightHelper:IT,Sprite:h_,SpriteMaterial:pd,SrcAlphaFactor:Xf,SrcAlphaSaturateFactor:u0,SrcColorFactor:r0,StaticCopyUsage:Fy,StaticDrawUsage:ma,StaticReadUsage:Uy,StereoCamera:oT,StreamCopyUsage:By,StreamDrawUsage:Iy,StreamReadUsage:Ny,StringKeyframeTrack:ds,SubtractEquation:e0,SubtractiveBlending:sf,TOUCH:ay,TangentSpaceNormalMap:Rr,TetrahedronBufferGeometry:lA,TetrahedronGeometry:za,Texture:Jt,TextureLoader:Kw,TorusBufferGeometry:cA,TorusGeometry:ka,TorusKnotBufferGeometry:uA,TorusKnotGeometry:Ha,Triangle:Dn,TriangleFanDrawMode:gy,TriangleStripDrawMode:my,TrianglesDrawMode:py,TubeBufferGeometry:hA,TubeGeometry:Va,TwoPassDoubleSide:cy,UVMapping:Yc,Uint16BufferAttribute:ad,Uint32BufferAttribute:ld,Uint8BufferAttribute:Ex,Uint8ClampedBufferAttribute:wx,Uniform:Nd,UniformsGroup:TT,UniformsLib:Me,UniformsUtils:Q0,UnsignedByteType:Ui,UnsignedInt248Type:xr,UnsignedIntType:Qi,UnsignedShort4444Type:Kf,UnsignedShort5551Type:jf,UnsignedShortType:qc,VSMShadowMap:di,Vector2:fe,Vector3:U,Vector4:At,VectorKeyframeTrack:Ea,VideoTexture:cw,WebGL1Renderer:c_,WebGL3DRenderTarget:ux,WebGLArrayRenderTarget:cx,WebGLCoordinateSystem:Ii,WebGLCubeRenderTarget:e_,WebGLMultipleRenderTargets:hx,WebGLRenderTarget:_i,WebGLRenderer:fd,WebGLUtils:o_,WebGPUCoordinateSystem:ga,WireframeGeometry:A_,WrapAroundEnding:pa,ZeroCurvatureEnding:$r,ZeroFactor:n0,ZeroSlopeEnding:es,ZeroStencilOp:_y,_SRGBAFormat:Hc,sRGBEncoding:Sr},Symbol.toStringTag,{value:"Module"}));function kg(){return kg=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},kg.apply(null,arguments)}var tv={exports:{}},ps={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ps.ConcurrentRoot=1;ps.ContinuousEventPriority=4;ps.DefaultEventPriority=16;ps.DiscreteEventPriority=1;ps.IdleEventPriority=536870912;ps.LegacyRoot=0;tv.exports=ps;var so=tv.exports;function fA(r){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(_=>_(e,m))}},i=()=>e,s=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function _(){const y=d(e);if(!p(m,y)){const E=m;h(m=y,E)}}return t.add(_),()=>t.delete(_)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?s(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const dA=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),Hg=dA?nn.useEffect:nn.useLayoutEffect;function pA(r){const e=typeof r=="function"?fA(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=nn.useReducer(x=>x+1,0),l=e.getState(),c=nn.useRef(l),u=nn.useRef(n),h=nn.useRef(i),d=nn.useRef(!1),p=nn.useRef();p.current===void 0&&(p.current=n(l));let m,_=!1;(c.current!==l||u.current!==n||h.current!==i||d.current)&&(m=n(l),_=!i(p.current,m)),Hg(()=>{_&&(p.current=m),c.current=l,u.current=n,h.current=i,d.current=!1});const y=nn.useRef(l);Hg(()=>{const x=()=>{try{const w=e.getState(),S=u.current(w);h.current(p.current,S)||(c.current=w,p.current=S,s())}catch{d.current=!0,s()}},v=e.subscribe(x);return e.getState()!==y.current&&x(),v},[]);const E=_?m:p.current;return nn.useDebugValue(E),E};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var nv={exports:{}},iv={exports:{}},rv={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(V,Z){var J=V.length;V.push(Z);e:for(;0<J;){var he=J-1>>>1,X=V[he];if(0<i(X,Z))V[he]=Z,V[J]=X,J=he;else break e}}function t(V){return V.length===0?null:V[0]}function n(V){if(V.length===0)return null;var Z=V[0],J=V.pop();if(J!==Z){V[0]=J;e:for(var he=0,X=V.length,le=X>>>1;he<le;){var de=2*(he+1)-1,Se=V[de],Te=de+1,Ie=V[Te];if(0>i(Se,J))Te<X&&0>i(Ie,Se)?(V[he]=Ie,V[Te]=J,he=Te):(V[he]=Se,V[de]=J,he=de);else if(Te<X&&0>i(Ie,J))V[he]=Ie,V[Te]=J,he=Te;else break e}}return Z}function i(V,Z){var J=V.sortIndex-Z.sortIndex;return J!==0?J:V.id-Z.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],d=1,p=null,m=3,_=!1,y=!1,E=!1,x=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function S(V){for(var Z=t(h);Z!==null;){if(Z.callback===null)n(h);else if(Z.startTime<=V)n(h),Z.sortIndex=Z.expirationTime,e(u,Z);else break;Z=t(h)}}function A(V){if(E=!1,S(V),!y)if(t(u)!==null)y=!0,ce(R);else{var Z=t(h);Z!==null&&ie(A,Z.startTime-V)}}function R(V,Z){y=!1,E&&(E=!1,v(O),O=-1),_=!0;var J=m;try{for(S(Z),p=t(u);p!==null&&(!(p.expirationTime>Z)||V&&!z());){var he=p.callback;if(typeof he=="function"){p.callback=null,m=p.priorityLevel;var X=he(p.expirationTime<=Z);Z=r.unstable_now(),typeof X=="function"?p.callback=X:p===t(u)&&n(u),S(Z)}else n(u);p=t(u)}if(p!==null)var le=!0;else{var de=t(h);de!==null&&ie(A,de.startTime-Z),le=!1}return le}finally{p=null,m=J,_=!1}}var C=!1,N=null,O=-1,b=5,L=-1;function z(){return!(r.unstable_now()-L<b)}function te(){if(N!==null){var V=r.unstable_now();L=V;var Z=!0;try{Z=N(!0,V)}finally{Z?W():(C=!1,N=null)}}else C=!1}var W;if(typeof w=="function")W=function(){w(te)};else if(typeof MessageChannel<"u"){var q=new MessageChannel,Q=q.port2;q.port1.onmessage=te,W=function(){Q.postMessage(null)}}else W=function(){x(te,0)};function ce(V){N=V,C||(C=!0,W())}function ie(V,Z){O=x(function(){V(r.unstable_now())},Z)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(V){V.callback=null},r.unstable_continueExecution=function(){y||_||(y=!0,ce(R))},r.unstable_forceFrameRate=function(V){0>V||125<V?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<V?Math.floor(1e3/V):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(V){switch(m){case 1:case 2:case 3:var Z=3;break;default:Z=m}var J=m;m=Z;try{return V()}finally{m=J}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(V,Z){switch(V){case 1:case 2:case 3:case 4:case 5:break;default:V=3}var J=m;m=V;try{return Z()}finally{m=J}},r.unstable_scheduleCallback=function(V,Z,J){var he=r.unstable_now();switch(typeof J=="object"&&J!==null?(J=J.delay,J=typeof J=="number"&&0<J?he+J:he):J=he,V){case 1:var X=-1;break;case 2:X=250;break;case 5:X=1073741823;break;case 4:X=1e4;break;default:X=5e3}return X=J+X,V={id:d++,callback:Z,priorityLevel:V,startTime:J,expirationTime:X,sortIndex:-1},J>he?(V.sortIndex=J,e(h,V),t(u)===null&&V===t(h)&&(E?(v(O),O=-1):E=!0,ie(A,J-he))):(V.sortIndex=X,e(u,V),y||_||(y=!0,ce(R))),V},r.unstable_shouldYield=z,r.unstable_wrapCallback=function(V){var Z=m;return function(){var J=m;m=Z;try{return V.apply(this,arguments)}finally{m=J}}}})(rv);iv.exports=rv;var Vf=iv.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var mA=function(e){var t={},n=nn,i=Vf,s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,f=1;f<arguments.length;f++)a+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),y=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),S=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),R=Symbol.iterator;function C(o){return o===null||typeof o!="object"?null:(o=R&&o[R]||o["@@iterator"],typeof o=="function"?o:null)}function N(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case v:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case _:return(o._context.displayName||"Context")+".Provider";case E:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case w:return a=o.displayName||null,a!==null?a:N(o.type)||"Memo";case S:a=o._payload,o=o._init;try{return N(o(a))}catch{}}return null}function O(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return N(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function b(o){var a=o,f=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,a.flags&4098&&(f=a.return),o=a.return;while(o)}return a.tag===3?f:null}function L(o){if(b(o)!==o)throw Error(l(188))}function z(o){var a=o.alternate;if(!a){if(a=b(o),a===null)throw Error(l(188));return a!==o?null:o}for(var f=o,g=a;;){var M=f.return;if(M===null)break;var T=M.alternate;if(T===null){if(g=M.return,g!==null){f=g;continue}break}if(M.child===T.child){for(T=M.child;T;){if(T===f)return L(M),o;if(T===g)return L(M),a;T=T.sibling}throw Error(l(188))}if(f.return!==g.return)f=M,g=T;else{for(var D=!1,H=M.child;H;){if(H===f){D=!0,f=M,g=T;break}if(H===g){D=!0,g=M,f=T;break}H=H.sibling}if(!D){for(H=T.child;H;){if(H===f){D=!0,f=T,g=M;break}if(H===g){D=!0,g=T,f=M;break}H=H.sibling}if(!D)throw Error(l(189))}}if(f.alternate!==g)throw Error(l(190))}if(f.tag!==3)throw Error(l(188));return f.stateNode.current===f?o:a}function te(o){return o=z(o),o!==null?W(o):null}function W(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=W(o);if(a!==null)return a;o=o.sibling}return null}function q(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=q(o);if(a!==null)return a}o=o.sibling}return null}var Q=Array.isArray,ce=e.getPublicInstance,ie=e.getRootHostContext,V=e.getChildHostContext,Z=e.prepareForCommit,J=e.resetAfterCommit,he=e.createInstance,X=e.appendInitialChild,le=e.finalizeInitialChildren,de=e.prepareUpdate,Se=e.shouldSetTextContent,Te=e.createTextInstance,Ie=e.scheduleTimeout,nt=e.cancelTimeout,Je=e.noTimeout,vt=e.isPrimaryRenderer,Ge=e.supportsMutation,B=e.supportsPersistence,me=e.supportsHydration,ue=e.getInstanceFromNode,ye=e.preparePortalMount,pe=e.getCurrentEventPriority,ze=e.detachDeletedInstance,Pe=e.supportsMicrotasks,Ue=e.scheduleMicrotask,Ke=e.supportsTestSelectors,gt=e.findFiberRoot,Nt=e.getBoundingRect,F=e.getTextContent,P=e.isHiddenSubtree,re=e.matchAccessibilityRole,ge=e.setFocusIfFocusable,_e=e.setupIntersectionObserver,Ee=e.appendChild,ke=e.appendChildToContainer,we=e.commitTextUpdate,ae=e.commitMount,We=e.commitUpdate,Xe=e.insertBefore,Ze=e.insertInContainerBefore,Fe=e.removeChild,Oe=e.removeChildFromContainer,lt=e.resetTextContent,bt=e.hideInstance,k=e.hideTextInstance,Ae=e.unhideInstance,$=e.unhideTextInstance,xe=e.clearContainer,Re=e.cloneInstance,_t=e.createContainerChildSet,Lt=e.appendChildToContainerChildSet,zt=e.finalizeContainerChildren,Mi=e.replaceContainerChildren,It=e.cloneHiddenInstance,On=e.cloneHiddenTextInstance,hn=e.canHydrateInstance,Wa=e.canHydrateTextInstance,Xa=e.canHydrateSuspenseInstance,Ya=e.isSuspenseInstancePending,rr=e.isSuspenseInstanceFallback,qa=e.registerSuspenseInstanceRetry,Si=e.getNextHydratableSibling,Za=e.getFirstHydratableChild,lu=e.getFirstHydratableChildWithinContainer,cu=e.getFirstHydratableChildWithinSuspenseInstance,uu=e.hydrateInstance,I=e.hydrateTextInstance,j=e.hydrateSuspenseInstance,se=e.getNextHydratableInstanceAfterSuspenseInstance,Y=e.commitHydratedContainer,oe=e.commitHydratedSuspenseInstance,De=e.clearSuspenseBoundary,Ye=e.clearSuspenseBoundaryFromContainer,je=e.shouldDeleteUnhydratedTailInstances,Qe=e.didNotMatchHydratedContainerTextInstance,dt=e.didNotMatchHydratedTextInstance,$e;function et(o){if($e===void 0)try{throw Error()}catch(f){var a=f.stack.trim().match(/\n( *(at )?)/);$e=a&&a[1]||""}return`
`+$e+o}var wt=!1;function Ut(o,a){if(!o||wt)return"";wt=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(ve){var g=ve}Reflect.construct(o,[],a)}else{try{a.call()}catch(ve){g=ve}o.call(a.prototype)}else{try{throw Error()}catch(ve){g=ve}o()}}catch(ve){if(ve&&g&&typeof ve.stack=="string"){for(var M=ve.stack.split(`
`),T=g.stack.split(`
`),D=M.length-1,H=T.length-1;1<=D&&0<=H&&M[D]!==T[H];)H--;for(;1<=D&&0<=H;D--,H--)if(M[D]!==T[H]){if(D!==1||H!==1)do if(D--,H--,0>H||M[D]!==T[H]){var ne=`
`+M[D].replace(" at new "," at ");return o.displayName&&ne.includes("<anonymous>")&&(ne=ne.replace("<anonymous>",o.displayName)),ne}while(1<=D&&0<=H);break}}}finally{wt=!1,Error.prepareStackTrace=f}return(o=o?o.displayName||o.name:"")?et(o):""}var Bn=Object.prototype.hasOwnProperty,zn=[],Rt=-1;function it(o){return{current:o}}function Tt(o){0>Rt||(o.current=zn[Rt],zn[Rt]=null,Rt--)}function tt(o,a){Rt++,zn[Rt]=o.current,o.current=a}var pn={},en=it(pn),Kt=it(!1),oi=pn;function kt(o,a){var f=o.type.contextTypes;if(!f)return pn;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===a)return g.__reactInternalMemoizedMaskedChildContext;var M={},T;for(T in f)M[T]=a[T];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=M),M}function Ht(o){return o=o.childContextTypes,o!=null}function sr(){Tt(Kt),Tt(en)}function mn(o,a,f){if(en.current!==pn)throw Error(l(168));tt(en,a),tt(Kt,f)}function ms(o,a,f){var g=o.stateNode;if(a=a.childContextTypes,typeof g.getChildContext!="function")return f;g=g.getChildContext();for(var M in g)if(!(M in a))throw Error(l(108,O(o)||"Unknown",M));return s({},f,g)}function gs(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||pn,oi=en.current,tt(en,o),tt(Kt,Kt.current),!0}function So(o,a,f){var g=o.stateNode;if(!g)throw Error(l(169));f?(o=ms(o,a,oi),g.__reactInternalMemoizedMergedChildContext=o,Tt(Kt),Tt(en),tt(en,o)):Tt(Kt),tt(Kt,f)}var ai=Math.clz32?Math.clz32:gv,pv=Math.log,mv=Math.LN2;function gv(o){return o>>>=0,o===0?32:31-(pv(o)/mv|0)|0}var Ja=64,Ka=4194304;function Eo(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function ja(o,a){var f=o.pendingLanes;if(f===0)return 0;var g=0,M=o.suspendedLanes,T=o.pingedLanes,D=f&268435455;if(D!==0){var H=D&~M;H!==0?g=Eo(H):(T&=D,T!==0&&(g=Eo(T)))}else D=f&~M,D!==0?g=Eo(D):T!==0&&(g=Eo(T));if(g===0)return 0;if(a!==0&&a!==g&&!(a&M)&&(M=g&-g,T=a&-a,M>=T||M===16&&(T&4194240)!==0))return a;if(g&4&&(g|=f&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=g;0<a;)f=31-ai(a),M=1<<f,g|=o[f],a&=~M;return g}function _v(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function vv(o,a){for(var f=o.suspendedLanes,g=o.pingedLanes,M=o.expirationTimes,T=o.pendingLanes;0<T;){var D=31-ai(T),H=1<<D,ne=M[D];ne===-1?(!(H&f)||H&g)&&(M[D]=_v(H,a)):ne<=a&&(o.expiredLanes|=H),T&=~H}}function hu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function fu(o){for(var a=[],f=0;31>f;f++)a.push(o);return a}function wo(o,a,f){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-ai(a),o[a]=f}function yv(o,a){var f=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<f;){var M=31-ai(f),T=1<<M;a[M]=0,g[M]=-1,o[M]=-1,f&=~T}}function du(o,a){var f=o.entangledLanes|=a;for(o=o.entanglements;f;){var g=31-ai(f),M=1<<g;M&a|o[g]&a&&(o[g]|=a),f&=~M}}var xt=0;function Od(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var pu=i.unstable_scheduleCallback,Bd=i.unstable_cancelCallback,xv=i.unstable_shouldYield,Mv=i.unstable_requestPaint,on=i.unstable_now,mu=i.unstable_ImmediatePriority,Sv=i.unstable_UserBlockingPriority,gu=i.unstable_NormalPriority,Ev=i.unstable_IdlePriority,Qa=null,Ei=null;function wv(o){if(Ei&&typeof Ei.onCommitFiberRoot=="function")try{Ei.onCommitFiberRoot(Qa,o,void 0,(o.current.flags&128)===128)}catch{}}function Tv(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var wi=typeof Object.is=="function"?Object.is:Tv,Bi=null,$a=!1,_u=!1;function zd(o){Bi===null?Bi=[o]:Bi.push(o)}function Av(o){$a=!0,zd(o)}function Ti(){if(!_u&&Bi!==null){_u=!0;var o=0,a=xt;try{var f=Bi;for(xt=1;o<f.length;o++){var g=f[o];do g=g(!0);while(g!==null)}Bi=null,$a=!1}catch(M){throw Bi!==null&&(Bi=Bi.slice(o+1)),pu(mu,Ti),M}finally{xt=a,_u=!1}}return null}var bv=c.ReactCurrentBatchConfig;function el(o,a){if(wi(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var f=Object.keys(o),g=Object.keys(a);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var M=f[g];if(!Bn.call(a,M)||!wi(o[M],a[M]))return!1}return!0}function Rv(o){switch(o.tag){case 5:return et(o.type);case 16:return et("Lazy");case 13:return et("Suspense");case 19:return et("SuspenseList");case 0:case 2:case 15:return o=Ut(o.type,!1),o;case 11:return o=Ut(o.type.render,!1),o;case 1:return o=Ut(o.type,!0),o;default:return""}}function li(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var f in o)a[f]===void 0&&(a[f]=o[f]);return a}return a}var tl=it(null),nl=null,_s=null,vu=null;function yu(){vu=_s=nl=null}function kd(o,a,f){vt?(tt(tl,a._currentValue),a._currentValue=f):(tt(tl,a._currentValue2),a._currentValue2=f)}function xu(o){var a=tl.current;Tt(tl),vt?o._currentValue=a:o._currentValue2=a}function Mu(o,a,f){for(;o!==null;){var g=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,g!==null&&(g.childLanes|=a)):g!==null&&(g.childLanes&a)!==a&&(g.childLanes|=a),o===f)break;o=o.return}}function vs(o,a){nl=o,vu=_s=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&a&&(Vn=!0),o.firstContext=null)}function Jn(o){var a=vt?o._currentValue:o._currentValue2;if(vu!==o)if(o={context:o,memoizedValue:a,next:null},_s===null){if(nl===null)throw Error(l(308));_s=o,nl.dependencies={lanes:0,firstContext:o}}else _s=_s.next=o;return a}var Ai=null,or=!1;function Su(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Hd(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function zi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function ar(o,a){var f=o.updateQueue;f!==null&&(f=f.shared,jt!==null&&o.mode&1&&!(pt&2)?(o=f.interleaved,o===null?(a.next=a,Ai===null?Ai=[f]:Ai.push(f)):(a.next=o.next,o.next=a),f.interleaved=a):(o=f.pending,o===null?a.next=a:(a.next=o.next,o.next=a),f.pending=a))}function il(o,a,f){if(a=a.updateQueue,a!==null&&(a=a.shared,(f&4194240)!==0)){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,du(o,f)}}function Vd(o,a){var f=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var M=null,T=null;if(f=f.firstBaseUpdate,f!==null){do{var D={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};T===null?M=T=D:T=T.next=D,f=f.next}while(f!==null);T===null?M=T=a:T=T.next=a}else M=T=a;f={baseState:g.baseState,firstBaseUpdate:M,lastBaseUpdate:T,shared:g.shared,effects:g.effects},o.updateQueue=f;return}o=f.lastBaseUpdate,o===null?f.firstBaseUpdate=a:o.next=a,f.lastBaseUpdate=a}function rl(o,a,f,g){var M=o.updateQueue;or=!1;var T=M.firstBaseUpdate,D=M.lastBaseUpdate,H=M.shared.pending;if(H!==null){M.shared.pending=null;var ne=H,ve=ne.next;ne.next=null,D===null?T=ve:D.next=ve,D=ne;var Ne=o.alternate;Ne!==null&&(Ne=Ne.updateQueue,H=Ne.lastBaseUpdate,H!==D&&(H===null?Ne.firstBaseUpdate=ve:H.next=ve,Ne.lastBaseUpdate=ne))}if(T!==null){var rt=M.baseState;D=0,Ne=ve=ne=null,H=T;do{var qe=H.lane,Ct=H.eventTime;if((g&qe)===qe){Ne!==null&&(Ne=Ne.next={eventTime:Ct,lane:0,tag:H.tag,payload:H.payload,callback:H.callback,next:null});e:{var Ve=o,yn=H;switch(qe=a,Ct=f,yn.tag){case 1:if(Ve=yn.payload,typeof Ve=="function"){rt=Ve.call(Ct,rt,qe);break e}rt=Ve;break e;case 3:Ve.flags=Ve.flags&-65537|128;case 0:if(Ve=yn.payload,qe=typeof Ve=="function"?Ve.call(Ct,rt,qe):Ve,qe==null)break e;rt=s({},rt,qe);break e;case 2:or=!0}}H.callback!==null&&H.lane!==0&&(o.flags|=64,qe=M.effects,qe===null?M.effects=[H]:qe.push(H))}else Ct={eventTime:Ct,lane:qe,tag:H.tag,payload:H.payload,callback:H.callback,next:null},Ne===null?(ve=Ne=Ct,ne=rt):Ne=Ne.next=Ct,D|=qe;if(H=H.next,H===null){if(H=M.shared.pending,H===null)break;qe=H,H=qe.next,qe.next=null,M.lastBaseUpdate=qe,M.shared.pending=null}}while(1);if(Ne===null&&(ne=rt),M.baseState=ne,M.firstBaseUpdate=ve,M.lastBaseUpdate=Ne,a=M.shared.interleaved,a!==null){M=a;do D|=M.lane,M=M.next;while(M!==a)}else T===null&&(M.shared.lanes=0);bs|=D,o.lanes=D,o.memoizedState=rt}}function Gd(o,a,f){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var g=o[a],M=g.callback;if(M!==null){if(g.callback=null,g=f,typeof M!="function")throw Error(l(191,M));M.call(g)}}}var Wd=new n.Component().refs;function Eu(o,a,f,g){a=o.memoizedState,f=f(g,a),f=f==null?a:s({},a,f),o.memoizedState=f,o.lanes===0&&(o.updateQueue.baseState=f)}var sl={isMounted:function(o){return(o=o._reactInternals)?b(o)===o:!1},enqueueSetState:function(o,a,f){o=o._reactInternals;var g=Tn(),M=ur(o),T=zi(g,M);T.payload=a,f!=null&&(T.callback=f),ar(o,T),a=ei(o,M,g),a!==null&&il(a,o,M)},enqueueReplaceState:function(o,a,f){o=o._reactInternals;var g=Tn(),M=ur(o),T=zi(g,M);T.tag=1,T.payload=a,f!=null&&(T.callback=f),ar(o,T),a=ei(o,M,g),a!==null&&il(a,o,M)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var f=Tn(),g=ur(o),M=zi(f,g);M.tag=2,a!=null&&(M.callback=a),ar(o,M),a=ei(o,g,f),a!==null&&il(a,o,g)}};function Xd(o,a,f,g,M,T,D){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,T,D):a.prototype&&a.prototype.isPureReactComponent?!el(f,g)||!el(M,T):!0}function Yd(o,a,f){var g=!1,M=pn,T=a.contextType;return typeof T=="object"&&T!==null?T=Jn(T):(M=Ht(a)?oi:en.current,g=a.contextTypes,T=(g=g!=null)?kt(o,M):pn),a=new a(f,T),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=sl,o.stateNode=a,a._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=M,o.__reactInternalMemoizedMaskedChildContext=T),a}function qd(o,a,f,g){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(f,g),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(f,g),a.state!==o&&sl.enqueueReplaceState(a,a.state,null)}function wu(o,a,f,g){var M=o.stateNode;M.props=f,M.state=o.memoizedState,M.refs=Wd,Su(o);var T=a.contextType;typeof T=="object"&&T!==null?M.context=Jn(T):(T=Ht(a)?oi:en.current,M.context=kt(o,T)),M.state=o.memoizedState,T=a.getDerivedStateFromProps,typeof T=="function"&&(Eu(o,a,T,f),M.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(a=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),a!==M.state&&sl.enqueueReplaceState(M,M.state,null),rl(o,f,M,g),M.state=o.memoizedState),typeof M.componentDidMount=="function"&&(o.flags|=4194308)}var ys=[],xs=0,ol=null,al=0,Kn=[],jn=0,Ir=null,ki=1,Hi="";function Ur(o,a){ys[xs++]=al,ys[xs++]=ol,ol=o,al=a}function Zd(o,a,f){Kn[jn++]=ki,Kn[jn++]=Hi,Kn[jn++]=Ir,Ir=o;var g=ki;o=Hi;var M=32-ai(g)-1;g&=~(1<<M),f+=1;var T=32-ai(a)+M;if(30<T){var D=M-M%5;T=(g&(1<<D)-1).toString(32),g>>=D,M-=D,ki=1<<32-ai(a)+M|f<<M|g,Hi=T+o}else ki=1<<T|f<<M|g,Hi=o}function Tu(o){o.return!==null&&(Ur(o,1),Zd(o,1,0))}function Au(o){for(;o===ol;)ol=ys[--xs],ys[xs]=null,al=ys[--xs],ys[xs]=null;for(;o===Ir;)Ir=Kn[--jn],Kn[jn]=null,Hi=Kn[--jn],Kn[jn]=null,ki=Kn[--jn],Kn[jn]=null}var kn=null,Hn=null,Ft=!1,To=!1,ci=null;function Jd(o,a){var f=ti(5,null,null,0);f.elementType="DELETED",f.stateNode=a,f.return=o,a=o.deletions,a===null?(o.deletions=[f],o.flags|=16):a.push(f)}function Kd(o,a){switch(o.tag){case 5:return a=hn(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,kn=o,Hn=Za(a),!0):!1;case 6:return a=Wa(a,o.pendingProps),a!==null?(o.stateNode=a,kn=o,Hn=null,!0):!1;case 13:if(a=Xa(a),a!==null){var f=Ir!==null?{id:ki,overflow:Hi}:null;return o.memoizedState={dehydrated:a,treeContext:f,retryLane:1073741824},f=ti(18,null,null,0),f.stateNode=a,f.return=o,o.child=f,kn=o,Hn=null,!0}return!1;default:return!1}}function bu(o){return(o.mode&1)!==0&&(o.flags&128)===0}function Ru(o){if(Ft){var a=Hn;if(a){var f=a;if(!Kd(o,a)){if(bu(o))throw Error(l(418));a=Si(f);var g=kn;a&&Kd(o,a)?Jd(g,f):(o.flags=o.flags&-4097|2,Ft=!1,kn=o)}}else{if(bu(o))throw Error(l(418));o.flags=o.flags&-4097|2,Ft=!1,kn=o}}}function jd(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;kn=o}function Ao(o){if(!me||o!==kn)return!1;if(!Ft)return jd(o),Ft=!0,!1;if(o.tag!==3&&(o.tag!==5||je(o.type)&&!Se(o.type,o.memoizedProps))){var a=Hn;if(a){if(bu(o)){for(o=Hn;o;)o=Si(o);throw Error(l(418))}for(;a;)Jd(o,a),a=Si(a)}}if(jd(o),o.tag===13){if(!me)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Hn=se(o)}else Hn=kn?Si(o.stateNode):null;return!0}function Ms(){me&&(Hn=kn=null,To=Ft=!1)}function Cu(o){ci===null?ci=[o]:ci.push(o)}function bo(o,a,f){if(o=f.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(l(309));var g=f.stateNode}if(!g)throw Error(l(147,o));var M=g,T=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===T?a.ref:(a=function(D){var H=M.refs;H===Wd&&(H=M.refs={}),D===null?delete H[T]:H[T]=D},a._stringRef=T,a)}if(typeof o!="string")throw Error(l(284));if(!f._owner)throw Error(l(290,o))}return o}function ll(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function Qd(o){var a=o._init;return a(o._payload)}function $d(o){function a(K,G){if(o){var ee=K.deletions;ee===null?(K.deletions=[G],K.flags|=16):ee.push(G)}}function f(K,G){if(!o)return null;for(;G!==null;)a(K,G),G=G.sibling;return null}function g(K,G){for(K=new Map;G!==null;)G.key!==null?K.set(G.key,G):K.set(G.index,G),G=G.sibling;return K}function M(K,G){return K=fr(K,G),K.index=0,K.sibling=null,K}function T(K,G,ee){return K.index=ee,o?(ee=K.alternate,ee!==null?(ee=ee.index,ee<G?(K.flags|=2,G):ee):(K.flags|=2,G)):(K.flags|=1048576,G)}function D(K){return o&&K.alternate===null&&(K.flags|=2),K}function H(K,G,ee,Ce){return G===null||G.tag!==6?(G=fh(ee,K.mode,Ce),G.return=K,G):(G=M(G,ee),G.return=K,G)}function ne(K,G,ee,Ce){var He=ee.type;return He===d?Ne(K,G,ee.props.children,Ce,ee.key):G!==null&&(G.elementType===He||typeof He=="object"&&He!==null&&He.$$typeof===S&&Qd(He)===G.type)?(Ce=M(G,ee.props),Ce.ref=bo(K,G,ee),Ce.return=K,Ce):(Ce=zl(ee.type,ee.key,ee.props,null,K.mode,Ce),Ce.ref=bo(K,G,ee),Ce.return=K,Ce)}function ve(K,G,ee,Ce){return G===null||G.tag!==4||G.stateNode.containerInfo!==ee.containerInfo||G.stateNode.implementation!==ee.implementation?(G=dh(ee,K.mode,Ce),G.return=K,G):(G=M(G,ee.children||[]),G.return=K,G)}function Ne(K,G,ee,Ce,He){return G===null||G.tag!==7?(G=kr(ee,K.mode,Ce,He),G.return=K,G):(G=M(G,ee),G.return=K,G)}function rt(K,G,ee){if(typeof G=="string"&&G!==""||typeof G=="number")return G=fh(""+G,K.mode,ee),G.return=K,G;if(typeof G=="object"&&G!==null){switch(G.$$typeof){case u:return ee=zl(G.type,G.key,G.props,null,K.mode,ee),ee.ref=bo(K,null,G),ee.return=K,ee;case h:return G=dh(G,K.mode,ee),G.return=K,G;case S:var Ce=G._init;return rt(K,Ce(G._payload),ee)}if(Q(G)||C(G))return G=kr(G,K.mode,ee,null),G.return=K,G;ll(K,G)}return null}function qe(K,G,ee,Ce){var He=G!==null?G.key:null;if(typeof ee=="string"&&ee!==""||typeof ee=="number")return He!==null?null:H(K,G,""+ee,Ce);if(typeof ee=="object"&&ee!==null){switch(ee.$$typeof){case u:return ee.key===He?ne(K,G,ee,Ce):null;case h:return ee.key===He?ve(K,G,ee,Ce):null;case S:return He=ee._init,qe(K,G,He(ee._payload),Ce)}if(Q(ee)||C(ee))return He!==null?null:Ne(K,G,ee,Ce,null);ll(K,ee)}return null}function Ct(K,G,ee,Ce,He){if(typeof Ce=="string"&&Ce!==""||typeof Ce=="number")return K=K.get(ee)||null,H(G,K,""+Ce,He);if(typeof Ce=="object"&&Ce!==null){switch(Ce.$$typeof){case u:return K=K.get(Ce.key===null?ee:Ce.key)||null,ne(G,K,Ce,He);case h:return K=K.get(Ce.key===null?ee:Ce.key)||null,ve(G,K,Ce,He);case S:var ct=Ce._init;return Ct(K,G,ee,ct(Ce._payload),He)}if(Q(Ce)||C(Ce))return K=K.get(ee)||null,Ne(G,K,Ce,He,null);ll(G,Ce)}return null}function Ve(K,G,ee,Ce){for(var He=null,ct=null,st=G,Mt=G=0,ln=null;st!==null&&Mt<ee.length;Mt++){st.index>Mt?(ln=st,st=null):ln=st.sibling;var St=qe(K,st,ee[Mt],Ce);if(St===null){st===null&&(st=ln);break}o&&st&&St.alternate===null&&a(K,st),G=T(St,G,Mt),ct===null?He=St:ct.sibling=St,ct=St,st=ln}if(Mt===ee.length)return f(K,st),Ft&&Ur(K,Mt),He;if(st===null){for(;Mt<ee.length;Mt++)st=rt(K,ee[Mt],Ce),st!==null&&(G=T(st,G,Mt),ct===null?He=st:ct.sibling=st,ct=st);return Ft&&Ur(K,Mt),He}for(st=g(K,st);Mt<ee.length;Mt++)ln=Ct(st,K,Mt,ee[Mt],Ce),ln!==null&&(o&&ln.alternate!==null&&st.delete(ln.key===null?Mt:ln.key),G=T(ln,G,Mt),ct===null?He=ln:ct.sibling=ln,ct=ln);return o&&st.forEach(function(dr){return a(K,dr)}),Ft&&Ur(K,Mt),He}function yn(K,G,ee,Ce){var He=C(ee);if(typeof He!="function")throw Error(l(150));if(ee=He.call(ee),ee==null)throw Error(l(151));for(var ct=He=null,st=G,Mt=G=0,ln=null,St=ee.next();st!==null&&!St.done;Mt++,St=ee.next()){st.index>Mt?(ln=st,st=null):ln=st.sibling;var dr=qe(K,st,St.value,Ce);if(dr===null){st===null&&(st=ln);break}o&&st&&dr.alternate===null&&a(K,st),G=T(dr,G,Mt),ct===null?He=dr:ct.sibling=dr,ct=dr,st=ln}if(St.done)return f(K,st),Ft&&Ur(K,Mt),He;if(st===null){for(;!St.done;Mt++,St=ee.next())St=rt(K,St.value,Ce),St!==null&&(G=T(St,G,Mt),ct===null?He=St:ct.sibling=St,ct=St);return Ft&&Ur(K,Mt),He}for(st=g(K,st);!St.done;Mt++,St=ee.next())St=Ct(st,K,Mt,St.value,Ce),St!==null&&(o&&St.alternate!==null&&st.delete(St.key===null?Mt:St.key),G=T(St,G,Mt),ct===null?He=St:ct.sibling=St,ct=St);return o&&st.forEach(function(ry){return a(K,ry)}),Ft&&Ur(K,Mt),He}function ni(K,G,ee,Ce){if(typeof ee=="object"&&ee!==null&&ee.type===d&&ee.key===null&&(ee=ee.props.children),typeof ee=="object"&&ee!==null){switch(ee.$$typeof){case u:e:{for(var He=ee.key,ct=G;ct!==null;){if(ct.key===He){if(He=ee.type,He===d){if(ct.tag===7){f(K,ct.sibling),G=M(ct,ee.props.children),G.return=K,K=G;break e}}else if(ct.elementType===He||typeof He=="object"&&He!==null&&He.$$typeof===S&&Qd(He)===ct.type){f(K,ct.sibling),G=M(ct,ee.props),G.ref=bo(K,ct,ee),G.return=K,K=G;break e}f(K,ct);break}else a(K,ct);ct=ct.sibling}ee.type===d?(G=kr(ee.props.children,K.mode,Ce,ee.key),G.return=K,K=G):(Ce=zl(ee.type,ee.key,ee.props,null,K.mode,Ce),Ce.ref=bo(K,G,ee),Ce.return=K,K=Ce)}return D(K);case h:e:{for(ct=ee.key;G!==null;){if(G.key===ct)if(G.tag===4&&G.stateNode.containerInfo===ee.containerInfo&&G.stateNode.implementation===ee.implementation){f(K,G.sibling),G=M(G,ee.children||[]),G.return=K,K=G;break e}else{f(K,G);break}else a(K,G);G=G.sibling}G=dh(ee,K.mode,Ce),G.return=K,K=G}return D(K);case S:return ct=ee._init,ni(K,G,ct(ee._payload),Ce)}if(Q(ee))return Ve(K,G,ee,Ce);if(C(ee))return yn(K,G,ee,Ce);ll(K,ee)}return typeof ee=="string"&&ee!==""||typeof ee=="number"?(ee=""+ee,G!==null&&G.tag===6?(f(K,G.sibling),G=M(G,ee),G.return=K,K=G):(f(K,G),G=fh(ee,K.mode,Ce),G.return=K,K=G),D(K)):f(K,G)}return ni}var Ss=$d(!0),ep=$d(!1),Ro={},Qn=it(Ro),Co=it(Ro),Es=it(Ro);function bi(o){if(o===Ro)throw Error(l(174));return o}function Pu(o,a){tt(Es,a),tt(Co,o),tt(Qn,Ro),o=ie(a),Tt(Qn),tt(Qn,o)}function ws(){Tt(Qn),Tt(Co),Tt(Es)}function tp(o){var a=bi(Es.current),f=bi(Qn.current);a=V(f,o.type,a),f!==a&&(tt(Co,o),tt(Qn,a))}function Lu(o){Co.current===o&&(Tt(Qn),Tt(Co))}var Ot=it(0);function cl(o){for(var a=o;a!==null;){if(a.tag===13){var f=a.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||Ya(f)||rr(f)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if(a.flags&128)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var Iu=[];function Uu(){for(var o=0;o<Iu.length;o++){var a=Iu[o];vt?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}Iu.length=0}var ul=c.ReactCurrentDispatcher,$n=c.ReactCurrentBatchConfig,Ts=0,Vt=null,gn=null,an=null,hl=!1,Po=!1,Lo=0,Cv=0;function _n(){throw Error(l(321))}function Du(o,a){if(a===null)return!1;for(var f=0;f<a.length&&f<o.length;f++)if(!wi(o[f],a[f]))return!1;return!0}function Nu(o,a,f,g,M,T){if(Ts=T,Vt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,ul.current=o===null||o.memoizedState===null?Uv:Dv,o=f(g,M),Po){T=0;do{if(Po=!1,Lo=0,25<=T)throw Error(l(301));T+=1,an=gn=null,a.updateQueue=null,ul.current=Nv,o=f(g,M)}while(Po)}if(ul.current=gl,a=gn!==null&&gn.next!==null,Ts=0,an=gn=Vt=null,hl=!1,a)throw Error(l(300));return o}function Fu(){var o=Lo!==0;return Lo=0,o}function Vi(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return an===null?Vt.memoizedState=an=o:an=an.next=o,an}function Ri(){if(gn===null){var o=Vt.alternate;o=o!==null?o.memoizedState:null}else o=gn.next;var a=an===null?Vt.memoizedState:an.next;if(a!==null)an=a,gn=o;else{if(o===null)throw Error(l(310));gn=o,o={memoizedState:gn.memoizedState,baseState:gn.baseState,baseQueue:gn.baseQueue,queue:gn.queue,next:null},an===null?Vt.memoizedState=an=o:an=an.next=o}return an}function Dr(o,a){return typeof a=="function"?a(o):a}function fl(o){var a=Ri(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=gn,M=g.baseQueue,T=f.pending;if(T!==null){if(M!==null){var D=M.next;M.next=T.next,T.next=D}g.baseQueue=M=T,f.pending=null}if(M!==null){T=M.next,g=g.baseState;var H=D=null,ne=null,ve=T;do{var Ne=ve.lane;if((Ts&Ne)===Ne)ne!==null&&(ne=ne.next={lane:0,action:ve.action,hasEagerState:ve.hasEagerState,eagerState:ve.eagerState,next:null}),g=ve.hasEagerState?ve.eagerState:o(g,ve.action);else{var rt={lane:Ne,action:ve.action,hasEagerState:ve.hasEagerState,eagerState:ve.eagerState,next:null};ne===null?(H=ne=rt,D=g):ne=ne.next=rt,Vt.lanes|=Ne,bs|=Ne}ve=ve.next}while(ve!==null&&ve!==T);ne===null?D=g:ne.next=H,wi(g,a.memoizedState)||(Vn=!0),a.memoizedState=g,a.baseState=D,a.baseQueue=ne,f.lastRenderedState=g}if(o=f.interleaved,o!==null){M=o;do T=M.lane,Vt.lanes|=T,bs|=T,M=M.next;while(M!==o)}else M===null&&(f.lanes=0);return[a.memoizedState,f.dispatch]}function dl(o){var a=Ri(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=f.dispatch,M=f.pending,T=a.memoizedState;if(M!==null){f.pending=null;var D=M=M.next;do T=o(T,D.action),D=D.next;while(D!==M);wi(T,a.memoizedState)||(Vn=!0),a.memoizedState=T,a.baseQueue===null&&(a.baseState=T),f.lastRenderedState=T}return[T,g]}function np(){}function ip(o,a){var f=Vt,g=Ri(),M=a(),T=!wi(g.memoizedState,M);if(T&&(g.memoizedState=M,Vn=!0),g=g.queue,Uo(op.bind(null,f,g,o),[o]),g.getSnapshot!==a||T||an!==null&&an.memoizedState.tag&1){if(f.flags|=2048,Io(9,sp.bind(null,f,g,M,a),void 0,null),jt===null)throw Error(l(349));Ts&30||rp(f,a,M)}return M}function rp(o,a,f){o.flags|=16384,o={getSnapshot:a,value:f},a=Vt.updateQueue,a===null?(a={lastEffect:null,stores:null},Vt.updateQueue=a,a.stores=[o]):(f=a.stores,f===null?a.stores=[o]:f.push(o))}function sp(o,a,f,g){a.value=f,a.getSnapshot=g,ap(a)&&ei(o,1,-1)}function op(o,a,f){return f(function(){ap(a)&&ei(o,1,-1)})}function ap(o){var a=o.getSnapshot;o=o.value;try{var f=a();return!wi(o,f)}catch{return!0}}function Ou(o){var a=Vi();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Dr,lastRenderedState:o},a.queue=o,o=o.dispatch=Iv.bind(null,Vt,o),[a.memoizedState,o]}function Io(o,a,f,g){return o={tag:o,create:a,destroy:f,deps:g,next:null},a=Vt.updateQueue,a===null?(a={lastEffect:null,stores:null},Vt.updateQueue=a,a.lastEffect=o.next=o):(f=a.lastEffect,f===null?a.lastEffect=o.next=o:(g=f.next,f.next=o,o.next=g,a.lastEffect=o)),o}function lp(){return Ri().memoizedState}function pl(o,a,f,g){var M=Vi();Vt.flags|=o,M.memoizedState=Io(1|a,f,void 0,g===void 0?null:g)}function ml(o,a,f,g){var M=Ri();g=g===void 0?null:g;var T=void 0;if(gn!==null){var D=gn.memoizedState;if(T=D.destroy,g!==null&&Du(g,D.deps)){M.memoizedState=Io(a,f,T,g);return}}Vt.flags|=o,M.memoizedState=Io(1|a,f,T,g)}function Bu(o,a){return pl(8390656,8,o,a)}function Uo(o,a){return ml(2048,8,o,a)}function cp(o,a){return ml(4,2,o,a)}function up(o,a){return ml(4,4,o,a)}function hp(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function fp(o,a,f){return f=f!=null?f.concat([o]):null,ml(4,4,hp.bind(null,a,o),f)}function zu(){}function dp(o,a){var f=Ri();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&Du(a,g[1])?g[0]:(f.memoizedState=[o,a],o)}function pp(o,a){var f=Ri();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&Du(a,g[1])?g[0]:(o=o(),f.memoizedState=[o,a],o)}function Pv(o,a){var f=xt;xt=f!==0&&4>f?f:4,o(!0);var g=$n.transition;$n.transition={};try{o(!1),a()}finally{xt=f,$n.transition=g}}function mp(){return Ri().memoizedState}function Lv(o,a,f){var g=ur(o);f={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null},gp(o)?_p(a,f):(vp(o,a,f),f=Tn(),o=ei(o,g,f),o!==null&&yp(o,a,g))}function Iv(o,a,f){var g=ur(o),M={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null};if(gp(o))_p(a,M);else{vp(o,a,M);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=a.lastRenderedReducer,T!==null))try{var D=a.lastRenderedState,H=T(D,f);if(M.hasEagerState=!0,M.eagerState=H,wi(H,D))return}catch{}finally{}f=Tn(),o=ei(o,g,f),o!==null&&yp(o,a,g)}}function gp(o){var a=o.alternate;return o===Vt||a!==null&&a===Vt}function _p(o,a){Po=hl=!0;var f=o.pending;f===null?a.next=a:(a.next=f.next,f.next=a),o.pending=a}function vp(o,a,f){jt!==null&&o.mode&1&&!(pt&2)?(o=a.interleaved,o===null?(f.next=f,Ai===null?Ai=[a]:Ai.push(a)):(f.next=o.next,o.next=f),a.interleaved=f):(o=a.pending,o===null?f.next=f:(f.next=o.next,o.next=f),a.pending=f)}function yp(o,a,f){if(f&4194240){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,du(o,f)}}var gl={readContext:Jn,useCallback:_n,useContext:_n,useEffect:_n,useImperativeHandle:_n,useInsertionEffect:_n,useLayoutEffect:_n,useMemo:_n,useReducer:_n,useRef:_n,useState:_n,useDebugValue:_n,useDeferredValue:_n,useTransition:_n,useMutableSource:_n,useSyncExternalStore:_n,useId:_n,unstable_isNewReconciler:!1},Uv={readContext:Jn,useCallback:function(o,a){return Vi().memoizedState=[o,a===void 0?null:a],o},useContext:Jn,useEffect:Bu,useImperativeHandle:function(o,a,f){return f=f!=null?f.concat([o]):null,pl(4194308,4,hp.bind(null,a,o),f)},useLayoutEffect:function(o,a){return pl(4194308,4,o,a)},useInsertionEffect:function(o,a){return pl(4,2,o,a)},useMemo:function(o,a){var f=Vi();return a=a===void 0?null:a,o=o(),f.memoizedState=[o,a],o},useReducer:function(o,a,f){var g=Vi();return a=f!==void 0?f(a):a,g.memoizedState=g.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},g.queue=o,o=o.dispatch=Lv.bind(null,Vt,o),[g.memoizedState,o]},useRef:function(o){var a=Vi();return o={current:o},a.memoizedState=o},useState:Ou,useDebugValue:zu,useDeferredValue:function(o){var a=Ou(o),f=a[0],g=a[1];return Bu(function(){var M=$n.transition;$n.transition={};try{g(o)}finally{$n.transition=M}},[o]),f},useTransition:function(){var o=Ou(!1),a=o[0];return o=Pv.bind(null,o[1]),Vi().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,f){var g=Vt,M=Vi();if(Ft){if(f===void 0)throw Error(l(407));f=f()}else{if(f=a(),jt===null)throw Error(l(349));Ts&30||rp(g,a,f)}M.memoizedState=f;var T={value:f,getSnapshot:a};return M.queue=T,Bu(op.bind(null,g,T,o),[o]),g.flags|=2048,Io(9,sp.bind(null,g,T,f,a),void 0,null),f},useId:function(){var o=Vi(),a=jt.identifierPrefix;if(Ft){var f=Hi,g=ki;f=(g&~(1<<32-ai(g)-1)).toString(32)+f,a=":"+a+"R"+f,f=Lo++,0<f&&(a+="H"+f.toString(32)),a+=":"}else f=Cv++,a=":"+a+"r"+f.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},Dv={readContext:Jn,useCallback:dp,useContext:Jn,useEffect:Uo,useImperativeHandle:fp,useInsertionEffect:cp,useLayoutEffect:up,useMemo:pp,useReducer:fl,useRef:lp,useState:function(){return fl(Dr)},useDebugValue:zu,useDeferredValue:function(o){var a=fl(Dr),f=a[0],g=a[1];return Uo(function(){var M=$n.transition;$n.transition={};try{g(o)}finally{$n.transition=M}},[o]),f},useTransition:function(){var o=fl(Dr)[0],a=Ri().memoizedState;return[o,a]},useMutableSource:np,useSyncExternalStore:ip,useId:mp,unstable_isNewReconciler:!1},Nv={readContext:Jn,useCallback:dp,useContext:Jn,useEffect:Uo,useImperativeHandle:fp,useInsertionEffect:cp,useLayoutEffect:up,useMemo:pp,useReducer:dl,useRef:lp,useState:function(){return dl(Dr)},useDebugValue:zu,useDeferredValue:function(o){var a=dl(Dr),f=a[0],g=a[1];return Uo(function(){var M=$n.transition;$n.transition={};try{g(o)}finally{$n.transition=M}},[o]),f},useTransition:function(){var o=dl(Dr)[0],a=Ri().memoizedState;return[o,a]},useMutableSource:np,useSyncExternalStore:ip,useId:mp,unstable_isNewReconciler:!1};function ku(o,a){try{var f="",g=a;do f+=Rv(g),g=g.return;while(g);var M=f}catch(T){M=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:a,stack:M}}function Hu(o,a){try{console.error(a.value)}catch(f){setTimeout(function(){throw f})}}var Fv=typeof WeakMap=="function"?WeakMap:Map;function xp(o,a,f){f=zi(-1,f),f.tag=3,f.payload={element:null};var g=a.value;return f.callback=function(){Il||(Il=!0,sh=g),Hu(o,a)},f}function Mp(o,a,f){f=zi(-1,f),f.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var M=a.value;f.payload=function(){return g(M)},f.callback=function(){Hu(o,a)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(f.callback=function(){Hu(o,a),typeof g!="function"&&(lr===null?lr=new Set([this]):lr.add(this));var D=a.stack;this.componentDidCatch(a.value,{componentStack:D!==null?D:""})}),f}function Sp(o,a,f){var g=o.pingCache;if(g===null){g=o.pingCache=new Fv;var M=new Set;g.set(a,M)}else M=g.get(a),M===void 0&&(M=new Set,g.set(a,M));M.has(f)||(M.add(f),o=Kv.bind(null,o,a,f),a.then(o,o))}function Ep(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function wp(o,a,f,g,M){return o.mode&1?(o.flags|=65536,o.lanes=M,o):(o===a?o.flags|=65536:(o.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(a=zi(-1,1),a.tag=2,ar(f,a))),f.lanes|=1),o)}function Ci(o){o.flags|=4}function Tp(o,a){if(o!==null&&o.child===a.child)return!0;if(a.flags&16)return!1;for(o=a.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Do,No,_l,vl;if(Ge)Do=function(o,a){for(var f=a.child;f!==null;){if(f.tag===5||f.tag===6)X(o,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===a)break;for(;f.sibling===null;){if(f.return===null||f.return===a)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},No=function(){},_l=function(o,a,f,g,M){if(o=o.memoizedProps,o!==g){var T=a.stateNode,D=bi(Qn.current);f=de(T,f,o,g,M,D),(a.updateQueue=f)&&Ci(a)}},vl=function(o,a,f,g){f!==g&&Ci(a)};else if(B){Do=function(o,a,f,g){for(var M=a.child;M!==null;){if(M.tag===5){var T=M.stateNode;f&&g&&(T=It(T,M.type,M.memoizedProps,M)),X(o,T)}else if(M.tag===6)T=M.stateNode,f&&g&&(T=On(T,M.memoizedProps,M)),X(o,T);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)T=M.child,T!==null&&(T.return=M),Do(o,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===a)break;for(;M.sibling===null;){if(M.return===null||M.return===a)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};var Ap=function(o,a,f,g){for(var M=a.child;M!==null;){if(M.tag===5){var T=M.stateNode;f&&g&&(T=It(T,M.type,M.memoizedProps,M)),Lt(o,T)}else if(M.tag===6)T=M.stateNode,f&&g&&(T=On(T,M.memoizedProps,M)),Lt(o,T);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)T=M.child,T!==null&&(T.return=M),Ap(o,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===a)break;for(;M.sibling===null;){if(M.return===null||M.return===a)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};No=function(o,a){var f=a.stateNode;if(!Tp(o,a)){o=f.containerInfo;var g=_t(o);Ap(g,a,!1,!1),f.pendingChildren=g,Ci(a),zt(o,g)}},_l=function(o,a,f,g,M){var T=o.stateNode,D=o.memoizedProps;if((o=Tp(o,a))&&D===g)a.stateNode=T;else{var H=a.stateNode,ne=bi(Qn.current),ve=null;D!==g&&(ve=de(H,f,D,g,M,ne)),o&&ve===null?a.stateNode=T:(T=Re(T,ve,f,D,g,a,o,H),le(T,f,g,M,ne)&&Ci(a),a.stateNode=T,o?Ci(a):Do(T,a,!1,!1))}},vl=function(o,a,f,g){f!==g?(o=bi(Es.current),f=bi(Qn.current),a.stateNode=Te(g,o,f,a),Ci(a)):a.stateNode=o.stateNode}}else No=function(){},_l=function(){},vl=function(){};function Fo(o,a){if(!Ft)switch(o.tailMode){case"hidden":a=o.tail;for(var f=null;a!==null;)a.alternate!==null&&(f=a),a=a.sibling;f===null?o.tail=null:f.sibling=null;break;case"collapsed":f=o.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function vn(o){var a=o.alternate!==null&&o.alternate.child===o.child,f=0,g=0;if(a)for(var M=o.child;M!==null;)f|=M.lanes|M.childLanes,g|=M.subtreeFlags&14680064,g|=M.flags&14680064,M.return=o,M=M.sibling;else for(M=o.child;M!==null;)f|=M.lanes|M.childLanes,g|=M.subtreeFlags,g|=M.flags,M.return=o,M=M.sibling;return o.subtreeFlags|=g,o.childLanes=f,a}function Ov(o,a,f){var g=a.pendingProps;switch(Au(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return vn(a),null;case 1:return Ht(a.type)&&sr(),vn(a),null;case 3:return g=a.stateNode,ws(),Tt(Kt),Tt(en),Uu(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Ao(a)?Ci(a):o===null||o.memoizedState.isDehydrated&&!(a.flags&256)||(a.flags|=1024,ci!==null&&(lh(ci),ci=null))),No(o,a),vn(a),null;case 5:Lu(a),f=bi(Es.current);var M=a.type;if(o!==null&&a.stateNode!=null)_l(o,a,M,g,f),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!g){if(a.stateNode===null)throw Error(l(166));return vn(a),null}if(o=bi(Qn.current),Ao(a)){if(!me)throw Error(l(175));o=uu(a.stateNode,a.type,a.memoizedProps,f,o,a,!To),a.updateQueue=o,o!==null&&Ci(a)}else{var T=he(M,g,f,o,a);Do(T,a,!1,!1),a.stateNode=T,le(T,M,g,f,o)&&Ci(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return vn(a),null;case 6:if(o&&a.stateNode!=null)vl(o,a,o.memoizedProps,g);else{if(typeof g!="string"&&a.stateNode===null)throw Error(l(166));if(o=bi(Es.current),f=bi(Qn.current),Ao(a)){if(!me)throw Error(l(176));if(o=a.stateNode,g=a.memoizedProps,(f=I(o,g,a,!To))&&(M=kn,M!==null))switch(T=(M.mode&1)!==0,M.tag){case 3:Qe(M.stateNode.containerInfo,o,g,T);break;case 5:dt(M.type,M.memoizedProps,M.stateNode,o,g,T)}f&&Ci(a)}else a.stateNode=Te(g,o,f,a)}return vn(a),null;case 13:if(Tt(Ot),g=a.memoizedState,Ft&&Hn!==null&&a.mode&1&&!(a.flags&128)){for(o=Hn;o;)o=Si(o);return Ms(),a.flags|=98560,a}if(g!==null&&g.dehydrated!==null){if(g=Ao(a),o===null){if(!g)throw Error(l(318));if(!me)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));j(o,a)}else Ms(),!(a.flags&128)&&(a.memoizedState=null),a.flags|=4;return vn(a),null}return ci!==null&&(lh(ci),ci=null),a.flags&128?(a.lanes=f,a):(g=g!==null,f=!1,o===null?Ao(a):f=o.memoizedState!==null,g&&!f&&(a.child.flags|=8192,a.mode&1&&(o===null||Ot.current&1?tn===0&&(tn=3):uh())),a.updateQueue!==null&&(a.flags|=4),vn(a),null);case 4:return ws(),No(o,a),o===null&&ye(a.stateNode.containerInfo),vn(a),null;case 10:return xu(a.type._context),vn(a),null;case 17:return Ht(a.type)&&sr(),vn(a),null;case 19:if(Tt(Ot),M=a.memoizedState,M===null)return vn(a),null;if(g=(a.flags&128)!==0,T=M.rendering,T===null)if(g)Fo(M,!1);else{if(tn!==0||o!==null&&o.flags&128)for(o=a.child;o!==null;){if(T=cl(o),T!==null){for(a.flags|=128,Fo(M,!1),o=T.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=f,g=a.child;g!==null;)f=g,M=o,f.flags&=14680066,T=f.alternate,T===null?(f.childLanes=0,f.lanes=M,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=T.childLanes,f.lanes=T.lanes,f.child=T.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=T.memoizedProps,f.memoizedState=T.memoizedState,f.updateQueue=T.updateQueue,f.type=T.type,M=T.dependencies,f.dependencies=M===null?null:{lanes:M.lanes,firstContext:M.firstContext}),g=g.sibling;return tt(Ot,Ot.current&1|2),a.child}o=o.sibling}M.tail!==null&&on()>rh&&(a.flags|=128,g=!0,Fo(M,!1),a.lanes=4194304)}else{if(!g)if(o=cl(T),o!==null){if(a.flags|=128,g=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),Fo(M,!0),M.tail===null&&M.tailMode==="hidden"&&!T.alternate&&!Ft)return vn(a),null}else 2*on()-M.renderingStartTime>rh&&f!==1073741824&&(a.flags|=128,g=!0,Fo(M,!1),a.lanes=4194304);M.isBackwards?(T.sibling=a.child,a.child=T):(o=M.last,o!==null?o.sibling=T:a.child=T,M.last=T)}return M.tail!==null?(a=M.tail,M.rendering=a,M.tail=a.sibling,M.renderingStartTime=on(),a.sibling=null,o=Ot.current,tt(Ot,g?o&1|2:o&1),a):(vn(a),null);case 22:case 23:return ch(),g=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(a.flags|=8192),g&&a.mode&1?Gn&1073741824&&(vn(a),Ge&&a.subtreeFlags&6&&(a.flags|=8192)):vn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var Bv=c.ReactCurrentOwner,Vn=!1;function wn(o,a,f,g){a.child=o===null?ep(a,null,f,g):Ss(a,o.child,f,g)}function bp(o,a,f,g,M){f=f.render;var T=a.ref;return vs(a,M),g=Nu(o,a,f,g,T,M),f=Fu(),o!==null&&!Vn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~M,Gi(o,a,M)):(Ft&&f&&Tu(a),a.flags|=1,wn(o,a,g,M),a.child)}function Rp(o,a,f,g,M){if(o===null){var T=f.type;return typeof T=="function"&&!hh(T)&&T.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(a.tag=15,a.type=T,Cp(o,a,T,g,M)):(o=zl(f.type,null,g,a,a.mode,M),o.ref=a.ref,o.return=a,a.child=o)}if(T=o.child,!(o.lanes&M)){var D=T.memoizedProps;if(f=f.compare,f=f!==null?f:el,f(D,g)&&o.ref===a.ref)return Gi(o,a,M)}return a.flags|=1,o=fr(T,g),o.ref=a.ref,o.return=a,a.child=o}function Cp(o,a,f,g,M){if(o!==null&&el(o.memoizedProps,g)&&o.ref===a.ref)if(Vn=!1,(o.lanes&M)!==0)o.flags&131072&&(Vn=!0);else return a.lanes=o.lanes,Gi(o,a,M);return Vu(o,a,f,g,M)}function Pp(o,a,f){var g=a.pendingProps,M=g.children,T=o!==null?o.memoizedState:null;if(g.mode==="hidden")if(!(a.mode&1))a.memoizedState={baseLanes:0,cachePool:null},tt(As,Gn),Gn|=f;else if(f&1073741824)a.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:f,tt(As,Gn),Gn|=g;else return o=T!==null?T.baseLanes|f:f,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,tt(As,Gn),Gn|=o,null;else T!==null?(g=T.baseLanes|f,a.memoizedState=null):g=f,tt(As,Gn),Gn|=g;return wn(o,a,M,f),a.child}function Lp(o,a){var f=a.ref;(o===null&&f!==null||o!==null&&o.ref!==f)&&(a.flags|=512,a.flags|=2097152)}function Vu(o,a,f,g,M){var T=Ht(f)?oi:en.current;return T=kt(a,T),vs(a,M),f=Nu(o,a,f,g,T,M),g=Fu(),o!==null&&!Vn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~M,Gi(o,a,M)):(Ft&&g&&Tu(a),a.flags|=1,wn(o,a,f,M),a.child)}function Ip(o,a,f,g,M){if(Ht(f)){var T=!0;gs(a)}else T=!1;if(vs(a,M),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),Yd(a,f,g),wu(a,f,g,M),g=!0;else if(o===null){var D=a.stateNode,H=a.memoizedProps;D.props=H;var ne=D.context,ve=f.contextType;typeof ve=="object"&&ve!==null?ve=Jn(ve):(ve=Ht(f)?oi:en.current,ve=kt(a,ve));var Ne=f.getDerivedStateFromProps,rt=typeof Ne=="function"||typeof D.getSnapshotBeforeUpdate=="function";rt||typeof D.UNSAFE_componentWillReceiveProps!="function"&&typeof D.componentWillReceiveProps!="function"||(H!==g||ne!==ve)&&qd(a,D,g,ve),or=!1;var qe=a.memoizedState;D.state=qe,rl(a,g,D,M),ne=a.memoizedState,H!==g||qe!==ne||Kt.current||or?(typeof Ne=="function"&&(Eu(a,f,Ne,g),ne=a.memoizedState),(H=or||Xd(a,f,H,g,qe,ne,ve))?(rt||typeof D.UNSAFE_componentWillMount!="function"&&typeof D.componentWillMount!="function"||(typeof D.componentWillMount=="function"&&D.componentWillMount(),typeof D.UNSAFE_componentWillMount=="function"&&D.UNSAFE_componentWillMount()),typeof D.componentDidMount=="function"&&(a.flags|=4194308)):(typeof D.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=g,a.memoizedState=ne),D.props=g,D.state=ne,D.context=ve,g=H):(typeof D.componentDidMount=="function"&&(a.flags|=4194308),g=!1)}else{D=a.stateNode,Hd(o,a),H=a.memoizedProps,ve=a.type===a.elementType?H:li(a.type,H),D.props=ve,rt=a.pendingProps,qe=D.context,ne=f.contextType,typeof ne=="object"&&ne!==null?ne=Jn(ne):(ne=Ht(f)?oi:en.current,ne=kt(a,ne));var Ct=f.getDerivedStateFromProps;(Ne=typeof Ct=="function"||typeof D.getSnapshotBeforeUpdate=="function")||typeof D.UNSAFE_componentWillReceiveProps!="function"&&typeof D.componentWillReceiveProps!="function"||(H!==rt||qe!==ne)&&qd(a,D,g,ne),or=!1,qe=a.memoizedState,D.state=qe,rl(a,g,D,M);var Ve=a.memoizedState;H!==rt||qe!==Ve||Kt.current||or?(typeof Ct=="function"&&(Eu(a,f,Ct,g),Ve=a.memoizedState),(ve=or||Xd(a,f,ve,g,qe,Ve,ne)||!1)?(Ne||typeof D.UNSAFE_componentWillUpdate!="function"&&typeof D.componentWillUpdate!="function"||(typeof D.componentWillUpdate=="function"&&D.componentWillUpdate(g,Ve,ne),typeof D.UNSAFE_componentWillUpdate=="function"&&D.UNSAFE_componentWillUpdate(g,Ve,ne)),typeof D.componentDidUpdate=="function"&&(a.flags|=4),typeof D.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof D.componentDidUpdate!="function"||H===o.memoizedProps&&qe===o.memoizedState||(a.flags|=4),typeof D.getSnapshotBeforeUpdate!="function"||H===o.memoizedProps&&qe===o.memoizedState||(a.flags|=1024),a.memoizedProps=g,a.memoizedState=Ve),D.props=g,D.state=Ve,D.context=ne,g=ve):(typeof D.componentDidUpdate!="function"||H===o.memoizedProps&&qe===o.memoizedState||(a.flags|=4),typeof D.getSnapshotBeforeUpdate!="function"||H===o.memoizedProps&&qe===o.memoizedState||(a.flags|=1024),g=!1)}return Gu(o,a,f,g,T,M)}function Gu(o,a,f,g,M,T){Lp(o,a);var D=(a.flags&128)!==0;if(!g&&!D)return M&&So(a,f,!1),Gi(o,a,T);g=a.stateNode,Bv.current=a;var H=D&&typeof f.getDerivedStateFromError!="function"?null:g.render();return a.flags|=1,o!==null&&D?(a.child=Ss(a,o.child,null,T),a.child=Ss(a,null,H,T)):wn(o,a,H,T),a.memoizedState=g.state,M&&So(a,f,!0),a.child}function Up(o){var a=o.stateNode;a.pendingContext?mn(o,a.pendingContext,a.pendingContext!==a.context):a.context&&mn(o,a.context,!1),Pu(o,a.containerInfo)}function Dp(o,a,f,g,M){return Ms(),Cu(M),a.flags|=256,wn(o,a,f,g),a.child}var yl={dehydrated:null,treeContext:null,retryLane:0};function xl(o){return{baseLanes:o,cachePool:null}}function Np(o,a,f){var g=a.pendingProps,M=Ot.current,T=!1,D=(a.flags&128)!==0,H;if((H=D)||(H=o!==null&&o.memoizedState===null?!1:(M&2)!==0),H?(T=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(M|=1),tt(Ot,M&1),o===null)return Ru(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(a.mode&1?rr(o)?a.lanes=8:a.lanes=1073741824:a.lanes=1,null):(M=g.children,o=g.fallback,T?(g=a.mode,T=a.child,M={mode:"hidden",children:M},!(g&1)&&T!==null?(T.childLanes=0,T.pendingProps=M):T=kl(M,g,0,null),o=kr(o,g,f,null),T.return=a,o.return=a,T.sibling=o,a.child=T,a.child.memoizedState=xl(f),a.memoizedState=yl,o):Wu(a,M));if(M=o.memoizedState,M!==null){if(H=M.dehydrated,H!==null){if(D)return a.flags&256?(a.flags&=-257,Ml(o,a,f,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(T=g.fallback,M=a.mode,g=kl({mode:"visible",children:g.children},M,0,null),T=kr(T,M,f,null),T.flags|=2,g.return=a,T.return=a,g.sibling=T,a.child=g,a.mode&1&&Ss(a,o.child,null,f),a.child.memoizedState=xl(f),a.memoizedState=yl,T);if(!(a.mode&1))a=Ml(o,a,f,null);else if(rr(H))a=Ml(o,a,f,Error(l(419)));else if(g=(f&o.childLanes)!==0,Vn||g){if(g=jt,g!==null){switch(f&-f){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=T&(g.suspendedLanes|f)?0:T,g!==0&&g!==M.retryLane&&(M.retryLane=g,ei(o,g,-1))}uh(),a=Ml(o,a,f,Error(l(421)))}else Ya(H)?(a.flags|=128,a.child=o.child,a=jv.bind(null,o),qa(H,a),a=null):(f=M.treeContext,me&&(Hn=cu(H),kn=a,Ft=!0,ci=null,To=!1,f!==null&&(Kn[jn++]=ki,Kn[jn++]=Hi,Kn[jn++]=Ir,ki=f.id,Hi=f.overflow,Ir=a)),a=Wu(a,a.pendingProps.children),a.flags|=4096);return a}return T?(g=Op(o,a,g.children,g.fallback,f),T=a.child,M=o.child.memoizedState,T.memoizedState=M===null?xl(f):{baseLanes:M.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=yl,g):(f=Fp(o,a,g.children,f),a.memoizedState=null,f)}return T?(g=Op(o,a,g.children,g.fallback,f),T=a.child,M=o.child.memoizedState,T.memoizedState=M===null?xl(f):{baseLanes:M.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=yl,g):(f=Fp(o,a,g.children,f),a.memoizedState=null,f)}function Wu(o,a){return a=kl({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function Fp(o,a,f,g){var M=o.child;return o=M.sibling,f=fr(M,{mode:"visible",children:f}),!(a.mode&1)&&(f.lanes=g),f.return=a,f.sibling=null,o!==null&&(g=a.deletions,g===null?(a.deletions=[o],a.flags|=16):g.push(o)),a.child=f}function Op(o,a,f,g,M){var T=a.mode;o=o.child;var D=o.sibling,H={mode:"hidden",children:f};return!(T&1)&&a.child!==o?(f=a.child,f.childLanes=0,f.pendingProps=H,a.deletions=null):(f=fr(o,H),f.subtreeFlags=o.subtreeFlags&14680064),D!==null?g=fr(D,g):(g=kr(g,T,M,null),g.flags|=2),g.return=a,f.return=a,f.sibling=g,a.child=f,g}function Ml(o,a,f,g){return g!==null&&Cu(g),Ss(a,o.child,null,f),o=Wu(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function Bp(o,a,f){o.lanes|=a;var g=o.alternate;g!==null&&(g.lanes|=a),Mu(o.return,a,f)}function Xu(o,a,f,g,M){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:M}:(T.isBackwards=a,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=f,T.tailMode=M)}function zp(o,a,f){var g=a.pendingProps,M=g.revealOrder,T=g.tail;if(wn(o,a,g.children,f),g=Ot.current,g&2)g=g&1|2,a.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&Bp(o,f,a);else if(o.tag===19)Bp(o,f,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(tt(Ot,g),!(a.mode&1))a.memoizedState=null;else switch(M){case"forwards":for(f=a.child,M=null;f!==null;)o=f.alternate,o!==null&&cl(o)===null&&(M=f),f=f.sibling;f=M,f===null?(M=a.child,a.child=null):(M=f.sibling,f.sibling=null),Xu(a,!1,M,f,T);break;case"backwards":for(f=null,M=a.child,a.child=null;M!==null;){if(o=M.alternate,o!==null&&cl(o)===null){a.child=M;break}o=M.sibling,M.sibling=f,f=M,M=o}Xu(a,!0,f,null,T);break;case"together":Xu(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function Gi(o,a,f){if(o!==null&&(a.dependencies=o.dependencies),bs|=a.lanes,!(f&a.childLanes))return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,f=fr(o,o.pendingProps),a.child=f,f.return=a;o.sibling!==null;)o=o.sibling,f=f.sibling=fr(o,o.pendingProps),f.return=a;f.sibling=null}return a.child}function zv(o,a,f){switch(a.tag){case 3:Up(a),Ms();break;case 5:tp(a);break;case 1:Ht(a.type)&&gs(a);break;case 4:Pu(a,a.stateNode.containerInfo);break;case 10:kd(a,a.type._context,a.memoizedProps.value);break;case 13:var g=a.memoizedState;if(g!==null)return g.dehydrated!==null?(tt(Ot,Ot.current&1),a.flags|=128,null):f&a.child.childLanes?Np(o,a,f):(tt(Ot,Ot.current&1),o=Gi(o,a,f),o!==null?o.sibling:null);tt(Ot,Ot.current&1);break;case 19:if(g=(f&a.childLanes)!==0,o.flags&128){if(g)return zp(o,a,f);a.flags|=128}var M=a.memoizedState;if(M!==null&&(M.rendering=null,M.tail=null,M.lastEffect=null),tt(Ot,Ot.current),g)break;return null;case 22:case 23:return a.lanes=0,Pp(o,a,f)}return Gi(o,a,f)}function kv(o,a){switch(Au(a),a.tag){case 1:return Ht(a.type)&&sr(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return ws(),Tt(Kt),Tt(en),Uu(),o=a.flags,o&65536&&!(o&128)?(a.flags=o&-65537|128,a):null;case 5:return Lu(a),null;case 13:if(Tt(Ot),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));Ms()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return Tt(Ot),null;case 4:return ws(),null;case 10:return xu(a.type._context),null;case 22:case 23:return ch(),null;case 24:return null;default:return null}}var Sl=!1,Nr=!1,Hv=typeof WeakSet=="function"?WeakSet:Set,be=null;function El(o,a){var f=o.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(g){In(o,a,g)}else f.current=null}function Yu(o,a,f){try{f()}catch(g){In(o,a,g)}}var kp=!1;function Vv(o,a){for(Z(o.containerInfo),be=a;be!==null;)if(o=be,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,be=a;else for(;be!==null;){o=be;try{var f=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var g=f.memoizedProps,M=f.memoizedState,T=o.stateNode,D=T.getSnapshotBeforeUpdate(o.elementType===o.type?g:li(o.type,g),M);T.__reactInternalSnapshotBeforeUpdate=D}break;case 3:Ge&&xe(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(H){In(o,o.return,H)}if(a=o.sibling,a!==null){a.return=o.return,be=a;break}be=o.return}return f=kp,kp=!1,f}function Fr(o,a,f){var g=a.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var M=g=g.next;do{if((M.tag&o)===o){var T=M.destroy;M.destroy=void 0,T!==void 0&&Yu(a,f,T)}M=M.next}while(M!==g)}}function Oo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var f=a=a.next;do{if((f.tag&o)===o){var g=f.create;f.destroy=g()}f=f.next}while(f!==a)}}function qu(o){var a=o.ref;if(a!==null){var f=o.stateNode;switch(o.tag){case 5:o=ce(f);break;default:o=f}typeof a=="function"?a(o):a.current=o}}function Hp(o,a,f){if(Ei&&typeof Ei.onCommitFiberUnmount=="function")try{Ei.onCommitFiberUnmount(Qa,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var M=g,T=M.destroy;M=M.tag,T!==void 0&&(M&2||M&4)&&Yu(a,f,T),g=g.next}while(g!==o)}break;case 1:if(El(a,f),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(D){In(a,f,D)}break;case 5:El(a,f);break;case 4:Ge?qp(o,a,f):B&&B&&(a=a.stateNode.containerInfo,f=_t(a),Mi(a,f))}}function Vp(o,a,f){for(var g=a;;)if(Hp(o,g,f),g.child===null||Ge&&g.tag===4){if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function Gp(o){var a=o.alternate;a!==null&&(o.alternate=null,Gp(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&ze(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Wp(o){return o.tag===5||o.tag===3||o.tag===4}function Xp(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Wp(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Yp(o){if(Ge){e:{for(var a=o.return;a!==null;){if(Wp(a))break e;a=a.return}throw Error(l(160))}var f=a;switch(f.tag){case 5:a=f.stateNode,f.flags&32&&(lt(a),f.flags&=-33),f=Xp(o),Ju(o,f,a);break;case 3:case 4:a=f.stateNode.containerInfo,f=Xp(o),Zu(o,f,a);break;default:throw Error(l(161))}}}function Zu(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Ze(f,o,a):ke(f,o);else if(g!==4&&(o=o.child,o!==null))for(Zu(o,a,f),o=o.sibling;o!==null;)Zu(o,a,f),o=o.sibling}function Ju(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Xe(f,o,a):Ee(f,o);else if(g!==4&&(o=o.child,o!==null))for(Ju(o,a,f),o=o.sibling;o!==null;)Ju(o,a,f),o=o.sibling}function qp(o,a,f){for(var g=a,M=!1,T,D;;){if(!M){M=g.return;e:for(;;){if(M===null)throw Error(l(160));switch(T=M.stateNode,M.tag){case 5:D=!1;break e;case 3:T=T.containerInfo,D=!0;break e;case 4:T=T.containerInfo,D=!0;break e}M=M.return}M=!0}if(g.tag===5||g.tag===6)Vp(o,g,f),D?Oe(T,g.stateNode):Fe(T,g.stateNode);else if(g.tag===18)D?Ye(T,g.stateNode):De(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,D=!0,g.child.return=g,g=g.child;continue}}else if(Hp(o,g,f),g.child!==null){g.child.return=g,g=g.child;continue}if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return,g.tag===4&&(M=!1)}g.sibling.return=g.return,g=g.sibling}}function Ku(o,a){if(Ge){switch(a.tag){case 0:case 11:case 14:case 15:Fr(3,a,a.return),Oo(3,a),Fr(5,a,a.return);return;case 1:return;case 5:var f=a.stateNode;if(f!=null){var g=a.memoizedProps;o=o!==null?o.memoizedProps:g;var M=a.type,T=a.updateQueue;a.updateQueue=null,T!==null&&We(f,T,M,o,g,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));f=a.memoizedProps,we(a.stateNode,o!==null?o.memoizedProps:f,f);return;case 3:me&&o!==null&&o.memoizedState.isDehydrated&&Y(a.stateNode.containerInfo);return;case 12:return;case 13:wl(a);return;case 19:wl(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Fr(3,a,a.return),Oo(3,a),Fr(5,a,a.return);return;case 12:return;case 13:wl(a);return;case 19:wl(a);return;case 3:me&&o!==null&&o.memoizedState.isDehydrated&&Y(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(B){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,Mi(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function wl(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var f=o.stateNode;f===null&&(f=o.stateNode=new Hv),a.forEach(function(g){var M=Qv.bind(null,o,g);f.has(g)||(f.add(g),g.then(M,M))})}}function Gv(o,a){for(be=a;be!==null;){a=be;var f=a.deletions;if(f!==null)for(var g=0;g<f.length;g++){var M=f[g];try{var T=o;Ge?qp(T,M,a):Vp(T,M,a);var D=M.alternate;D!==null&&(D.return=null),M.return=null}catch(He){In(M,a,He)}}if(f=a.child,a.subtreeFlags&12854&&f!==null)f.return=a,be=f;else for(;be!==null;){a=be;try{var H=a.flags;if(H&32&&Ge&&lt(a.stateNode),H&512){var ne=a.alternate;if(ne!==null){var ve=ne.ref;ve!==null&&(typeof ve=="function"?ve(null):ve.current=null)}}if(H&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var Ne=a.alternate;(Ne===null||Ne.memoizedState===null)&&(ih=on())}break;case 22:var rt=a.memoizedState!==null,qe=a.alternate,Ct=qe!==null&&qe.memoizedState!==null;if(f=a,Ge){e:if(g=f,M=rt,T=null,Ge)for(var Ve=g;;){if(Ve.tag===5){if(T===null){T=Ve;var yn=Ve.stateNode;M?bt(yn):Ae(Ve.stateNode,Ve.memoizedProps)}}else if(Ve.tag===6){if(T===null){var ni=Ve.stateNode;M?k(ni):$(ni,Ve.memoizedProps)}}else if((Ve.tag!==22&&Ve.tag!==23||Ve.memoizedState===null||Ve===g)&&Ve.child!==null){Ve.child.return=Ve,Ve=Ve.child;continue}if(Ve===g)break;for(;Ve.sibling===null;){if(Ve.return===null||Ve.return===g)break e;T===Ve&&(T=null),Ve=Ve.return}T===Ve&&(T=null),Ve.sibling.return=Ve.return,Ve=Ve.sibling}}if(rt&&!Ct&&f.mode&1){be=f;for(var K=f.child;K!==null;){for(f=be=K;be!==null;){g=be;var G=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Fr(4,g,g.return);break;case 1:El(g,g.return);var ee=g.stateNode;if(typeof ee.componentWillUnmount=="function"){var Ce=g.return;try{ee.props=g.memoizedProps,ee.state=g.memoizedState,ee.componentWillUnmount()}catch(He){In(g,Ce,He)}}break;case 5:El(g,g.return);break;case 22:if(g.memoizedState!==null){Kp(f);continue}}G!==null?(G.return=g,be=G):Kp(f)}K=K.sibling}}}switch(H&4102){case 2:Yp(a),a.flags&=-3;break;case 6:Yp(a),a.flags&=-3,Ku(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,Ku(a.alternate,a);break;case 4:Ku(a.alternate,a)}}catch(He){In(a,a.return,He)}if(f=a.sibling,f!==null){f.return=a.return,be=f;break}be=a.return}}}function Wv(o,a,f){be=o,Zp(o)}function Zp(o,a,f){for(var g=(o.mode&1)!==0;be!==null;){var M=be,T=M.child;if(M.tag===22&&g){var D=M.memoizedState!==null||Sl;if(!D){var H=M.alternate,ne=H!==null&&H.memoizedState!==null||Nr;H=Sl;var ve=Nr;if(Sl=D,(Nr=ne)&&!ve)for(be=M;be!==null;)D=be,ne=D.child,D.tag===22&&D.memoizedState!==null?jp(M):ne!==null?(ne.return=D,be=ne):jp(M);for(;T!==null;)be=T,Zp(T),T=T.sibling;be=M,Sl=H,Nr=ve}Jp(o)}else M.subtreeFlags&8772&&T!==null?(T.return=M,be=T):Jp(o)}}function Jp(o){for(;be!==null;){var a=be;if(a.flags&8772){var f=a.alternate;try{if(a.flags&8772)switch(a.tag){case 0:case 11:case 15:Nr||Oo(5,a);break;case 1:var g=a.stateNode;if(a.flags&4&&!Nr)if(f===null)g.componentDidMount();else{var M=a.elementType===a.type?f.memoizedProps:li(a.type,f.memoizedProps);g.componentDidUpdate(M,f.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=a.updateQueue;T!==null&&Gd(a,T,g);break;case 3:var D=a.updateQueue;if(D!==null){if(f=null,a.child!==null)switch(a.child.tag){case 5:f=ce(a.child.stateNode);break;case 1:f=a.child.stateNode}Gd(a,D,f)}break;case 5:var H=a.stateNode;f===null&&a.flags&4&&ae(H,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(me&&a.memoizedState===null){var ne=a.alternate;if(ne!==null){var ve=ne.memoizedState;if(ve!==null){var Ne=ve.dehydrated;Ne!==null&&oe(Ne)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}Nr||a.flags&512&&qu(a)}catch(rt){In(a,a.return,rt)}}if(a===o){be=null;break}if(f=a.sibling,f!==null){f.return=a.return,be=f;break}be=a.return}}function Kp(o){for(;be!==null;){var a=be;if(a===o){be=null;break}var f=a.sibling;if(f!==null){f.return=a.return,be=f;break}be=a.return}}function jp(o){for(;be!==null;){var a=be;try{switch(a.tag){case 0:case 11:case 15:var f=a.return;try{Oo(4,a)}catch(ne){In(a,f,ne)}break;case 1:var g=a.stateNode;if(typeof g.componentDidMount=="function"){var M=a.return;try{g.componentDidMount()}catch(ne){In(a,M,ne)}}var T=a.return;try{qu(a)}catch(ne){In(a,T,ne)}break;case 5:var D=a.return;try{qu(a)}catch(ne){In(a,D,ne)}}}catch(ne){In(a,a.return,ne)}if(a===o){be=null;break}var H=a.sibling;if(H!==null){H.return=a.return,be=H;break}be=a.return}}var Tl=0,Al=1,bl=2,Rl=3,Cl=4;if(typeof Symbol=="function"&&Symbol.for){var Bo=Symbol.for;Tl=Bo("selector.component"),Al=Bo("selector.has_pseudo_class"),bl=Bo("selector.role"),Rl=Bo("selector.test_id"),Cl=Bo("selector.text")}function ju(o){var a=ue(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=gt(o),o===null)throw Error(l(362));return o.stateNode.current}function Qu(o,a){switch(a.$$typeof){case Tl:if(o.type===a.value)return!0;break;case Al:e:{a=a.value,o=[o,0];for(var f=0;f<o.length;){var g=o[f++],M=o[f++],T=a[M];if(g.tag!==5||!P(g)){for(;T!=null&&Qu(g,T);)M++,T=a[M];if(M===a.length){a=!0;break e}else for(g=g.child;g!==null;)o.push(g,M),g=g.sibling}}a=!1}return a;case bl:if(o.tag===5&&re(o.stateNode,a.value))return!0;break;case Cl:if((o.tag===5||o.tag===6)&&(o=F(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Rl:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function $u(o){switch(o.$$typeof){case Tl:return"<"+(N(o.value)||"Unknown")+">";case Al:return":has("+($u(o)||"")+")";case bl:return'[role="'+o.value+'"]';case Cl:return'"'+o.value+'"';case Rl:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function Qp(o,a){var f=[];o=[o,0];for(var g=0;g<o.length;){var M=o[g++],T=o[g++],D=a[T];if(M.tag!==5||!P(M)){for(;D!=null&&Qu(M,D);)T++,D=a[T];if(T===a.length)f.push(M);else for(M=M.child;M!==null;)o.push(M,T),M=M.sibling}}return f}function eh(o,a){if(!Ke)throw Error(l(363));o=ju(o),o=Qp(o,a),a=[],o=Array.from(o);for(var f=0;f<o.length;){var g=o[f++];if(g.tag===5)P(g)||a.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return a}var Xv=Math.ceil,Pl=c.ReactCurrentDispatcher,th=c.ReactCurrentOwner,Xt=c.ReactCurrentBatchConfig,pt=0,jt=null,Qt=null,fn=0,Gn=0,As=it(0),tn=0,zo=null,bs=0,Ll=0,nh=0,ko=null,Pn=null,ih=0,rh=1/0;function Rs(){rh=on()+500}var Il=!1,sh=null,lr=null,Ul=!1,cr=null,Dl=0,Ho=0,oh=null,Nl=-1,Fl=0;function Tn(){return pt&6?on():Nl!==-1?Nl:Nl=on()}function ur(o){return o.mode&1?pt&2&&fn!==0?fn&-fn:bv.transition!==null?(Fl===0&&(o=Ja,Ja<<=1,!(Ja&4194240)&&(Ja=64),Fl=o),Fl):(o=xt,o!==0?o:pe()):1}function ei(o,a,f){if(50<Ho)throw Ho=0,oh=null,Error(l(185));var g=Ol(o,a);return g===null?null:(wo(g,a,f),(!(pt&2)||g!==jt)&&(g===jt&&(!(pt&2)&&(Ll|=a),tn===4&&hr(g,fn)),Ln(g,f),a===1&&pt===0&&!(o.mode&1)&&(Rs(),$a&&Ti())),g)}function Ol(o,a){o.lanes|=a;var f=o.alternate;for(f!==null&&(f.lanes|=a),f=o,o=o.return;o!==null;)o.childLanes|=a,f=o.alternate,f!==null&&(f.childLanes|=a),f=o,o=o.return;return f.tag===3?f.stateNode:null}function Ln(o,a){var f=o.callbackNode;vv(o,a);var g=ja(o,o===jt?fn:0);if(g===0)f!==null&&Bd(f),o.callbackNode=null,o.callbackPriority=0;else if(a=g&-g,o.callbackPriority!==a){if(f!=null&&Bd(f),a===1)o.tag===0?Av(em.bind(null,o)):zd(em.bind(null,o)),Pe?Ue(function(){pt===0&&Ti()}):pu(mu,Ti),f=null;else{switch(Od(g)){case 1:f=mu;break;case 4:f=Sv;break;case 16:f=gu;break;case 536870912:f=Ev;break;default:f=gu}f=cm(f,$p.bind(null,o))}o.callbackPriority=a,o.callbackNode=f}}function $p(o,a){if(Nl=-1,Fl=0,pt&6)throw Error(l(327));var f=o.callbackNode;if(zr()&&o.callbackNode!==f)return null;var g=ja(o,o===jt?fn:0);if(g===0)return null;if(g&30||g&o.expiredLanes||a)a=Bl(o,g);else{a=g;var M=pt;pt|=2;var T=im();(jt!==o||fn!==a)&&(Rs(),Or(o,a));do try{Zv();break}catch(H){nm(o,H)}while(1);yu(),Pl.current=T,pt=M,Qt!==null?a=0:(jt=null,fn=0,a=tn)}if(a!==0){if(a===2&&(M=hu(o),M!==0&&(g=M,a=ah(o,M))),a===1)throw f=zo,Or(o,0),hr(o,g),Ln(o,on()),f;if(a===6)hr(o,g);else{if(M=o.current.alternate,!(g&30)&&!Yv(M)&&(a=Bl(o,g),a===2&&(T=hu(o),T!==0&&(g=T,a=ah(o,T))),a===1))throw f=zo,Or(o,0),hr(o,g),Ln(o,on()),f;switch(o.finishedWork=M,o.finishedLanes=g,a){case 0:case 1:throw Error(l(345));case 2:Br(o,Pn);break;case 3:if(hr(o,g),(g&130023424)===g&&(a=ih+500-on(),10<a)){if(ja(o,0)!==0)break;if(M=o.suspendedLanes,(M&g)!==g){Tn(),o.pingedLanes|=o.suspendedLanes&M;break}o.timeoutHandle=Ie(Br.bind(null,o,Pn),a);break}Br(o,Pn);break;case 4:if(hr(o,g),(g&4194240)===g)break;for(a=o.eventTimes,M=-1;0<g;){var D=31-ai(g);T=1<<D,D=a[D],D>M&&(M=D),g&=~T}if(g=M,g=on()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*Xv(g/1960))-g,10<g){o.timeoutHandle=Ie(Br.bind(null,o,Pn),g);break}Br(o,Pn);break;case 5:Br(o,Pn);break;default:throw Error(l(329))}}}return Ln(o,on()),o.callbackNode===f?$p.bind(null,o):null}function ah(o,a){var f=ko;return o.current.memoizedState.isDehydrated&&(Or(o,a).flags|=256),o=Bl(o,a),o!==2&&(a=Pn,Pn=f,a!==null&&lh(a)),o}function lh(o){Pn===null?Pn=o:Pn.push.apply(Pn,o)}function Yv(o){for(var a=o;;){if(a.flags&16384){var f=a.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var g=0;g<f.length;g++){var M=f[g],T=M.getSnapshot;M=M.value;try{if(!wi(T(),M))return!1}catch{return!1}}}if(f=a.child,a.subtreeFlags&16384&&f!==null)f.return=a,a=f;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function hr(o,a){for(a&=~nh,a&=~Ll,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var f=31-ai(a),g=1<<f;o[f]=-1,a&=~g}}function em(o){if(pt&6)throw Error(l(327));zr();var a=ja(o,0);if(!(a&1))return Ln(o,on()),null;var f=Bl(o,a);if(o.tag!==0&&f===2){var g=hu(o);g!==0&&(a=g,f=ah(o,g))}if(f===1)throw f=zo,Or(o,0),hr(o,a),Ln(o,on()),f;if(f===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Br(o,Pn),Ln(o,on()),null}function tm(o){cr!==null&&cr.tag===0&&!(pt&6)&&zr();var a=pt;pt|=1;var f=Xt.transition,g=xt;try{if(Xt.transition=null,xt=1,o)return o()}finally{xt=g,Xt.transition=f,pt=a,!(pt&6)&&Ti()}}function ch(){Gn=As.current,Tt(As)}function Or(o,a){o.finishedWork=null,o.finishedLanes=0;var f=o.timeoutHandle;if(f!==Je&&(o.timeoutHandle=Je,nt(f)),Qt!==null)for(f=Qt.return;f!==null;){var g=f;switch(Au(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&sr();break;case 3:ws(),Tt(Kt),Tt(en),Uu();break;case 5:Lu(g);break;case 4:ws();break;case 13:Tt(Ot);break;case 19:Tt(Ot);break;case 10:xu(g.type._context);break;case 22:case 23:ch()}f=f.return}if(jt=o,Qt=o=fr(o.current,null),fn=Gn=a,tn=0,zo=null,nh=Ll=bs=0,Pn=ko=null,Ai!==null){for(a=0;a<Ai.length;a++)if(f=Ai[a],g=f.interleaved,g!==null){f.interleaved=null;var M=g.next,T=f.pending;if(T!==null){var D=T.next;T.next=M,g.next=D}f.pending=g}Ai=null}return o}function nm(o,a){do{var f=Qt;try{if(yu(),ul.current=gl,hl){for(var g=Vt.memoizedState;g!==null;){var M=g.queue;M!==null&&(M.pending=null),g=g.next}hl=!1}if(Ts=0,an=gn=Vt=null,Po=!1,Lo=0,th.current=null,f===null||f.return===null){tn=1,zo=a,Qt=null;break}e:{var T=o,D=f.return,H=f,ne=a;if(a=fn,H.flags|=32768,ne!==null&&typeof ne=="object"&&typeof ne.then=="function"){var ve=ne,Ne=H,rt=Ne.tag;if(!(Ne.mode&1)&&(rt===0||rt===11||rt===15)){var qe=Ne.alternate;qe?(Ne.updateQueue=qe.updateQueue,Ne.memoizedState=qe.memoizedState,Ne.lanes=qe.lanes):(Ne.updateQueue=null,Ne.memoizedState=null)}var Ct=Ep(D);if(Ct!==null){Ct.flags&=-257,wp(Ct,D,H,T,a),Ct.mode&1&&Sp(T,ve,a),a=Ct,ne=ve;var Ve=a.updateQueue;if(Ve===null){var yn=new Set;yn.add(ne),a.updateQueue=yn}else Ve.add(ne);break e}else{if(!(a&1)){Sp(T,ve,a),uh();break e}ne=Error(l(426))}}else if(Ft&&H.mode&1){var ni=Ep(D);if(ni!==null){!(ni.flags&65536)&&(ni.flags|=256),wp(ni,D,H,T,a),Cu(ne);break e}}T=ne,tn!==4&&(tn=2),ko===null?ko=[T]:ko.push(T),ne=ku(ne,H),H=D;do{switch(H.tag){case 3:H.flags|=65536,a&=-a,H.lanes|=a;var K=xp(H,ne,a);Vd(H,K);break e;case 1:T=ne;var G=H.type,ee=H.stateNode;if(!(H.flags&128)&&(typeof G.getDerivedStateFromError=="function"||ee!==null&&typeof ee.componentDidCatch=="function"&&(lr===null||!lr.has(ee)))){H.flags|=65536,a&=-a,H.lanes|=a;var Ce=Mp(H,T,a);Vd(H,Ce);break e}}H=H.return}while(H!==null)}sm(f)}catch(He){a=He,Qt===f&&f!==null&&(Qt=f=f.return);continue}break}while(1)}function im(){var o=Pl.current;return Pl.current=gl,o===null?gl:o}function uh(){(tn===0||tn===3||tn===2)&&(tn=4),jt===null||!(bs&268435455)&&!(Ll&268435455)||hr(jt,fn)}function Bl(o,a){var f=pt;pt|=2;var g=im();jt===o&&fn===a||Or(o,a);do try{qv();break}catch(M){nm(o,M)}while(1);if(yu(),pt=f,Pl.current=g,Qt!==null)throw Error(l(261));return jt=null,fn=0,tn}function qv(){for(;Qt!==null;)rm(Qt)}function Zv(){for(;Qt!==null&&!xv();)rm(Qt)}function rm(o){var a=lm(o.alternate,o,Gn);o.memoizedProps=o.pendingProps,a===null?sm(o):Qt=a,th.current=null}function sm(o){var a=o;do{var f=a.alternate;if(o=a.return,a.flags&32768){if(f=kv(f,a),f!==null){f.flags&=32767,Qt=f;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{tn=6,Qt=null;return}}else if(f=Ov(f,a,Gn),f!==null){Qt=f;return}if(a=a.sibling,a!==null){Qt=a;return}Qt=a=o}while(a!==null);tn===0&&(tn=5)}function Br(o,a){var f=xt,g=Xt.transition;try{Xt.transition=null,xt=1,Jv(o,a,f)}finally{Xt.transition=g,xt=f}return null}function Jv(o,a,f){do zr();while(cr!==null);if(pt&6)throw Error(l(327));var g=o.finishedWork,M=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var T=g.lanes|g.childLanes;if(yv(o,T),o===jt&&(Qt=jt=null,fn=0),!(g.subtreeFlags&2064)&&!(g.flags&2064)||Ul||(Ul=!0,cm(gu,function(){return zr(),null})),T=(g.flags&15990)!==0,g.subtreeFlags&15990||T){T=Xt.transition,Xt.transition=null;var D=xt;xt=1;var H=pt;pt|=4,th.current=null,Vv(o,g),Gv(o,g),J(o.containerInfo),o.current=g,Wv(g),Mv(),pt=H,xt=D,Xt.transition=T}else o.current=g;if(Ul&&(Ul=!1,cr=o,Dl=M),T=o.pendingLanes,T===0&&(lr=null),wv(g.stateNode),Ln(o,on()),a!==null)for(f=o.onRecoverableError,g=0;g<a.length;g++)f(a[g]);if(Il)throw Il=!1,o=sh,sh=null,o;return Dl&1&&o.tag!==0&&zr(),T=o.pendingLanes,T&1?o===oh?Ho++:(Ho=0,oh=o):Ho=0,Ti(),null}function zr(){if(cr!==null){var o=Od(Dl),a=Xt.transition,f=xt;try{if(Xt.transition=null,xt=16>o?16:o,cr===null)var g=!1;else{if(o=cr,cr=null,Dl=0,pt&6)throw Error(l(331));var M=pt;for(pt|=4,be=o.current;be!==null;){var T=be,D=T.child;if(be.flags&16){var H=T.deletions;if(H!==null){for(var ne=0;ne<H.length;ne++){var ve=H[ne];for(be=ve;be!==null;){var Ne=be;switch(Ne.tag){case 0:case 11:case 15:Fr(8,Ne,T)}var rt=Ne.child;if(rt!==null)rt.return=Ne,be=rt;else for(;be!==null;){Ne=be;var qe=Ne.sibling,Ct=Ne.return;if(Gp(Ne),Ne===ve){be=null;break}if(qe!==null){qe.return=Ct,be=qe;break}be=Ct}}}var Ve=T.alternate;if(Ve!==null){var yn=Ve.child;if(yn!==null){Ve.child=null;do{var ni=yn.sibling;yn.sibling=null,yn=ni}while(yn!==null)}}be=T}}if(T.subtreeFlags&2064&&D!==null)D.return=T,be=D;else e:for(;be!==null;){if(T=be,T.flags&2048)switch(T.tag){case 0:case 11:case 15:Fr(9,T,T.return)}var K=T.sibling;if(K!==null){K.return=T.return,be=K;break e}be=T.return}}var G=o.current;for(be=G;be!==null;){D=be;var ee=D.child;if(D.subtreeFlags&2064&&ee!==null)ee.return=D,be=ee;else e:for(D=G;be!==null;){if(H=be,H.flags&2048)try{switch(H.tag){case 0:case 11:case 15:Oo(9,H)}}catch(He){In(H,H.return,He)}if(H===D){be=null;break e}var Ce=H.sibling;if(Ce!==null){Ce.return=H.return,be=Ce;break e}be=H.return}}if(pt=M,Ti(),Ei&&typeof Ei.onPostCommitFiberRoot=="function")try{Ei.onPostCommitFiberRoot(Qa,o)}catch{}g=!0}return g}finally{xt=f,Xt.transition=a}}return!1}function om(o,a,f){a=ku(f,a),a=xp(o,a,1),ar(o,a),a=Tn(),o=Ol(o,1),o!==null&&(wo(o,1,a),Ln(o,a))}function In(o,a,f){if(o.tag===3)om(o,o,f);else for(;a!==null;){if(a.tag===3){om(a,o,f);break}else if(a.tag===1){var g=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(lr===null||!lr.has(g))){o=ku(f,o),o=Mp(a,o,1),ar(a,o),o=Tn(),a=Ol(a,1),a!==null&&(wo(a,1,o),Ln(a,o));break}}a=a.return}}function Kv(o,a,f){var g=o.pingCache;g!==null&&g.delete(a),a=Tn(),o.pingedLanes|=o.suspendedLanes&f,jt===o&&(fn&f)===f&&(tn===4||tn===3&&(fn&130023424)===fn&&500>on()-ih?Or(o,0):nh|=f),Ln(o,a)}function am(o,a){a===0&&(o.mode&1?(a=Ka,Ka<<=1,!(Ka&130023424)&&(Ka=4194304)):a=1);var f=Tn();o=Ol(o,a),o!==null&&(wo(o,a,f),Ln(o,f))}function jv(o){var a=o.memoizedState,f=0;a!==null&&(f=a.retryLane),am(o,f)}function Qv(o,a){var f=0;switch(o.tag){case 13:var g=o.stateNode,M=o.memoizedState;M!==null&&(f=M.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(a),am(o,f)}var lm;lm=function(o,a,f){if(o!==null)if(o.memoizedProps!==a.pendingProps||Kt.current)Vn=!0;else{if(!(o.lanes&f)&&!(a.flags&128))return Vn=!1,zv(o,a,f);Vn=!!(o.flags&131072)}else Vn=!1,Ft&&a.flags&1048576&&Zd(a,al,a.index);switch(a.lanes=0,a.tag){case 2:var g=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var M=kt(a,en.current);vs(a,f),M=Nu(null,a,g,o,M,f);var T=Fu();return a.flags|=1,typeof M=="object"&&M!==null&&typeof M.render=="function"&&M.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,Ht(g)?(T=!0,gs(a)):T=!1,a.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,Su(a),M.updater=sl,a.stateNode=M,M._reactInternals=a,wu(a,g,o,f),a=Gu(null,a,g,!0,T,f)):(a.tag=0,Ft&&T&&Tu(a),wn(null,a,M,f),a=a.child),a;case 16:g=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,M=g._init,g=M(g._payload),a.type=g,M=a.tag=ey(g),o=li(g,o),M){case 0:a=Vu(null,a,g,o,f);break e;case 1:a=Ip(null,a,g,o,f);break e;case 11:a=bp(null,a,g,o,f);break e;case 14:a=Rp(null,a,g,li(g.type,o),f);break e}throw Error(l(306,g,""))}return a;case 0:return g=a.type,M=a.pendingProps,M=a.elementType===g?M:li(g,M),Vu(o,a,g,M,f);case 1:return g=a.type,M=a.pendingProps,M=a.elementType===g?M:li(g,M),Ip(o,a,g,M,f);case 3:e:{if(Up(a),o===null)throw Error(l(387));g=a.pendingProps,T=a.memoizedState,M=T.element,Hd(o,a),rl(a,g,null,f);var D=a.memoizedState;if(g=D.element,me&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:D.cache,transitions:D.transitions},a.updateQueue.baseState=T,a.memoizedState=T,a.flags&256){M=Error(l(423)),a=Dp(o,a,g,f,M);break e}else if(g!==M){M=Error(l(424)),a=Dp(o,a,g,f,M);break e}else for(me&&(Hn=lu(a.stateNode.containerInfo),kn=a,Ft=!0,ci=null,To=!1),f=ep(a,null,g,f),a.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(Ms(),g===M){a=Gi(o,a,f);break e}wn(o,a,g,f)}a=a.child}return a;case 5:return tp(a),o===null&&Ru(a),g=a.type,M=a.pendingProps,T=o!==null?o.memoizedProps:null,D=M.children,Se(g,M)?D=null:T!==null&&Se(g,T)&&(a.flags|=32),Lp(o,a),wn(o,a,D,f),a.child;case 6:return o===null&&Ru(a),null;case 13:return Np(o,a,f);case 4:return Pu(a,a.stateNode.containerInfo),g=a.pendingProps,o===null?a.child=Ss(a,null,g,f):wn(o,a,g,f),a.child;case 11:return g=a.type,M=a.pendingProps,M=a.elementType===g?M:li(g,M),bp(o,a,g,M,f);case 7:return wn(o,a,a.pendingProps,f),a.child;case 8:return wn(o,a,a.pendingProps.children,f),a.child;case 12:return wn(o,a,a.pendingProps.children,f),a.child;case 10:e:{if(g=a.type._context,M=a.pendingProps,T=a.memoizedProps,D=M.value,kd(a,g,D),T!==null)if(wi(T.value,D)){if(T.children===M.children&&!Kt.current){a=Gi(o,a,f);break e}}else for(T=a.child,T!==null&&(T.return=a);T!==null;){var H=T.dependencies;if(H!==null){D=T.child;for(var ne=H.firstContext;ne!==null;){if(ne.context===g){if(T.tag===1){ne=zi(-1,f&-f),ne.tag=2;var ve=T.updateQueue;if(ve!==null){ve=ve.shared;var Ne=ve.pending;Ne===null?ne.next=ne:(ne.next=Ne.next,Ne.next=ne),ve.pending=ne}}T.lanes|=f,ne=T.alternate,ne!==null&&(ne.lanes|=f),Mu(T.return,f,a),H.lanes|=f;break}ne=ne.next}}else if(T.tag===10)D=T.type===a.type?null:T.child;else if(T.tag===18){if(D=T.return,D===null)throw Error(l(341));D.lanes|=f,H=D.alternate,H!==null&&(H.lanes|=f),Mu(D,f,a),D=T.sibling}else D=T.child;if(D!==null)D.return=T;else for(D=T;D!==null;){if(D===a){D=null;break}if(T=D.sibling,T!==null){T.return=D.return,D=T;break}D=D.return}T=D}wn(o,a,M.children,f),a=a.child}return a;case 9:return M=a.type,g=a.pendingProps.children,vs(a,f),M=Jn(M),g=g(M),a.flags|=1,wn(o,a,g,f),a.child;case 14:return g=a.type,M=li(g,a.pendingProps),M=li(g.type,M),Rp(o,a,g,M,f);case 15:return Cp(o,a,a.type,a.pendingProps,f);case 17:return g=a.type,M=a.pendingProps,M=a.elementType===g?M:li(g,M),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,Ht(g)?(o=!0,gs(a)):o=!1,vs(a,f),Yd(a,g,M),wu(a,g,M,f),Gu(null,a,g,!0,o,f);case 19:return zp(o,a,f);case 22:return Pp(o,a,f)}throw Error(l(156,a.tag))};function cm(o,a){return pu(o,a)}function $v(o,a,f,g){this.tag=o,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ti(o,a,f,g){return new $v(o,a,f,g)}function hh(o){return o=o.prototype,!(!o||!o.isReactComponent)}function ey(o){if(typeof o=="function")return hh(o)?1:0;if(o!=null){if(o=o.$$typeof,o===E)return 11;if(o===w)return 14}return 2}function fr(o,a){var f=o.alternate;return f===null?(f=ti(o.tag,a,o.key,o.mode),f.elementType=o.elementType,f.type=o.type,f.stateNode=o.stateNode,f.alternate=o,o.alternate=f):(f.pendingProps=a,f.type=o.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=o.flags&14680064,f.childLanes=o.childLanes,f.lanes=o.lanes,f.child=o.child,f.memoizedProps=o.memoizedProps,f.memoizedState=o.memoizedState,f.updateQueue=o.updateQueue,a=o.dependencies,f.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},f.sibling=o.sibling,f.index=o.index,f.ref=o.ref,f}function zl(o,a,f,g,M,T){var D=2;if(g=o,typeof o=="function")hh(o)&&(D=1);else if(typeof o=="string")D=5;else e:switch(o){case d:return kr(f.children,M,T,a);case p:D=8,M|=8;break;case m:return o=ti(12,f,a,M|2),o.elementType=m,o.lanes=T,o;case x:return o=ti(13,f,a,M),o.elementType=x,o.lanes=T,o;case v:return o=ti(19,f,a,M),o.elementType=v,o.lanes=T,o;case A:return kl(f,M,T,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case _:D=10;break e;case y:D=9;break e;case E:D=11;break e;case w:D=14;break e;case S:D=16,g=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=ti(D,f,a,M),a.elementType=o,a.type=g,a.lanes=T,a}function kr(o,a,f,g){return o=ti(7,o,g,a),o.lanes=f,o}function kl(o,a,f,g){return o=ti(22,o,g,a),o.elementType=A,o.lanes=f,o.stateNode={},o}function fh(o,a,f){return o=ti(6,o,null,a),o.lanes=f,o}function dh(o,a,f){return a=ti(4,o.children!==null?o.children:[],o.key,a),a.lanes=f,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function ty(o,a,f,g,M){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Je,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=fu(0),this.expirationTimes=fu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=fu(0),this.identifierPrefix=g,this.onRecoverableError=M,me&&(this.mutableSourceEagerHydrationData=null)}function um(o,a,f,g,M,T,D,H,ne){return o=new ty(o,a,f,H,ne),a===1?(a=1,T===!0&&(a|=8)):a=0,T=ti(3,null,null,a),o.current=T,T.stateNode=o,T.memoizedState={element:g,isDehydrated:f,cache:null,transitions:null},Su(T),o}function hm(o){if(!o)return pn;o=o._reactInternals;e:{if(b(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(Ht(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var f=o.type;if(Ht(f))return ms(o,f,a)}return a}function fm(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=te(a),o===null?null:o.stateNode}function dm(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var f=o.retryLane;o.retryLane=f!==0&&f<a?f:a}}function ph(o,a){dm(o,a),(o=o.alternate)&&dm(o,a)}function ny(o){return o=te(o),o===null?null:o.stateNode}function iy(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=Tn();ei(o,134217728,a),ph(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=Tn(),f=ur(o);ei(o,f,a),ph(o,f)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var f=Eo(a.pendingLanes);f!==0&&(du(a,f|1),Ln(a,on()),!(pt&6)&&(Rs(),Ti()))}break;case 13:var g=Tn();tm(function(){return ei(o,1,g)}),ph(o,1)}},t.batchedUpdates=function(o,a){var f=pt;pt|=1;try{return o(a)}finally{pt=f,pt===0&&(Rs(),$a&&Ti())}},t.createComponentSelector=function(o){return{$$typeof:Tl,value:o}},t.createContainer=function(o,a,f,g,M,T,D){return um(o,a,!1,null,f,g,M,T,D)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Al,value:o}},t.createHydrationContainer=function(o,a,f,g,M,T,D,H,ne){return o=um(f,g,!0,o,M,T,D,H,ne),o.context=hm(null),f=o.current,g=Tn(),M=ur(f),T=zi(g,M),T.callback=a??null,ar(f,T),o.current.lanes=M,wo(o,M,g),Ln(o,g),o},t.createPortal=function(o,a,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:a,implementation:f}},t.createRoleSelector=function(o){return{$$typeof:bl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Rl,value:o}},t.createTextSelector=function(o){return{$$typeof:Cl,value:o}},t.deferredUpdates=function(o){var a=xt,f=Xt.transition;try{return Xt.transition=null,xt=16,o()}finally{xt=a,Xt.transition=f}},t.discreteUpdates=function(o,a,f,g,M){var T=xt,D=Xt.transition;try{return Xt.transition=null,xt=1,o(a,f,g,M)}finally{xt=T,Xt.transition=D,pt===0&&Rs()}},t.findAllNodes=eh,t.findBoundingRects=function(o,a){if(!Ke)throw Error(l(363));a=eh(o,a),o=[];for(var f=0;f<a.length;f++)o.push(Nt(a[f]));for(a=o.length-1;0<a;a--){f=o[a];for(var g=f.x,M=g+f.width,T=f.y,D=T+f.height,H=a-1;0<=H;H--)if(a!==H){var ne=o[H],ve=ne.x,Ne=ve+ne.width,rt=ne.y,qe=rt+ne.height;if(g>=ve&&T>=rt&&M<=Ne&&D<=qe){o.splice(a,1);break}else if(g!==ve||f.width!==ne.width||qe<T||rt>D){if(!(T!==rt||f.height!==ne.height||Ne<g||ve>M)){ve>g&&(ne.width+=ve-g,ne.x=g),Ne<M&&(ne.width=M-ve),o.splice(a,1);break}}else{rt>T&&(ne.height+=rt-T,ne.y=T),qe<D&&(ne.height=D-rt),o.splice(a,1);break}}}return o},t.findHostInstance=fm,t.findHostInstanceWithNoPortals=function(o){return o=z(o),o=o!==null?q(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return fm(o)},t.flushControlled=function(o){var a=pt;pt|=1;var f=Xt.transition,g=xt;try{Xt.transition=null,xt=1,o()}finally{xt=g,Xt.transition=f,pt=a,pt===0&&(Rs(),Ti())}},t.flushPassiveEffects=zr,t.flushSync=tm,t.focusWithin=function(o,a){if(!Ke)throw Error(l(363));for(o=ju(o),a=Qp(o,a),a=Array.from(a),o=0;o<a.length;){var f=a[o++];if(!P(f)){if(f.tag===5&&ge(f.stateNode))return!0;for(f=f.child;f!==null;)a.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return xt},t.getFindAllNodesFailureDescription=function(o,a){if(!Ke)throw Error(l(363));var f=0,g=[];o=[ju(o),0];for(var M=0;M<o.length;){var T=o[M++],D=o[M++],H=a[D];if((T.tag!==5||!P(T))&&(Qu(T,H)&&(g.push($u(H)),D++,D>f&&(f=D)),D<a.length))for(T=T.child;T!==null;)o.push(T,D),T=T.sibling}if(f<a.length){for(o=[];f<a.length;f++)o.push($u(a[f]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return ce(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:ny,findFiberByHostInstance:o.findFiberByHostInstance||iy,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{Qa=a.inject(o),Ei=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,f,g){if(!Ke)throw Error(l(363));o=eh(o,a);var M=_e(o,f,g).disconnect;return{disconnect:function(){M()}}},t.registerMutableSourceForHydration=function(o,a){var f=a._getVersion;f=f(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,f]:o.mutableSourceEagerHydrationData.push(a,f)},t.runWithPriority=function(o,a){var f=xt;try{return xt=o,a()}finally{xt=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,f,g){var M=a.current,T=Tn(),D=ur(M);return f=hm(f),a.context===null?a.context=f:a.pendingContext=f,a=zi(T,D),a.payload={element:o},g=g===void 0?null:g,g!==null&&(a.callback=g),ar(M,a),o=ei(M,D,T),o!==null&&il(o,M,D),D},t};nv.exports=mA;var gA=nv.exports;const _A=sy(gA),Fd={},zA=r=>void Object.assign(Fd,r);function vA(r,e){function t(d,{args:p=[],attach:m,..._},y){let E=`${d[0].toUpperCase()}${d.slice(1)}`,x;if(d==="primitive"){if(_.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const v=_.object;x=$s(v,{type:d,root:y,attach:m,primitive:!0})}else{const v=Fd[E];if(!v)throw new Error(`R3F: ${E} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=$s(new v(...p),{type:d,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x.isBufferGeometry?x.__r3f.attach="geometry":x.isMaterial&&(x.__r3f.attach="material")),E!=="inject"&&Kh(x,_),x}function n(d,p){let m=!1;if(p){var _,y;(_=p.__r3f)!=null&&_.attach?Jh(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(y=d.__r3f)==null||y.objects.push(p),p.__r3f||$s(p,{}),p.__r3f.parent=d,Wf(p),eo(p)}}function i(d,p,m){let _=!1;if(p){var y,E;if((y=p.__r3f)!=null&&y.attach)Jh(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"}),d.dispatchEvent({type:"childadded",child:p});const x=d.children.filter(w=>w!==p),v=x.indexOf(m);d.children=[...x.slice(0,v),p,...x.slice(v)],_=!0}_||(E=d.__r3f)==null||E.objects.push(p),p.__r3f||$s(p,{}),p.__r3f.parent=d,Wf(p),eo(p)}}function s(d,p,m=!1){d&&[...d].forEach(_=>l(p,_,m))}function l(d,p,m){if(p){var _,y,E;if(p.__r3f&&(p.__r3f.parent=null),(_=d.__r3f)!=null&&_.objects&&(d.__r3f.objects=d.__r3f.objects.filter(A=>A!==p)),(y=p.__r3f)!=null&&y.attach)Yg(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var x;d.remove(p),(x=p.__r3f)!=null&&x.root&&AA(Bc(p),p)}const w=(E=p.__r3f)==null?void 0:E.primitive,S=!w&&(m===void 0?p.dispose!==null:m);if(!w){var v;s((v=p.__r3f)==null?void 0:v.objects,p,S),s(p.children,p,S)}if(delete p.__r3f,S&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?Vf.unstable_scheduleCallback(Vf.unstable_IdlePriority,A):A()}eo(d)}}function c(d,p,m,_){var y;const E=(y=d.__r3f)==null?void 0:y.parent;if(!E)return;const x=t(p,m,d.__r3f.root);if(d.children){for(const v of d.children)v.__r3f&&n(x,v);d.children=d.children.filter(v=>!v.__r3f)}d.__r3f.objects.forEach(v=>n(x,v)),d.__r3f.objects=[],d.__r3f.autoRemovedBeforeAppend||l(E,d),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(E,x),x.raycast&&x.__r3f.eventCount&&Bc(x).getState().internal.interaction.push(x),[_,_.alternate].forEach(v=>{v!==null&&(v.stateNode=x,v.ref&&(typeof v.ref=="function"?v.ref(x):v.ref.current=x))})}const u=()=>{};return{reconciler:_A({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;m.__r3f&&(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{p&&l(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const _=d.getState().scene;_.__r3f&&i(_,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;return!!((p=d==null?void 0:d.__r3f)!=null?p:{}).handlers},prepareUpdate(d,p,m,_){var y;if(((y=d==null?void 0:d.__r3f)!=null?y:{}).primitive&&_.object&&_.object!==d)return[!0];{const{args:x=[],children:v,...w}=_,{args:S=[],children:A,...R}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((N,O)=>N!==S[O]))return[!0];const C=cv(d,w,R,!0);return C.changes.length?[!1,C]:null}},commitUpdate(d,[p,m],_,y,E,x){p?c(d,_,E,x):Kh(d,m)},commitMount(d,p,m,_){var y;const E=(y=d.__r3f)!=null?y:{};d.raycast&&E.handlers&&E.eventCount&&Bc(d).getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>$s(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:_}=(p=d.__r3f)!=null?p:{};m&&_&&Yg(_,d,m),d.isObject3D&&(d.visible=!1),eo(d)},unhideInstance(d,p){var m;const{attach:_,parent:y}=(m=d.__r3f)!=null?m:{};_&&y&&Jh(y,d,_),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),eo(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():so.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Dt.fun(performance.now)?performance.now:Dt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Dt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Dt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Kh}}var Vg,Gg;const Zh=r=>"colorSpace"in r||"outputColorSpace"in r,sv=()=>{var r;return(r=Fd.ColorManagement)!=null?r:null},ov=r=>r&&r.isOrthographicCamera,kA=r=>r&&r.hasOwnProperty("current"),au=typeof window<"u"&&((Vg=window.document)!=null&&Vg.createElement||((Gg=window.navigator)==null?void 0:Gg.product)==="ReactNative")?nn.useLayoutEffect:nn.useEffect;function yA(r){const e=nn.useRef(r);return au(()=>void(e.current=r),[r]),e}function HA({set:r}){return au(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class xA extends nn.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}xA.getDerivedStateFromError=()=>({error:!0});const av="__default",Wg=new Map,MA=r=>r&&!!r.memoized&&!!r.changes;function lv(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const Qo=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Bc(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Dt={obj:r=>r===Object(r)&&!Dt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Dt.str(r)||Dt.num(r)||Dt.boo(r))return r===e;const s=Dt.obj(r);if(s&&n==="reference")return r===e;const l=Dt.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Dt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Dt.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function SA(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function $s(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function Gf(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const Xg=/-\d+$/;function Jh(r,e,t){if(Dt.str(t)){if(Xg.test(t)){const s=t.replace(Xg,""),{target:l,key:c}=Gf(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=Gf(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function Yg(r,e,t){var n,i;if(Dt.str(t)){const{target:s,key:l}=Gf(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function cv(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){const d=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let E=0;E<y.length;E++)i.hasOwnProperty(y[E])||p.unshift([y[E],av+"remove"])}p.forEach(([y,E])=>{var x;if((x=r.__r3f)!=null&&x.primitive&&y==="object"||Dt.equ(E,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,E,!0,[]]);let v=[];y.includes("-")&&(v=y.split("-")),m.push([y,E,!1,v]);for(const w in i){const S=i[w];w.startsWith(`${y}-`)&&m.push([w,S,!1,w.split("-")])}});const _={...i};return d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.args&&(_.args=d.memoizedProps.args),d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.attach&&(_.attach=d.memoizedProps.attach),{memoized:_,changes:m}}const EA=typeof process<"u"&&!1;function Kh(r,e){var t;const n=r.__r3f,i=n==null?void 0:n.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:l,changes:c}=MA(e)?e:cv(r,e),u=n==null?void 0:n.eventCount;r.__r3f&&(r.__r3f.memoizedProps=l);for(let m=0;m<c.length;m++){let[_,y,E,x]=c[m];if(Zh(r)){const A="srgb",R="srgb-linear";_==="encoding"?(_="colorSpace",y=y===3001?A:R):_==="outputEncoding"&&(_="outputColorSpace",y=y===3001?A:R)}let v=r,w=v[_];if(x.length&&(w=x.reduce((S,A)=>S[A],r),!(w&&w.set))){const[S,...A]=x.reverse();v=A.reverse().reduce((R,C)=>R[C],r),_=S}if(y===av+"remove")if(v.constructor){let S=Wg.get(v.constructor);S||(S=new v.constructor,Wg.set(v.constructor,S)),y=S[_]}else y=0;if(E&&n)y?n.handlers[_]=y:delete n.handlers[_],n.eventCount=Object.keys(n.handlers).length;else if(w&&w.set&&(w.copy||w instanceof ss)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&(EA?w.constructor.name===y.constructor.name:w.constructor===y.constructor))w.copy(y);else if(y!==void 0){var h;const S=(h=w)==null?void 0:h.isColor;!S&&w.setScalar?w.setScalar(y):w instanceof ss&&y instanceof ss?w.mask=y.mask:w.set(y),!sv()&&s&&!s.linear&&S&&w.convertSRGBToLinear()}}else{var d;if(v[_]=y,(d=v[_])!=null&&d.isTexture&&v[_].format===Nn&&v[_].type===Ui&&s){const S=v[_];Zh(S)&&Zh(s.gl)?S.colorSpace=s.gl.outputColorSpace:S.encoding=s.gl.outputEncoding}}eo(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=Bc(r).getState().internal,_=m.interaction.indexOf(r);_>-1&&m.interaction.splice(_,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&Wf(r),r}function eo(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Wf(r){r.onUpdate==null||r.onUpdate(r)}function wA(r,e){r.manual||(ov(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Rc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function TA(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return so.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return so.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return so.ContinuousEventPriority;default:return so.DefaultEventPriority}}function uv(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function AA(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{uv(t.capturedMap,e,n,i)})}function bA(r){function e(u){const{internal:h}=r.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=r.getState(),p=new Set,m=[],_=h?h(d.internal.interaction):d.internal.interaction;for(let v=0;v<_.length;v++){const w=Qo(_[v]);w&&(w.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function y(v){const w=Qo(v);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var S;w.events.compute==null||w.events.compute(u,w,(S=w.previousRoot)==null?void 0:S.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(v,!0):[]}let E=_.flatMap(y).sort((v,w)=>{const S=Qo(v.object),A=Qo(w.object);return!S||!A?v.distance-w.distance:A.events.priority-S.events.priority||v.distance-w.distance}).filter(v=>{const w=Rc(v);return p.has(w)?!1:(p.add(w),!0)});d.events.filter&&(E=d.events.filter(E,d));for(const v of E){let w=v.object;for(;w;){var x;(x=w.__r3f)!=null&&x.eventCount&&m.push({...v,eventObject:w}),w=w.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let v of d.internal.capturedMap.get(u.pointerId).values())p.has(Rc(v.intersection))||m.push(v.intersection);return m}function i(u,h,d,p){const m=r.getState();if(u.length){const _={stopped:!1};for(const y of u){const E=Qo(y.object)||m,{raycaster:x,pointer:v,camera:w,internal:S}=E,A=new U(v.x,v.y,0).unproject(w),R=L=>{var z,te;return(z=(te=S.capturedMap.get(L))==null?void 0:te.has(y.eventObject))!=null?z:!1},C=L=>{const z={intersection:y,target:h.target};S.capturedMap.has(L)?S.capturedMap.get(L).set(y.eventObject,z):S.capturedMap.set(L,new Map([[y.eventObject,z]])),h.target.setPointerCapture(L)},N=L=>{const z=S.capturedMap.get(L);z&&uv(S.capturedMap,y.eventObject,z,L)};let O={};for(let L in h){let z=h[L];typeof z!="function"&&(O[L]=z)}let b={...y,...O,pointer:v,intersections:u,stopped:_.stopped,delta:d,unprojectedPoint:A,ray:x.ray,camera:w,stopPropagation(){const L="pointerId"in h&&S.capturedMap.get(h.pointerId);if((!L||L.has(y.eventObject))&&(b.stopped=_.stopped=!0,S.hovered.size&&Array.from(S.hovered.values()).find(z=>z.eventObject===y.eventObject))){const z=u.slice(0,u.indexOf(y));s([...z,y])}},target:{hasPointerCapture:R,setPointerCapture:C,releasePointerCapture:N},currentTarget:{hasPointerCapture:R,setPointerCapture:C,releasePointerCapture:N},nativeEvent:h};if(p(b),_.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,_=m==null?void 0:m.handlers;if(h.hovered.delete(Rc(d)),m!=null&&m.eventCount){const y={...d,intersections:u};_.onPointerOut==null||_.onPointerOut(y),_.onPointerLeave==null||_.onPointerLeave(y)}}}function l(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:d}=r.getState();"pointerId"in h&&d.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),s([]))})}}return function(d){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=d;const _=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(d,_?t:void 0),v=y?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=x.map(S=>S.eventObject)),y&&!x.length&&v<=2&&(l(d,m.interaction),p&&p(d)),_&&s(x);function w(S){const A=S.eventObject,R=A.__r3f,C=R==null?void 0:R.handlers;if(R!=null&&R.eventCount)if(_){if(C.onPointerOver||C.onPointerEnter||C.onPointerOut||C.onPointerLeave){const N=Rc(S),O=m.hovered.get(N);O?O.stopped&&S.stopPropagation():(m.hovered.set(N,S),C.onPointerOver==null||C.onPointerOver(S),C.onPointerEnter==null||C.onPointerEnter(S))}C.onPointerMove==null||C.onPointerMove(S)}else{const N=C[u];N?(!y||m.initialHits.includes(A))&&(l(d,m.interaction.filter(O=>!m.initialHits.includes(O))),N(S)):y&&m.initialHits.includes(A)&&l(d,m.interaction.filter(O=>!m.initialHits.includes(O)))}}i(x,d,v,w)}}return{handlePointer:c}}const hv=r=>!!(r!=null&&r.render),fv=nn.createContext(null),RA=(r,e)=>{const t=pA((c,u)=>{const h=new U,d=new U,p=new U;function m(v=u().camera,w=d,S=u().size){const{width:A,height:R,top:C,left:N}=S,O=A/R;w.isVector3?p.copy(w):p.set(...w);const b=v.getWorldPosition(h).distanceTo(p);if(ov(v))return{width:A/v.zoom,height:R/v.zoom,top:C,left:N,factor:1,distance:b,aspect:O};{const L=v.fov*Math.PI/180,z=2*Math.tan(L/2)*b,te=z*(A/R);return{width:te,height:z,top:C,left:N,factor:A/te,distance:b,aspect:O}}}let _;const y=v=>c(w=>({performance:{...w.performance,current:v}})),E=new fe;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(v=1)=>r(u(),v),advance:(v,w)=>e(v,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new Id,pointer:E,mouse:E,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const v=u();_&&clearTimeout(_),v.performance.current!==v.performance.min&&y(v.performance.min),_=setTimeout(()=>y(u().performance.max),v.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:v=>c(w=>({...w,events:{...w.events,...v}})),setSize:(v,w,S,A,R)=>{const C=u().camera,N={width:v,height:w,top:A||0,left:R||0,updateStyle:S};c(O=>({size:N,viewport:{...O.viewport,...m(C,d,N)}}))},setDpr:v=>c(w=>{const S=lv(v);return{viewport:{...w.viewport,dpr:S,initialDpr:w.viewport.initialDpr||S}}}),setFrameloop:(v="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,v!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:v}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:nn.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(v,w,S)=>{const A=u().internal;return A.priority=A.priority+(w>0?1:0),A.subscribers.push({ref:v,priority:w,store:S}),A.subscribers=A.subscribers.sort((R,C)=>R.priority-C.priority),()=>{const R=u().internal;R!=null&&R.subscribers&&(R.priority=R.priority-(w>0?1:0),R.subscribers=R.subscribers.filter(C=>C.ref!==v))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,wA(c,u),d.setPixelRatio(h.dpr);const _=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,_)}c!==l&&(l=c,p(_=>({viewport:{..._.viewport,..._.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Cc,CA=new Set,PA=new Set,LA=new Set;function jh(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function $o(r,e){switch(r){case"before":return jh(CA,e);case"after":return jh(PA,e);case"tail":return jh(LA,e)}}let Qh,$h;function ef(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),Qh=e.internal.subscribers,Cc=0;Cc<Qh.length;Cc++)$h=Qh[Cc],$h.ref.current($h.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function IA(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,$o("before",h),t=!0;for(const p of r.values()){var d;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((d=s.gl.xr)!=null&&d.isPresenting)&&(n+=ef(h,s))}if(t=!1,$o("after",h),n===0)return $o("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,d=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),d));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(d>1?h.internal.frames=Math.min(60,h.internal.frames+d):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,d=!0,p,m){if(d&&$o("before",h),p)ef(h,p,m);else for(const _ of r.values())ef(h,_.store.getState());d&&$o("after",h)}return{loop:l,invalidate:c,advance:u}}function dv(){const r=nn.useContext(fv);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function VA(r=t=>t,e){return dv()(r,e)}function GA(r,e=0){const t=dv(),n=t.getState().internal.subscribe,i=yA(r);return au(()=>n(i,e,t),[e,n,t]),null}const fo=new Map,{invalidate:qg,advance:Zg}=IA(fo),{reconciler:Gc,applyProps:js}=vA(fo,TA),Qs={objects:"shallow",strict:!1},UA=(r,e)=>{const t=typeof r=="function"?r(e):r;return hv(t)?t:new fd({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function DA(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function WA(r){const e=fo.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||RA(qg,Zg),l=t||Gc.createContainer(s,so.ConcurrentRoot,null,!1,null,"",i,null);e||fo.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(d={}){let{gl:p,size:m,scene:_,events:y,onCreated:E,shadows:x=!1,linear:v=!1,flat:w=!1,legacy:S=!1,orthographic:A=!1,frameloop:R="always",dpr:C=[1,2],performance:N,raycaster:O,camera:b,onPointerMissed:L}=d,z=s.getState(),te=z.gl;z.gl||z.set({gl:te=UA(p,r)});let W=z.raycaster;W||z.set({raycaster:W=new $_});const{params:q,...Q}=O||{};if(Dt.equ(Q,W,Qs)||js(W,{...Q}),Dt.equ(q,W.params,Qs)||js(W,{params:{...W.params,...q}}),!z.camera||z.camera===h&&!Dt.equ(h,b,Qs)){h=b;const J=b instanceof Ra,he=J?b:A?new Pa(0,0,0,0,.1,1e3):new un(75,0,.1,1e3);J||(he.position.z=5,b&&(js(he,b),("aspect"in b||"left"in b||"right"in b||"bottom"in b||"top"in b)&&(he.manual=!0,he.updateProjectionMatrix())),!z.camera&&!(b!=null&&b.rotation)&&he.lookAt(0,0,0)),z.set({camera:he}),W.camera=he}if(!z.scene){let J;_!=null&&_.isScene?J=_:(J=new dd,_&&js(J,_)),z.set({scene:$s(J)})}if(!z.xr){var ce;const J=(le,de)=>{const Se=s.getState();Se.frameloop!=="never"&&Zg(le,!0,Se,de)},he=()=>{const le=s.getState();le.gl.xr.enabled=le.gl.xr.isPresenting,le.gl.xr.setAnimationLoop(le.gl.xr.isPresenting?J:null),le.gl.xr.isPresenting||qg(le)},X={connect(){const le=s.getState().gl;le.xr.addEventListener("sessionstart",he),le.xr.addEventListener("sessionend",he)},disconnect(){const le=s.getState().gl;le.xr.removeEventListener("sessionstart",he),le.xr.removeEventListener("sessionend",he)}};typeof((ce=te.xr)==null?void 0:ce.addEventListener)=="function"&&X.connect(),z.set({xr:X})}if(te.shadowMap){const J=te.shadowMap.enabled,he=te.shadowMap.type;if(te.shadowMap.enabled=!!x,Dt.boo(x))te.shadowMap.type=na;else if(Dt.str(x)){var ie;const X={basic:Qg,percentage:Xc,soft:na,variance:di};te.shadowMap.type=(ie=X[x])!=null?ie:na}else Dt.obj(x)&&Object.assign(te.shadowMap,x);(J!==te.shadowMap.enabled||he!==te.shadowMap.type)&&(te.shadowMap.needsUpdate=!0)}const V=sv();V&&("enabled"in V?V.enabled=!S:"legacyMode"in V&&(V.legacyMode=S)),u||js(te,{outputEncoding:v?3e3:3001,toneMapping:w?mi:qf}),z.legacy!==S&&z.set(()=>({legacy:S})),z.linear!==v&&z.set(()=>({linear:v})),z.flat!==w&&z.set(()=>({flat:w})),p&&!Dt.fun(p)&&!hv(p)&&!Dt.equ(p,te,Qs)&&js(te,p),y&&!z.events.handlers&&z.set({events:y(s)});const Z=DA(r,m);return Dt.equ(Z,z.size,Qs)||z.setSize(Z.width,Z.height,Z.updateStyle,Z.top,Z.left),C&&z.viewport.dpr!==lv(C)&&z.setDpr(C),z.frameloop!==R&&z.setFrameloop(R),z.onPointerMissed||z.set({onPointerMissed:L}),N&&!Dt.equ(N,z.performance,Qs)&&z.set(J=>({performance:{...J.performance,...N}})),c=E,u=!0,this},render(d){return u||this.configure(),Gc.updateContainer(Jg.jsx(NA,{store:s,children:d,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){FA(r)}}}function NA({store:r,children:e,onCreated:t,rootElement:n}){return au(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Jg.jsx(fv.Provider,{value:r,children:e})}function FA(r,e){const t=fo.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),Gc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),SA(i),fo.delete(r),e&&e(r)}catch{}},500)})}}Gc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:nn.version});const tf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function XA(r){const{handlePointer:e}=bA(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(tf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=tf[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=tf[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}export{Pr as B,Le as C,Pi as D,xA as E,Be as F,P_ as M,Pa as O,un as P,Fn as Q,mo as R,RT as S,Kw as T,U as V,e_ as W,kg as _,oy as a,ay as b,fe as c,yr as d,GA as e,wd as f,dn as g,mt as h,k_ as i,Wc as j,gd as k,Ly as l,ot as m,zA as n,yA as o,au as p,WA as q,kA as r,HA as s,FA as t,VA as u,XA as v,BA as w,$0 as x};
